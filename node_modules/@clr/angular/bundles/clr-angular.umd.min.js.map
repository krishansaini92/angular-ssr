{"version":3,"sources":["../../../projects/clr-angular/src/icon/icon.ts","../../projects/clr-angular/src/utils/enums/key-codes.enum.ts","../../../projects/clr-angular/src/icon/icon.module.ts","../projects/clr-angular/src/utils/focus/key-focus/util.ts","../projects/clr-angular/src/utils/popover/providers/popover-toggle.service.ts","../projects/clr-angular/src/utils/popover/enums/viewport-violation.enum.ts","../projects/clr-angular/src/utils/popover/enums/alignment.enum.ts","../projects/clr-angular/src/utils/popover/providers/popover-events.service.ts","../../projects/clr-angular/src/utils/popover/position-operators.ts","../projects/clr-angular/src/utils/popover/enums/axis.enum.ts","../projects/clr-angular/src/utils/popover/providers/popover-position.service.ts","../../projects/clr-angular/src/utils/popover/popover-content.ts","../../projects/clr-angular/src/utils/popover/popover-open-close-button.ts","../../projects/clr-angular/src/utils/popover/popover-close-button.ts","../../projects/clr-angular/src/utils/popover/popover-anchor.ts","../../projects/clr-angular/src/utils/popover/popover.module.ts","../../projects/clr-angular/src/utils/loading/loading.ts","../../projects/clr-angular/src/utils/loading/loading-listener.ts","../../projects/clr-angular/src/button/providers/button-in-group.service.ts","../../projects/clr-angular/src/button/button-group/button.ts","../../projects/clr-angular/src/utils/i18n/common-strings.default.ts","../../projects/clr-angular/src/utils/i18n/common-strings.service.ts","../../projects/clr-angular/src/utils/id-generator/id-generator.service.ts","../projects/clr-angular/src/utils/popover/enums/side.enum.ts","../projects/clr-angular/src/utils/popover/enums/positions.enum.ts","../../projects/clr-angular/src/button/button-group/button-group.ts","../../projects/clr-angular/src/button/button-group/button-group.module.ts","../../projects/clr-angular/src/button/button-loading/loading-button.ts","../../projects/clr-angular/src/button/button-loading/loading-button.module.ts","../../../projects/clr-angular/src/button/button.module.ts","../../projects/clr-angular/src/utils/host-wrapping/empty-anchor.ts","../../projects/clr-angular/src/utils/host-wrapping/host-wrapping.module.ts","../../../node_modules/tslib/tslib.es6.js","../../projects/clr-angular/src/utils/host-wrapping/host-wrapper.ts","../projects/clr-angular/src/forms/common/providers/control-id.service.ts","../projects/clr-angular/src/forms/common/providers/layout.service.ts","../projects/clr-angular/src/forms/common/providers/ng-control.service.ts","../projects/clr-angular/src/forms/common/if-control-state/if-control-state.service.ts","../projects/clr-angular/src/forms/common/providers/control-class.service.ts","../projects/clr-angular/src/forms/common/providers/mark-control.service.ts","../../projects/clr-angular/src/forms/common/wrapped-control.ts","../../projects/clr-angular/src/forms/common/label.ts","../../projects/clr-angular/src/forms/common/success.ts","../../projects/clr-angular/src/forms/common/abstract-container.ts","../../projects/clr-angular/src/forms/common/control-container.ts","../../projects/clr-angular/src/forms/common/control.ts","../../projects/clr-angular/src/forms/common/error.ts","../../projects/clr-angular/src/forms/common/form.ts","../../projects/clr-angular/src/forms/common/helper.ts","../projects/clr-angular/src/forms/common/if-control-state/abstract-if-state.ts","../projects/clr-angular/src/forms/common/if-control-state/if-error.ts","../projects/clr-angular/src/forms/common/if-control-state/if-success.ts","../../projects/clr-angular/src/forms/common/layout.ts","../../projects/clr-angular/src/forms/common/common.module.ts","../../projects/clr-angular/src/forms/checkbox/checkbox-wrapper.ts","../../projects/clr-angular/src/forms/checkbox/checkbox.ts","../../projects/clr-angular/src/forms/checkbox/checkbox-container.ts","../../projects/clr-angular/src/forms/checkbox/checkbox.module.ts","../../projects/clr-angular/src/utils/conditional/if-active.service.ts","../../projects/clr-angular/src/utils/conditional/if-active.directive.ts","../../projects/clr-angular/src/utils/conditional/if-open.directive.ts","../../projects/clr-angular/src/utils/conditional/if-expanded.service.ts","../../projects/clr-angular/src/utils/conditional/if-expanded.directive.ts","../../projects/clr-angular/src/utils/conditional/conditional.module.ts","../../projects/clr-angular/src/utils/focus-trap/focus-trap-tracker.service.ts","../../projects/clr-angular/src/utils/focus-trap/focus-trap.directive.ts","../../projects/clr-angular/src/utils/focus-trap/focus-trap.module.ts","../../projects/clr-angular/src/utils/key-codes/key-codes.ts","../projects/clr-angular/src/forms/datepicker/utils/constants.ts","../projects/clr-angular/src/forms/datepicker/utils/date-utils.ts","../projects/clr-angular/src/forms/datepicker/model/day-view.model.ts","../projects/clr-angular/src/forms/datepicker/model/day.model.ts","../projects/clr-angular/src/forms/datepicker/model/calendar-view.model.ts","../projects/clr-angular/src/forms/datepicker/model/calendar.model.ts","../projects/clr-angular/src/forms/datepicker/providers/date-navigation.service.ts","../projects/clr-angular/src/forms/datepicker/providers/datepicker-focus.service.ts","../projects/clr-angular/src/forms/datepicker/providers/locale-helper.service.ts","../projects/clr-angular/src/forms/datepicker/providers/date-io.service.ts","../../projects/clr-angular/src/forms/datepicker/calendar.ts","../projects/clr-angular/src/forms/common/providers/focus.service.ts","../projects/clr-angular/src/forms/datepicker/providers/date-form-control.service.ts","../../projects/clr-angular/src/utils/breakpoints/breakpoints.ts","../projects/clr-angular/src/forms/datepicker/providers/datepicker-enabled.service.ts","../projects/clr-angular/src/forms/datepicker/providers/view-manager.service.ts","../../projects/clr-angular/src/forms/datepicker/date-container.ts","../../projects/clr-angular/src/utils/component/is-boolean-attribute-set.ts","../../projects/clr-angular/src/forms/datepicker/date-input.ts","../../projects/clr-angular/src/forms/datepicker/datepicker-view-manager.ts","../../projects/clr-angular/src/forms/datepicker/day.ts","../../projects/clr-angular/src/forms/datepicker/daypicker.ts","../../projects/clr-angular/src/forms/datepicker/monthpicker.ts","../projects/clr-angular/src/forms/datepicker/model/year-range.model.ts","../../projects/clr-angular/src/forms/datepicker/yearpicker.ts","../../projects/clr-angular/src/forms/datepicker/datepicker.module.ts","../../projects/clr-angular/src/forms/input/input-container.ts","../../projects/clr-angular/src/forms/input/input.ts","../../projects/clr-angular/src/forms/input/input.module.ts","../../projects/clr-angular/src/forms/password/password-container.ts","../../projects/clr-angular/src/forms/password/password.ts","../../projects/clr-angular/src/forms/password/password.module.ts","../../projects/clr-angular/src/forms/radio/radio-wrapper.ts","../../projects/clr-angular/src/forms/radio/radio.ts","../../projects/clr-angular/src/forms/radio/radio-container.ts","../../projects/clr-angular/src/forms/radio/radio.module.ts","../../projects/clr-angular/src/forms/select/select-container.ts","../../projects/clr-angular/src/forms/select/select.ts","../../projects/clr-angular/src/forms/select/select.module.ts","../../projects/clr-angular/src/forms/textarea/textarea-container.ts","../../projects/clr-angular/src/forms/textarea/textarea.ts","../../projects/clr-angular/src/forms/textarea/textarea.module.ts","../../projects/clr-angular/src/forms/range/range-container.ts","../../projects/clr-angular/src/forms/range/range.ts","../../projects/clr-angular/src/forms/range/range.module.ts","../projects/clr-angular/src/forms/datalist/providers/datalist-id.service.ts","../../projects/clr-angular/src/forms/datalist/datalist-container.ts","../../projects/clr-angular/src/forms/datalist/datalist-input.ts","../../projects/clr-angular/src/forms/datalist/datalist.ts","../../projects/clr-angular/src/forms/datalist/datalist.module.ts","../projects/clr-angular/src/forms/combobox/model/multi-select-combobox.model.ts","../projects/clr-angular/src/forms/combobox/providers/option-selection.service.ts","../../projects/clr-angular/src/utils/focus/arrow-key-direction.enum.ts","../projects/clr-angular/src/utils/focus/focusable-item/focusable-item.ts","../projects/clr-angular/src/utils/focus/focusable-item/custom-focusable-item-provider.ts","../projects/clr-angular/src/forms/combobox/model/single-select-combobox.model.ts","../projects/clr-angular/src/forms/combobox/model/pseudo-focus.model.ts","../projects/clr-angular/src/forms/combobox/providers/combobox-focus-handler.service.ts","../../projects/clr-angular/src/forms/combobox/option.ts","../../projects/clr-angular/src/popover/common/popover-host-anchor.token.ts","../../projects/clr-angular/src/utils/aria/aria.service.ts","../../projects/clr-angular/src/forms/combobox/options.ts","../projects/clr-angular/src/forms/combobox/providers/combobox-container.service.ts","../../projects/clr-angular/src/forms/combobox/combobox-container.ts","../../projects/clr-angular/src/forms/combobox/option-selected.directive.ts","../../projects/clr-angular/src/utils/focus/focus.service.ts","../../projects/clr-angular/src/forms/combobox/combobox.ts","../../projects/clr-angular/src/forms/combobox/option-items.directive.ts","../../projects/clr-angular/src/progress/spinner/spinner.ts","../esm2015/projects/clr-angular/src/utils/focus/key-focus/enums/focus-direction.enum.ts","../../projects/clr-angular/src/progress/spinner/spinner.module.ts","../projects/clr-angular/src/utils/focus/key-focus/key-focus-item.ts","../projects/clr-angular/src/utils/focus/key-focus/key-focus.ts","../projects/clr-angular/src/utils/focus/key-focus/roving-tabindex.ts","../projects/clr-angular/src/utils/focus/key-focus/key-focus.module.ts","../../projects/clr-angular/src/forms/combobox/combobox.module.ts","../../../projects/clr-angular/src/forms/forms.module.ts","../../projects/clr-angular/src/utils/loading/loading.module.ts","../../projects/clr-angular/src/utils/outside-click/outside-click.ts","../../projects/clr-angular/src/utils/outside-click/index.ts","../../projects/clr-angular/src/utils/outside-click/outside-click.module.ts","../../projects/clr-angular/src/utils/dom-adapter/dom-adapter.ts","../projects/clr-angular/src/utils/drag-and-drop/interfaces/drag-event.interface.ts","../../projects/clr-angular/src/utils/drag-and-drop/drag-event.ts","../projects/clr-angular/src/utils/drag-and-drop/providers/drag-and-drop-event-bus.service.ts","../projects/clr-angular/src/utils/drag-and-drop/providers/drag-event-listener.service.ts","../projects/clr-angular/src/utils/drag-and-drop/providers/draggable-snapshot.service.ts","../../projects/clr-angular/src/utils/drag-and-drop/draggable-ghost.ts","../../projects/clr-angular/src/utils/drag-and-drop/if-dragged.ts","../projects/clr-angular/src/utils/drag-and-drop/providers/drag-handle-registrar.service.ts","../projects/clr-angular/src/utils/drag-and-drop/providers/global-drag-mode.service.ts","../projects/clr-angular/src/utils/drag-and-drop/draggable/draggable.ts","../projects/clr-angular/src/utils/drag-and-drop/droppable/droppable.ts","../../projects/clr-angular/src/utils/drag-and-drop/drag-handle.ts","../../projects/clr-angular/src/utils/drag-and-drop/drag-and-drop.module.ts","../projects/clr-angular/src/utils/animations/expandable-animation/expandable-animation.ts","../projects/clr-angular/src/utils/animations/expandable-animation/index.ts","../projects/clr-angular/src/utils/animations/expandable-animation/expandable-animation.module.ts","../projects/clr-angular/src/utils/focus/focus-on-view-init/focus-on-view-init.provider.ts","../projects/clr-angular/src/utils/focus/focus-on-view-init/focus-on-view-init.ts","../projects/clr-angular/src/utils/focus/focus-on-view-init/focus-on-view-init.module.ts","../projects/clr-angular/src/data/datagrid/providers/custom-filter.ts","../projects/clr-angular/src/data/datagrid/providers/state-debouncer.provider.ts","../projects/clr-angular/src/data/datagrid/providers/page.ts","../projects/clr-angular/src/data/datagrid/providers/filters.ts","../projects/clr-angular/src/data/datagrid/utils/datagrid-filter-registrar.ts","../../projects/clr-angular/src/data/datagrid/datagrid-filter.ts","../projects/clr-angular/src/data/datagrid/built-in/nested-property.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/filters/datagrid-string-filter.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/filters/datagrid-property-numeric-filter.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/filters/datagrid-numeric-filter-impl.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/filters/datagrid-numeric-filter.ts","../../projects/clr-angular/src/utils/chocolate/willy-wonka.ts","../../projects/clr-angular/src/utils/chocolate/oompa-loompa.ts","../projects/clr-angular/src/data/datagrid/providers/row-action-service.ts","../projects/clr-angular/src/data/datagrid/chocolate/datagrid-willy-wonka.ts","../projects/clr-angular/src/data/datagrid/chocolate/actionable-oompa-loompa.ts","../projects/clr-angular/src/data/datagrid/providers/detail.service.ts","../projects/clr-angular/src/data/datagrid/providers/global-expandable-rows.ts","../projects/clr-angular/src/data/datagrid/chocolate/expandable-oompa-loompa.ts","../projects/clr-angular/src/data/datagrid/enums/sort-order.enum.ts","../esm2015/projects/clr-angular/src/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","../projects/clr-angular/src/data/datagrid/providers/sort.ts","../../projects/clr-angular/src/data/datagrid/wrapped-column.ts","../../projects/clr-angular/src/data/datagrid/datagrid-column.ts","../projects/clr-angular/src/data/datagrid/providers/items.ts","../../projects/clr-angular/src/data/datagrid/datagrid-items.ts","../../projects/clr-angular/src/data/datagrid/datagrid-placeholder.ts","../projects/clr-angular/src/popover/signpost/providers/signpost-focus-manager.service.ts","../projects/clr-angular/src/popover/signpost/providers/signpost-id.service.ts","../../projects/clr-angular/src/popover/signpost/signpost-trigger.ts","../../projects/clr-angular/src/popover/signpost/signpost.ts","../../projects/clr-angular/src/data/datagrid/wrapped-cell.ts","../projects/clr-angular/src/data/datagrid/enums/display-mode.enum.ts","../projects/clr-angular/src/data/datagrid/enums/render-step.enum.ts","../../projects/clr-angular/src/data/datagrid/datagrid-cell.ts","../projects/clr-angular/src/data/datagrid/render/render-organizer.ts","../projects/clr-angular/src/data/datagrid/enums/selection-type.ts","../projects/clr-angular/src/data/datagrid/providers/display-mode.service.ts","../projects/clr-angular/src/data/datagrid/providers/selection.ts","../../projects/clr-angular/src/data/datagrid/wrapped-row.ts","../../projects/clr-angular/src/data/datagrid/datagrid-if-expanded.service.ts","../../projects/clr-angular/src/data/datagrid/datagrid-row.ts","../projects/clr-angular/src/data/datagrid/providers/state.provider.ts","../projects/clr-angular/src/data/datagrid/enums/column-changes.enum.ts","../projects/clr-angular/src/data/datagrid/providers/table-size.service.ts","../projects/clr-angular/src/data/datagrid/providers/columns.service.ts","../../projects/clr-angular/src/data/datagrid/datagrid.ts","../../projects/clr-angular/src/data/datagrid/datagrid-action-bar.ts","../../projects/clr-angular/src/data/datagrid/datagrid-action-overflow.ts","../projects/clr-angular/src/data/datagrid/providers/column-resizer.service.ts","../../projects/clr-angular/src/data/datagrid/datagrid-column-separator.ts","../../projects/clr-angular/src/data/datagrid/datagrid-column-toggle-title.ts","../../projects/clr-angular/src/data/datagrid/datagrid-column-toggle-button.ts","../../projects/clr-angular/src/data/datagrid/datagrid-column-toggle.ts","../../projects/clr-angular/src/data/datagrid/datagrid-detail-registerer.ts","../../projects/clr-angular/src/data/datagrid/datagrid-detail-header.ts","../../projects/clr-angular/src/data/datagrid/datagrid-detail.ts","../../projects/clr-angular/src/data/datagrid/datagrid-if-detail.ts","../../projects/clr-angular/src/data/datagrid/datagrid-detail-body.ts","../../projects/clr-angular/src/data/datagrid/datagrid-footer.ts","../projects/clr-angular/src/data/datagrid/providers/column-state.provider.ts","../../projects/clr-angular/src/data/datagrid/datagrid-hideable-column.ts","../../projects/clr-angular/src/data/datagrid/datagrid-items-trackby.ts","../../projects/clr-angular/src/data/datagrid/datagrid-page-size.ts","../../projects/clr-angular/src/data/datagrid/datagrid-pagination.ts","../../projects/clr-angular/src/data/datagrid/datagrid-row-detail.ts","../projects/clr-angular/src/data/datagrid/render/constants.ts","../projects/clr-angular/src/data/datagrid/render/cell-renderer.ts","../projects/clr-angular/src/data/datagrid/render/header-renderer.ts","../projects/clr-angular/src/data/datagrid/render/noop-dom-adapter.ts","../projects/clr-angular/src/data/datagrid/render/row-renderer.ts","../projects/clr-angular/src/data/datagrid/render/main-renderer.ts","../../projects/clr-angular/src/data/datagrid/datagrid.module.ts","../../projects/clr-angular/src/data/stack-view/stack-block.ts","../../projects/clr-angular/src/data/stack-view/stack-view.ts","../../projects/clr-angular/src/data/stack-view/stack-header.ts","../../projects/clr-angular/src/data/stack-view/stack-control.ts","../../projects/clr-angular/src/data/stack-view/stack-input.ts","../../projects/clr-angular/src/data/stack-view/stack-select.ts","../../projects/clr-angular/src/data/stack-view/stack-view-custom-tags.ts","../../projects/clr-angular/src/data/stack-view/stack-content-input.ts","../projects/clr-angular/src/data/tree-view/models/selected-state.enum.ts","../../projects/clr-angular/src/data/stack-view/stack-view.module.ts","../projects/clr-angular/src/data/tree-view/models/tree-node.model.ts","../projects/clr-angular/src/data/tree-view/models/declarative-tree-node.model.ts","../../projects/clr-angular/src/data/tree-view/tree-features.service.ts","../../projects/clr-angular/src/data/tree-view/tree-focus-manager.service.ts","../../projects/clr-angular/src/data/tree-view/tree-node-link.ts","../../projects/clr-angular/src/data/tree-view/tree-node.ts","../../projects/clr-angular/src/data/tree-view/tree.ts","../projects/clr-angular/src/data/tree-view/models/recursive-tree-node.model.ts","../projects/clr-angular/src/data/tree-view/models/async-array.ts","../../projects/clr-angular/src/data/tree-view/recursive-for-of.ts","../../projects/clr-angular/src/data/tree-view/recursive-children.ts","../../projects/clr-angular/src/data/tree-view/tree-view.module.ts","../../../projects/clr-angular/src/data/data.module.ts","../projects/clr-angular/src/utils/focus/focusable-item/linkers.ts","../../projects/clr-angular/src/utils/focus/wrap-observable.ts","../projects/clr-angular/src/popover/dropdown/providers/dropdown-focus-handler.service.ts","../projects/clr-angular/src/popover/dropdown/providers/dropdown.service.ts","../../projects/clr-angular/src/popover/dropdown/dropdown.ts","../projects/clr-angular/src/utils/focus/focusable-item/basic-focusable-item.service.ts","../../projects/clr-angular/src/popover/common/popover.ts","../../projects/clr-angular/src/popover/dropdown/dropdown-item.ts","../../projects/clr-angular/src/popover/common/abstract-popover.ts","../../projects/clr-angular/src/popover/dropdown/dropdown-menu.ts","../../projects/clr-angular/src/popover/dropdown/dropdown-trigger.ts","../../projects/clr-angular/src/popover/dropdown/dropdown.module.ts","../projects/clr-angular/src/emphasis/alert/utils/alert-types.ts","../projects/clr-angular/src/emphasis/alert/providers/icon-and-types.service.ts","../projects/clr-angular/src/emphasis/alert/providers/multi-alert.service.ts","../../projects/clr-angular/src/emphasis/alert/alert.ts","../../projects/clr-angular/src/emphasis/alert/alert-item.ts","../../projects/clr-angular/src/emphasis/alert/alerts.ts","../../projects/clr-angular/src/emphasis/alert/alerts-pager.ts","../../projects/clr-angular/src/emphasis/alert/alert-text.ts","../../projects/clr-angular/src/emphasis/alert/alert.module.ts","../../../projects/clr-angular/src/emphasis/emphasis.module.ts","../../projects/clr-angular/src/layout/nav/responsive-nav-codes.ts","../../projects/clr-angular/src/layout/nav/responsive-nav-control-message.ts","../projects/clr-angular/src/layout/nav/providers/responsive-navigation.service.ts","../../projects/clr-angular/src/layout/main-container/main-container.ts","../../projects/clr-angular/src/layout/main-container/main-container.module.ts","../projects/clr-angular/src/layout/nav/chocolate/main-container-willy-wonka.ts","../projects/clr-angular/src/layout/nav/chocolate/nav-detection-oompa-loompa.ts","../../projects/clr-angular/src/layout/nav/header.ts","../../projects/clr-angular/src/layout/nav/nav-level.ts","../../projects/clr-angular/src/layout/nav/navigation.module.ts","../../projects/clr-angular/src/utils/template-ref/template-ref-container.ts","../../projects/clr-angular/src/utils/template-ref/index.ts","../../projects/clr-angular/src/utils/template-ref/template-ref.module.ts","../projects/clr-angular/src/layout/tabs/chocolate/tabs-willy-wonka.ts","../projects/clr-angular/src/layout/tabs/enums/tabs-layout.enum.ts","../projects/clr-angular/src/layout/tabs/chocolate/active-oompa-loompa.ts","../projects/clr-angular/src/layout/tabs/providers/tabs.service.ts","../../projects/clr-angular/src/layout/tabs/tab-content.ts","../../projects/clr-angular/src/layout/tabs/tabs-id.provider.ts","../../projects/clr-angular/src/layout/tabs/tab-link.directive.ts","../../projects/clr-angular/src/layout/tabs/tab.ts","../../projects/clr-angular/src/layout/tabs/tab-overflow-content.ts","../../projects/clr-angular/src/layout/tabs/tabs.ts","../../projects/clr-angular/src/layout/tabs/tabs.module.ts","../projects/clr-angular/src/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","../projects/clr-angular/src/layout/vertical-nav/providers/vertical-nav-icon.service.ts","../projects/clr-angular/src/layout/vertical-nav/providers/vertical-nav.service.ts","../../projects/clr-angular/src/layout/vertical-nav/vertical-nav.ts","../projects/clr-angular/src/layout/vertical-nav/providers/vertical-nav-group.service.ts","../../projects/clr-angular/src/layout/vertical-nav/vertical-nav-group.ts","../../projects/clr-angular/src/layout/vertical-nav/vertical-nav-group-children.ts","../../projects/clr-angular/src/layout/vertical-nav/vertical-nav-icon.ts","../../projects/clr-angular/src/layout/vertical-nav/vertical-nav-link.ts","../../projects/clr-angular/src/layout/vertical-nav/vertical-nav.module.ts","../../../projects/clr-angular/src/layout/layout.module.ts","../../projects/clr-angular/src/utils/scrolling/scrolling-service.ts","../../../projects/clr-angular/src/modal/modal.ts","../../../projects/clr-angular/src/modal/modal-body.ts","../../../projects/clr-angular/src/modal/modal.module.ts","../../projects/clr-angular/src/popover/signpost/signpost-positions.ts","../../projects/clr-angular/src/popover/signpost/signpost-content.ts","../../projects/clr-angular/src/popover/signpost/signpost.module.ts","../projects/clr-angular/src/popover/tooltip/providers/tooltip-id.service.ts","../../projects/clr-angular/src/popover/tooltip/tooltip.ts","../../projects/clr-angular/src/popover/tooltip/tooltip-content.ts","../../projects/clr-angular/src/popover/tooltip/tooltip-trigger.ts","../../projects/clr-angular/src/popover/tooltip/tooltip.module.ts","../../../projects/clr-angular/src/popover/popover.module.ts","../../projects/clr-angular/src/wizard/providers/button-hub.service.ts","../../projects/clr-angular/src/wizard/providers/page-collection.service.ts","../../projects/clr-angular/src/wizard/providers/wizard-navigation.service.ts","../../projects/clr-angular/src/wizard/providers/header-actions.service.ts","../../../projects/clr-angular/src/wizard/wizard-header-action.ts","../../../projects/clr-angular/src/wizard/wizard-page-buttons.ts","../../../projects/clr-angular/src/wizard/wizard-page-header-actions.ts","../../../projects/clr-angular/src/wizard/wizard-page-navtitle.ts","../../../projects/clr-angular/src/wizard/wizard-page-title.ts","../../../projects/clr-angular/src/wizard/wizard-page.ts","../../../projects/clr-angular/src/wizard/wizard.ts","../../../projects/clr-angular/src/wizard/wizard-button.ts","../../../projects/clr-angular/src/wizard/wizard-custom-tags.ts","../../../projects/clr-angular/src/wizard/wizard-stepnav.ts","../../../projects/clr-angular/src/wizard/wizard-stepnav-item.ts","../../projects/clr-angular/src/accordion/enums/accordion-strategy.enum.ts","../../projects/clr-angular/src/accordion/enums/accordion-status.enum.ts","../../../projects/clr-angular/src/wizard/wizard.module.ts","../../projects/clr-angular/src/accordion/models/accordion.model.ts","../../projects/clr-angular/src/accordion/providers/accordion.service.ts","../../projects/clr-angular/src/utils/animations/constants.ts","../../projects/clr-angular/src/accordion/utils/animation.ts","../../../projects/clr-angular/src/accordion/accordion-description.ts","../../../projects/clr-angular/src/accordion/accordion-panel.ts","../../../projects/clr-angular/src/accordion/accordion-title.ts","../../../projects/clr-angular/src/accordion/accordion.ts","../../../projects/clr-angular/src/accordion/accordion-content.ts","../../projects/clr-angular/src/accordion/chocolate/accordion-willy-wonka.ts","../../projects/clr-angular/src/accordion/chocolate/accordion-oompa-loompa.ts","../../../projects/clr-angular/src/accordion/accordion.module.ts","../projects/clr-angular/src/accordion/stepper/models/stepper.model.ts","../projects/clr-angular/src/accordion/stepper/providers/stepper.service.ts","../../projects/clr-angular/src/utils/forms/validation.ts","../../projects/clr-angular/src/accordion/stepper/step-button.ts","../../projects/clr-angular/src/accordion/stepper/stepper-panel.ts","../../projects/clr-angular/src/accordion/stepper/stepper.ts","../projects/clr-angular/src/accordion/stepper/chocolate/stepper-willy-wonka.ts","../projects/clr-angular/src/accordion/stepper/chocolate/stepper-oompa-loompa.ts","../../projects/clr-angular/src/accordion/stepper/stepper.module.ts","../../projects/clr-angular/src/progress/progress-bars/progress-bar.ts","../../projects/clr-angular/src/timeline/enums/timeline-layout.enum.ts","../../projects/clr-angular/src/timeline/enums/timeline-step-state.enum.ts","../../projects/clr-angular/src/progress/progress-bars/progress-bar.module.ts","../../projects/clr-angular/src/timeline/providers/timeline-icon-attribute.service.ts","../../../projects/clr-angular/src/timeline/timeline.ts","../../../projects/clr-angular/src/timeline/timeline-step-title.ts","../../../projects/clr-angular/src/timeline/timeline-step.ts","../../../projects/clr-angular/src/timeline/timeline-step-description.ts","../../../projects/clr-angular/src/timeline/timeline-step-header.ts","../../../projects/clr-angular/src/timeline/timeline.module.ts","../../../../projects/clr-angular/src/clr-angular.module.ts","../../projects/clr-angular/src/utils/a11y/aria-live.service.ts","../../projects/clr-angular/src/popover/dropdown/menu-positions.ts","../projects/clr-angular/src/utils/animations/collapse/collapse.ts","../projects/clr-angular/src/utils/animations/fade/fade.ts","../projects/clr-angular/src/utils/animations/fade-slide/fade-slide.ts","../projects/clr-angular/src/utils/animations/slide/slide.ts"],"names":["Directive","args","selector","KeyCodes","IEKeyCodes","CLR_ICON_DIRECTIVES","ClrIconCustomTag","CdsIconCustomTag","keyValidator","key","ArrowUp","ArrowDown","ArrowRight","ArrowLeft","Space","Escape","preventArrowKeyScroll","event","validKey","preventDefault","NgModule","imports","CommonModule","declarations","exports","ClrPopoverToggleService","this","_open","_openChange","Subject","_openEventChange","_popoverAligned","Object","defineProperty","prototype","asObservable","_openEvent","next","getEventChange","value","toggleWithEvent","openEvent","open","popoverAlignedEmit","popoverNode","Injectable","ClrViewportViolation","ClrAlignment","ClrPopoverEventsService","renderer","smartOpenService","document","_this","outsideClickClose","scrollToClose","subscriptions","push","openChange","subscribe","addEscapeListener","addClickListener","addScrollListener","removeAllEventListeners","ignoredEvent","documentScroller","fromEvent","capture","scrollSubscription","pipe","filter","testForSmartPopoverContentContainer","setAnchorFocus","removeScrollListener","unsubscribe","target","classList","parentElement","localName","contains","documentClickListener","listen","focus","removeClickListener","escapeListener","removeEscapeListener","_anchorButtonRef","ref","_closeButtonRef","setCloseFocus","nativeElement","anchorButtonRef","_contentRef","host","ngOnDestroy","forEach","sub","Renderer2","HTMLDocument","decorators","type","Inject","DOCUMENT","ClrAxis","flipSides","position","assign","side","nudgeContent","forward","nextAlignment","content","flipSidesAndNudgeContent","flip","nudge","nudgeBack","align","anchor","xDiff","left","yDiff","top","axis","alignHorizontal","height","width","alignVertical","xOffset","yOffset","horizontalOffset","START","CENTER","END","verticalOffset","ClrPopoverPositionService","eventService","platformId","_shouldRealign","shouldRealign","realign","_position","alignContent","isPlatformBrowser","currentAnchorCoords","getBoundingClientRect","currentContentCoords","contentOffsets","visibilityViolations","offset","violations","mockCoords","TOP","LEFT","window","innerHeight","documentElement","clientHeight","BOTTOM","innerWidth","clientWidth","RIGHT","testVisibility","errorSum","reduce","count","current","length","VERTICAL","handleVerticalAxisOneViolation","HORIZONTAL","handleHorizontalAxisOneViolation","handleVerticalAxisTwoViolations","handleHorizontalAxisTwoViolations","flipAndNudgeLeft","flipAndNudgeRight","flipAndNudgeDown","flipAndNudgeUp","PLATFORM_ID","ClrPopoverContent","container","template","smartPositionService","smartEventsService","checkCollector","EventEmitter","clickToClose","ngAfterViewInit","change","addContent","removeContent","view","setStyle","rootNodes","debounceTime","node","removeChild","body","clear","createEmbeddedView","contentRef","addClass","appendChild","ngAfterContentChecked","emit","positionCoords","ViewContainerRef","TemplateRef","Input","ClrPopoverOpenCloseButton","openCloseChange","handleClick","[class.clr-smart-open-close]","Output","HostListener","ClrPopoverCloseButton","elementRef","closeChange","closeButtonRef","[class.clr-smart-close-button]","ElementRef","smartEventService","element","[class.clr-anchor]","ClrPopoverAnchor","ClrLoadingState","ClrLoading","listener","_loadingState","DEFAULT","LOADING","loadingStateChange","loadingState","LoadingListener","Optional","ButtonInGroupService","_changes","updateButtonGroup","button","ClrButton","buttonInGroupService","toggleService","_enableService","_inMenu","_classNames","_name","_type","_id","_disabled","_click","classNames","split","indexOf","join","state","loading","emitClick","$event","inMenu","Component","providers","provide","useExisting","SkipSelf","ViewChild","static","commonStringsDefault","close","show","hide","expand","collapse","more","select","selectAll","previous","info","success","warning","danger","rowActions","pickColumns","showColumns","sortColumn","firstPage","lastPage","nextPage","previousPage","currentPage","totalPages","filterItems","minValue","maxValue","modalContentStart","modalContentEnd","showColumnsMenuDescription","allColumnsSelected","signpostToggle","signpostClose","detailPaneStart","detailPaneEnd","singleSelectionAriaLabel","singleActionableAriaLabel","detailExpandableAriaLabel","datagridFilterAriaLabel","columnSeparatorAriaLabel","columnSeparatorDescription","alertCloseButtonAriaLabel","datepickerToggle","datepickerPreviousMonth","datepickerCurrentMonth","datepickerNextMonth","datepickerPreviousDecade","datepickerNextDecade","datepickerCurrentDecade","datepickerSelectMonthText","datepickerSelectYearText","stackViewChanged","verticalNavGroupToggle","verticalNavToggle","timelineStepNotStarted","timelineStepCurrent","timelineStepSuccess","timelineStepError","timelineStepProcessing","comboboxDelete","comboboxSearching","comboboxSelection","comboboxSelected","comboboxNoResults","comboboxOpen","dategridExpandableBeginningOf","dategridExpandableEndOf","dategridExpandableRowContent","dategridExpandableRowsHelperText","ClrCommonStringsService","_strings","localize","overrides","parse","source","tokens","names","keys","output","name","replace","providedIn","NB_INSTANCES","UNIQUE_ID","InjectionToken","uniqueIdFactory","ClrSide","UNIQUE_ID_PROVIDER","useFactory","ClrPopoverPositions","BEFORE","AFTER","ClrButtonGroup","buttonGroupNewService","popoverId","commonStrings","popoverPosition","inlineButtons","menuButtons","ngAfterContentInit","initializeButtons","changes","rearrangeButton","buttons","fromView","toView","index","splice","moveIndex","getMoveIndex","buttonToMove","tempInlineButtons","tempInMenuButtons","_menuPosition","pos","[class.btn-group]","ContentChildren","CLR_BUTTON_GROUP_DIRECTIVES","ClrIconModule","ClrPopoverModuleNext","ClrLoadingButton","el","buttonState","clrLoadingChange","removeStyle","disabled","removeAttribute","setExplicitButtonWidth","setAttribute","SUCCESS","ERROR","boundingClientRect","animations","trigger","transition","style","opacity","animate","keyframes","transform","[attr.disabled]","CLR_LOADING_BUTTON_DIRECTIVES","ClarityIcons","addIcons","ellipsisHorizontalIcon","ClrLoadingButtonModule","ClrButtonGroupModule","EmptyAnchor","entryComponents","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","s","Symbol","iterator","m","i","call","done","TypeError","__read","n","r","e","ar","error","__spread","arguments","concat","HostWrapper","containerType","vcr","injector","get","cfr","ComponentFactoryResolver","createComponent","resolveComponentFactory","factory","containerRef","undefined","remove","instance","_dynamic","token","notFoundValue","counter","ControlIdService","_idChange","BehaviorSubject","ClrFormLayout","NgControlService","_controlChanges","setControl","control","CONTROL_STATE","LayoutService","minLabelSize","maxLabelSize","layout","layoutValues","map","_labelSize","size","labelSizeIsValid","isVertical","isHorizontal","isCompact","COMPACT","isValid","labelSize","Number","isInteger","IfControlStateService","ngControlService","_statusChanges","NONE","controlChanges","statusChanges","triggerStatusChange","status","touched","includes","subscription","ControlClassService","layoutService","className","controlClass","grid","additional","controlClasses","VALID","INVALID","trim","initControlClass","klass","startsWith","removeClass","MarkControlService","_touched","markAsTouched","WrappedFormControl","wrapperType","ngControl","ifControlStateService","controlClassService","markControlService","touchedChange","controlIdService","id","triggerValidation","updateValueAndValidity","getProviderFromContainer","_containerInjector","ngOnInit","listenForErrorStateChanges","startWith","distinctUntilChanged","setAriaDescribedBy","getAriaDescribedById","suffix","Type","Injector","NgControl","HostBinding","ClrLabel","enableGrid","textContent","forAttr","idChange","disableGrid","[class.clr-subtext]","[id]","ClrAbstractContainer","showInvalid","controlSuccessComponent","addGrid","ContentChild","ClrControlSuccess","ClrControlContainer","_super","[class.clr-form-control]","[class.clr-form-control-disabled]","[class.clr-row]","ClrControl","[class.clr-input]","Self","ClrForm","sizeNumber","parseInt","onFormSubmit","[class.clr-form]","[class.clr-form-horizontal]","[class.clr-form-compact]","descendants","AbstractIfState","displayedContent","handleState","ClrIfError","Error","displayError","hasError","invalid","getError","ClrIfSuccess","ClrLayout","exclamationCircleIcon","checkCircleIcon","ClrControlError","ClrControlHelper","IS_TOGGLE","isToggleFactory","IS_TOGGLE_PROVIDER","ClrCheckboxWrapper","toggle","label","[class.clr-checkbox-wrapper]","[class.clr-toggle-wrapper]","ClrCheckbox","Attribute","ClrCheckboxContainer","inline","ClrCommonFormsModule","ClrHostWrappingModule","activeCounter","IF_ACTIVE_ID","tokenFactory","IF_ACTIVE_ID_PROVIDER","IfActiveService","_currentChange","_current","ClrIfActive","ifActiveService","wasActive","activeChange","checkAndUpdateView","currentChange","newCurrentId","currentId","isNowActive","updateView","ClrIfOpen","IfExpandService","expandable","_loading","_expanded","_expandChange","expanded","ClrIfExpanded","expandedChange","_subscriptions","expandChange","CONDITIONAL_DIRECTIVES","FocusTrapTracker","_previousFocusTraps","activatePreviousTrapper","pop","FocusTrapDirective","focusTrapsTracker","localFocusEscaped","_config","strict","config","onFocusIn","topReboundEl","relatedTarget","focusLastFocusable","focusTrapElIfOutside","bottomReboundEl","focusFirstFocusable","createFocusableOffScreenEl","offScreenSpan","createElement","addReboundEls","hostElement","insertBefore","nextSibling","parentNode","removeReboundEls","setPreviousFocus","previousActiveElement","activeElement","querySelectorAll","potentiallyFocusableEls","firstFocusableEl","focusElement","lastFocusableEl","FOCUS_TRAP_DIRECTIVES","LITTLE_ENDIAN_REGEX","MIDDLE_ENDIAN_REGEX","DELIMITER_REGEX","USER_INPUT_REGEX","MOBILE_USERAGENT_REGEX","RTL_REGEX","YEAR","MONTH","DATE","LITTLE_ENDIAN","format","MIDDLE_ENDIAN","BIG_ENDIAN","getNumberOfDaysInTheMonth","year","month","Date","getDate","DayViewModel","dayModel","isTodaysDate","isExcluded","isDisabled","isSelected","isFocusable","DayModel","date","isEqual","day","toDate","incrementBy","getFullYear","getMonth","clone","toComparisonString","pad","num","toDateString","toLocaleDateString","CalendarViewModel","calendar","selectedDay","focusableDay","today","firstDayOfWeek","excludedDates","currMonthDayViews","initializeCalendarView","_calendarView","prevMonthCalendar","previousMonth","nextMonthCalendar","nextMonth","daysFromPrevMonthInCalView","numDaysFromPrevMonthInCalView","daysFromNextMonthInCalView","NO_OF_DAYS_IN_A_WEEK","days","prevMonthDayViews","nextMonthDayViews","generateDayViewModels","slice","generateCalendarView","initializeSelectedDay","initializeFocusableDay","isDateExcluded","_a","minDate","maxDate","from","to","isCurrentCalendar","dayViews","isDayInCalendar","currentYear","currentMonth","firstDayOfCurrMonth","getDay","isDayInCalendarView","prev","curr","combinationArr","calendarView","setFocusableFlag","flag","updateFocusableDay","CalendarModel","initializeDaysInCalendar","noOfDaysInCalendar","fill","_date","DateNavigationService","_todaysFullDate","_selectedDayChange","_displayedCalendarChange","_focusOnCalendarChange","_focusedDayChange","_displayedCalendar","setDisplayedCalendar","initializeTodaysDate","_today","notifySelectedDayChanged","initializeCalendar","focusedDay","changeMonth","changeYear","moveToNextMonth","moveToPreviousMonth","moveToCurrentMonth","displayedCalendar","incrementFocusDay","DatepickerFocusService","_ngZone","focusCell","elRef","runOutsideAngular","ngZoneIsStableInBrowser","focusEl","querySelector","focusInput","elementIsFocused","onStable","first","NgZone","LocaleHelperService","locale","_firstDayOfWeek","initializeLocaleData","_localeDays","narrow","_localeMonthsAbbreviated","_localeMonthsWide","_localeDateFormat","initializeFirstDayOfWeek","initializeLocaleDateFormat","initializeLocaleMonthsAbbreviated","initializeLocaleMonthsWide","initializeLocaleDays","tempArr","tempWideArr","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Wide","tempNarrowArr","Narrow","prevDays","apply","getLocaleMonthNames","Abbreviated","getLocaleFirstDayOfWeek","getLocaleDateFormat","FormatWidth","Short","LOCALE_ID","DateIOService","_localeHelperService","disabledDates","cldrLocaleDateFormat","localeDisplayFormat","delimiters","localeDateFormat","initializeLocaleDisplayFormat","setMinDate","setMaxDate","toLocaleLowerCase","test","extractDelimiters","console","toLocaleDisplayFormatString","isNaN","getTime","dateNo","monthNo","dateStr","toString","monthStr","isValidMonth","isValidDate","validateAndGetDate","y","result","currYear","Math","floor","parseToFourDigitYear","getDateValueFromDateString","dateParts","match","firstPart","secondPart","thirdPart","ClrCalendar","_dateNavigationService","_datepickerFocusService","_dateIOService","_elRef","_subs","initializeSubscriptions","localeDays","displayedCalendarChange","focusedDayChange","calendarViewModel","focusOnCalendarChange","onKeyDown","keyCode","FocusService","_focused","DateFormControlService","_touchedChange","_dirtyChange","markAsDirty","setDisabled","DatepickerEnabledService","_document","_isUserAgentMobile","defaultView","navigator","userAgent","_innerWidth","ViewManagerService","_currentView","changeToMonthView","changeToYearView","changeToDayView","ClrDateContainer","dateNavigationService","datepickerEnabledService","dateFormControlService","focusService","viewManagerService","showHelper","showValid","focusChange","toggleButton","isEnabled","isBooleanAttributeSet","[class.clr-date-container]","ClrDateInput","viewContainerRef","dateIOService","datepickerFocusService","dateChange","previousDateChange","updateDate","getValidDateValueFromDate","initialClrDateInputValue","dateString","populateServicesFromContainerComponent","listenForUserSelectedDayChanges","listenForControlValueChanges","listenForTouchChanges","listenForDirtyChanges","listenForInputRefocus","processInitialInputs","setFocusStates","setFocus","placeholder","placeholderText","usingNativeDatepicker","onValueChange","validDateValue","usingClarityDatepicker","emitDateOutput","focused","datepickerHasFormControl","setByUserInteraction","updateInput","setMinutes","getMinutes","getTimezoneOffset","setProperty","setValue","date1","date2","of","hasControl","switchMap","valueChanges","selectedDayChange","dirtyChange","ClrDatepickerViewManager","isMonthView","isYearView","isDayView","[class.datepicker]","[attr.aria-modal]","ClrDay","_toggleService","_dayView","dayString","onDayViewFocus","dayView","selectDay","[class.day]","ClrDaypicker","_viewManagerService","CALENDAR_MONTH","calendarMonth","CALENDAR_YEAR","calendarYear","localeMonthsAbbreviated","[class.daypicker]","ClrMonthpicker","_focusedMonthIndex","calendarMonthIndex","localeMonthsWide","monthIndex","getTabIndex","[class.monthpicker]","YearRangeModel","yearRange","generateYearRange","remainder","ceil","generateRange","_v","k","nextDecade","previousDecade","currentDecade","inRange","ClrYearpicker","yearRangeModel","_focusedYear","updateRange","incrementFocusYearBy","middleYear","yrm","decadeRange","[class.yearpicker]","CLR_DATEPICKER_DIRECTIVES","angleIcon","eventIcon","calendarIcon","ClrConditionalModule","ClrFocusTrapModule","ClrInputContainer","ClrInput","FormsModule","TOGGLE_SERVICE","ToggleServiceFactory","TOGGLE_SERVICE_PROVIDER","ClrPasswordContainer","_toggle","ClrPassword","triggerFocus","eyeHideIcon","eyeIcon","ClrRadioWrapper","[class.clr-radio-wrapper]","ClrRadio","ClrRadioContainer","ClrSelectContainer","multi","valueAccessor","SelectMultipleControlValueAccessor","wrapperClass","ClrSelect","[class.clr-select]","ClrTextareaContainer","ClrTextarea","[class.clr-textarea]","ClrRangeContainer","idService","_hasProgress","val","valBool","getRangeProgressFillWidth","input","selectRootElement","inputWidth","offsetWidth","inputMinValue","min","inputMaxValue","max","inputMiddle","ClrRange","[class.clr-range]","DatalistIdService","ClrDatalistContainer","ClrDatalistInput","datalistIdService","listValue","[attr.list]","ClrDatalist","datalistId","idValue","ClrInputModule","MultiSelectComboboxModel","containsItem","item","model","addItem","unselect","removeItem","isEmpty","displayField","displayString","OptionSelectionService","_currentInput","_inputChanged","inputChanged","_selectionChanged","ReplaySubject","multiselectable","setSelectionValue","selectionModel","ArrowKeyDirection","customFocusableItemProvider","implementation","FocusableItem","SingleSelectComboboxModel","PseudoFocusModel","_focusChanged","ComboboxFocusHandler","rendererFactory","selectionService","appRef","pseudoFocus","optionData","handleFocusSubscription","createRenderer","_trigger","addFocusOnBlurListener","_listbox","_textInput","handleTextInput","moveFocusTo","direction","findIndex","option","equals","UP","DOWN","scrollIntoView","behavior","block","openAndMoveTo","take","Enter","preventViewportScrolling","Tab","Backspace","stopImmediatePropagation","textInput","focusOutOfComponent","tick","listbox","focusFirstActive","firstActive_1","activeProxy","find","addOptionValues","options","RendererFactory2","ApplicationRef","COMBOBOX_FOCUS_HANDLER_PROVIDER","OptionData","other","ClrOption","focusHandler","optionSelectionService","autoId","optionProxy","OptionProxy","_value","onClick","[class.clr-combobox-option]","[attr.role]","[attr.tabindex]","[attr.id]","POPOVER_HOST_ANCHOR","nbOptionsComponents","ClrOptions","ariaService","parentHost","optionsId","searchText","INPUT","items","ariaControls","ariaOwns","_items","[class.clr-combobox-options]","AriaService","labelOffset","ClrComboboxContainer","containerService","labelText","controlContainer","offsetHeight","[class.clr-combobox-form-control]","ComboboxContainerService","_unlistenFuncs","reset","listenToArrowKeys","move","registerContainer","activateCurrent","moveTo","blur","moved","isObservable","activate","detachListeners","unlisten","clrFocusServiceFactory","existing","FOCUS_SERVICE_PROVIDER","deps","ClrCombobox","positionService","controlStateService","_searchText","smartPosition","clrInputChange","clrOpenChange","clrSelectionChange","selectionChanged","updateControlValue","inputId","text","currentInput","setTimeout","onBlur","onTouchedCallback","updateOn","onFocus","getSelectionAriaLabel","onKeyUp","multiSelect","multiModel","lastItem","newSelection","updateInputValue","getDisplayNames","popoverAligned","popover","offsetTop","onChangeCallback","writeValue","registerOnChange","onChange","getActiveDescendant","registerOnTouched","onTouched","setDisabledState","isArray","textbox","[class.aria-required]","[class.clr-combobox]","[class.clr-combobox-disabled]","ClrOptionSelected","ClrOptionItems","differs","optionService","differ","iterableProxy","NgForOf","updateItems","_rawItems","ngForTrackBy","field","_filterField","filteredItems","objValue","toLowerCase","values","ngForOf","ngDoCheck","diff","IterableDiffers","ClrSpinner","_inline","_inverse","_small","_medium","[attr.aria-busy]","ClrFocusDirection","CLR_SPINNER_DIRECTIVES","ClrKeyFocusItem","ClrKeyFocus","focusOnLoad","_focusableItems","clrKeyFocusItems","toArray","elements","initializeFocus","focusableItems","currentItem","focusCurrent","positionInRange","listenForItemUpdates","handleKeyboardEvent","currentItemElement","getItemPosition","prevKeyPressed","currentFocusIsNotFirstItem","nextKeyPressed","currentFocusIsNotLastItem","code","Home","End","setClickedItemCurrent","_item","BOTH","ClrRovingTabindex","setTabindex","updateTabindex","newIndex","HTMLElement","KEY_FOCUS_DIRECTIVES","windowCloseIcon","ClrKeyFocusModule","ClrSpinnerModule","ClrCheckboxModule","ClrComboboxModule","ClrDatepickerModule","ClrPasswordModule","ClrRadioModule","ClrSelectModule","ClrTextareaModule","ClrRangeModule","ClrDatalistModule","CLR_LOADING_DIRECTIVES","OutsideClick","outsideClick","documentClick","OUSTIDE_CLICK_DIRECTIVES","DomAdapter","userDefinedWidth","add","clientRect","scrollBarWidth","scrollWidth","computedHeight","getComputedStyle","getPropertyValue","elementClientRect","bottom","right","minWidth","DragEventType","dragEvent","dragPosition","group","dragDataTransfer","dropPointPosition","DragAndDropEventBusService","dragStart","dragMove","dragEnd","drop","broadcast","DRAG_START","DRAG_MOVE","DRAG_END","DROP","DragEventListenerService","ngZone","eventBus","listeners","hasDragStarted","dragStartDelay","initialPosition","attachDragListeners","draggableEl","customDragEvent","detachDragListeners","nestedListeners","checkDragStartBoundaryListener","getNativeEventObject","changedTouches","startOnEvent","moveOnEvent","endOnEvent","startEvent","pageX","pageY","selectEvent","checkDragStartBoundary","dragStartDelayTimeout","moveEvent","endEvent","clearTimeout","eventType","deltaX","abs","deltaY","generateDragEvent","ghostElement","nativeEvent","moveX","moveY","DraggableSnapshotService","domAdapter","draggableElClientRect","snapshotDragEvent","discard","ClrDraggableGhost","dragEventListener","draggableSnapshot","leaveAnimConfig","params","draggableGhostEl","setDefaultGhostSize","hasDraggableState","isAnimationConfigured","dragMoved","animateToOnLeave","dragStartPosition","topLeftPosition","findTopLeftPosition","setPositionStyle","findDropPointPosition","setSizeStyle","run","ClrIfDragged","dragStarted","dragEnded","DragHandleRegistrarService","_defaultHandleEl","_customHandleEl","makeElementHandle","registerCustomHandle","unregisterCustomHandle","GlobalDragModeService","enter","exit","ClrDraggable","dragHandleRegistrar","globalDragMode","dragOn","dragStartEmitter","dragMoveEmitter","dragEndEmitter","componentFactory","createDefaultGhost","cloneNode","destroyDefaultGhost","defaultHandleEl","customGhost","ClrDragEvent","[class.draggable]","[class.being-dragged]","ClrDroppable","isDraggableMatch","_isDraggableOver","_dropTolerance","dragLeaveEmitter","dragEnterEmitter","dropEmitter","droppableEl","_group","dropToleranceGenerator","toleranceValues","tolerance","unsubscribeFrom","checkGroupMatch","draggableGroup","some","groupKey","isInDropArea","point","onDragStart","dragStartEvent","dragMoveSubscription","dragMoveEvent","onDragMove","dragEndSubscription","dragEndEvent","onDragEnd","isDraggableOver","dragEnterEvent","DRAG_ENTER","dragLeaveEvent","DRAG_LEAVE","dropEvent","dragStartSubscription","[class.droppable]","[class.draggable-match]","ClrDragHandle","[class.drag-handle]","CLR_DRAG_AND_DROP_DIRECTIVES","ClrExpandableAnimation","startHeight","clrExpandTrigger","animationDone","updateStartHeight","overflow","EXPANDABLE_ANIMATION_DIRECTIVES","FOCUS_ON_VIEW_INIT","FOCUS_ON_VIEW_INIT_PROVIDER","useValue","ClrFocusOnViewInit","focusOnViewInit","directFocus","_isEnabled","onFocusout","FOCUS_ON_VIEW_INIT_DIRECTIVES","StateDebouncer","_change","nbChanges","changeStart","changeDone","Page","stateDebouncer","preventEmit","activated","_size","_sizeChange","oldSize","_totalItems","total","last","_last","totalItems","page","lastInPage","resetPageSize","FiltersProvider","_page","_all","hasActiveFilters","_b","_c","isActive","getActiveFilters","ret","resetPageAndEmitFilterChange","hasUnregistered","registered","RegisteredFilter","matchIndex","accepts","filters","unregister","DatagridFilterRegistrar","setFilter","deleteFilter","ClrDatagridFilter","_filters","smartToggleService","subs","ariaExpanded","CustomFilter","read","NestedProperty","prop","splitProp","getPropValue","nestedProp","DatagridPropertyStringFilter","exact","search","propValue","DatagridStringFilterImpl","filterFn","_lowerCaseValue","_rawValue","lowerCaseValue","property","DatagridStringFilter","filterValueChange","initFilterValue","DatagridPropertyNumericFilter","low","high","DatagridNumericFilterImpl","_low","_high","vals","DatagridNumericFilter","popoverToggleService","initFilterValues","isFinite","WillyWonka","_chocolate","disableChocolateCheck","ngAfterViewChecked","OompaLoompa","cdr","willyWonka","chocolate","latestFlavor","flavor","detectChanges","ChangeDetectorRef","RowActionService","actionableCount","register","DatagridWillyWonka","ActionableOompaLoompa","hasActionableRow","DetailService","toggleState","_state","_enabled","cache","isRowOpen","ExpandableRowsCount","detailService","expandableCount","enabled","ExpandableOompaLoompa","hasExpandableRow","ClrDatagridSortOrder","DatagridPropertyComparator","compare","a","propA","propB","Sort","_reverse","_comparator","emitChange","sortBy","forceReverse","comparator","reverse","WrappedColumn","columnView","templateRef","destroy","ClrDatagridColumn","_sort","changeDetectorRef","showSeparator","_colType","_sorted","sortedChange","_sortOrder","UNSORTED","sortOrderChange","customFilter","listenForSortingChanges","listenForDetailPaneChanges","stateChange","markForCheck","sort","sortOrder","_sortBy","sortIcon","_sortDirection","sorted","_field","setupDefaultFilter","colType","updateFilterValue","ngOnChanges","currentValue","previousValue","ASC","DESC","sortable","custom","newValue","wrappedInjector","[class.datagrid-column]","[attr.aria-sort]","role","changeDetection","ChangeDetectionStrategy","OnPush","Items","trackBy","_index","_smart","_displayed","_allChanges","_filtersSub","_sortSub","_pageSub","smartenUp","_filterItems","_sortItems","_changePage","emitAllChanges","smart","refresh","displayed","uninitialized","_filtered","firstItem","ClrDatagridItems","newItems","all","ClrDatagridPlaceholder","[class.datagrid-placeholder-container]","SignpostFocusManager","_triggerEl","focusTrigger","SignpostIdService","setId","ClrSignpostTrigger","signpostIdService","signpostFocusManager","triggerEl","isOpen","prevIsOpen","focusOnClose","ariaControl","onSignpostTriggerClick","class","[attr.aria-label]","[attr.aria-expanded]","[attr.aria-controls]","[class.active]","ClrSignpost","useCustomTrigger","[class.signpost]","WrappedCell","cellView","DatagridDisplayMode","DatagridRenderStep","ClrDatagridCell","[class.datagrid-cell]","[class.datagrid-signpost-trigger]","DatagridRenderOrganizer","_renderStep","alreadySized","filterRenderSteps","step","renderStep","testStep","resize","CALCULATE_MODE_ON","CLEAR_WIDTHS","COMPUTE_COLUMN_WIDTHS","ALIGN_COLUMNS","CALCULATE_MODE_OFF","SelectionType","DisplayModeService","renderOrganizer","_view","DISPLAY","CALCULATE","nbSelection","Selection","_zone","preserveSelection","prevSelectionRefs","lockedRefs","_selectionType","None","rowSelectionMode","valueCollector","_selectable","clearSelection","allChanges","updatedItems","updateLockedRef","selectionType","Single","newSingle_1","trackBy_1","selectionUpdated_1","currentSingle","prevSingleSelectionRef","lookup","maybe","Multi","leftOver_1","trackBy_2","selectionUpdated_2","selectedIndex","selected","_currentSingle","updateCurrent","selectItem","deselectItem","indexOfItem","removedItems_1","locked","setSelected","isAllSelected","displayedItems","isLocked","canItBeLocked","lockItem","lock","ref_1","lockedItem","toggleAll","currentIndex","WrappedRow","rowView","nbRow","DatagridIfExpandService","expandableId","_replace","_animate","setReplace","replaceValue","ClrDatagridRow","selection","rowActionService","globalExpandable","displayMode","SELECTION_TYPE","expandAnimationTrigger","_selected","selectedChanged","_detailOpenLabel","_detailCloseLabel","displayCells","radioId","checkboxId","combineLatest","expandReplaceValue","expandChangeValue","replaced","toggleExpand","expandAnimation","dgCells","cell","destroyed","_scrollableCells","insert","viewChange","detach","_calculatedCells","clrDgSelectable","[class.datagrid-row]","[class.datagrid-selected]","[attr.aria-owns]","StateProvider","debouncer","by","activeFilters","activeFilters_1","activeFilters_1_1","DatagridColumnChanges","TableSizeService","_tableRef","table","tableRef","getColumnDragHeight","ALL_COLUMN_CHANGES","ColumnsService","columns","_cache","subject","hasCache","resetToLastCache","column","columnStates","hideable","emitStateChangeAt","columnIndex","emitStateChange","ClrDatagrid","organizer","expandableRows","stateProvider","datagridId","singleSelectedChanged","clrDgSingleSelectionAriaLabel","clrDgSingleActionableAriaLabel","clrDetailExpandableAriaLabel","clrDgDisablePageFocus","dataChanged","rows","row","_displayedRows","detailButton","datagridTable","_projectedDisplayColumns","_projectedCalculationColumns","_calculationRows","[class.datagrid-host]","[class.datagrid-detail-open]","[class.datagrid-action-bar]","clrDgActionId","ClrDatagridActionOverflow","zone","openState","focusFirstButton","closeOverflowContent","firstButton","ColumnResizerService","_resizedBy","widthBeforeResize","minColumnWidth","startResize","isWithinMaxResizeRange","endResize","calculateResize","resizedBy","maxResizeRange","ClrDatagridColumnSeparator","columnResizerService","tableSizeService","commonString","columnSeparatorId","resizeStartedOnKeyDown","unlisteners","resizeTrackerRef","columnHandleRef","columnHandleEl","showTrackerOnFirstKeyDown","moveTrackerOnKeyDown","hideTrackerOnKeyUp","showTracker","tableHeight","resizeTrackerEl","moveTracker","movedBy","redFlagTracker","hideTracker","isArrowLeftKeyEvent","isArrowRightKeyEvent","unlistener","[class.datagrid-column-separator]","ClrDatagridColumnToggleButton","columnsService","allSelected","hideableColumns","hidden","hideableColumn","HIDDEN","ClrDatagridColumnToggle","columnSwitchId","_allColumnsVisible","hideableColumnStates","columnState","toggleColumnState","columnToToggle","toggleSwitchPanel","allSelectedElement","trackByFn","[class.column-switch-wrapper]","ClrDatagridColumnToggleTitle","DatagridDetailRegisterer","expandableRowsCount","ClrDatagridDetailHeader","[class.datagrid-detail-header]","ClrDatagridDetail","closeCheck","[class.datagrid-detail-pane]","ClrIfDetail","viewContainer","skip","togglePanel","showPanel","stateChangeParams","$implicit","[class.datagrid-detail-body]","ClrDatagridFooter","hasHideableColumns","[class.datagrid-footer]","COLUMN_STATE","columnStateFactory","COLUMN_STATE_PROVIDER","ClrDatagridHideableColumn","titleTemplateRef","hiddenChange","clrDgHidden","_hidden","ClrDatagridItemsTrackBy","ClrDatagridPageSize","pageSizeOptions","ClrDatagridPagination","currentChanged","_pageSubscription","middlePages","updateCurrentPage","parsed","currentPageInputRef","[class.pagination]","ClrDatagridRowDetail","replacedRow","replaceChange","_beginningOfExpandableContentAriaText","_endOfExpandableContentAriaText","[class.datagrid-row-flex]","[class.datagrid-row-detail]","[class.datagrid-container]","STRICT_WIDTH_CLASS","HIDDEN_COLUMN_CLASS","DatagridCellRenderer","clearWidth","stateSubscription","runAllChanges","stateChanges","WIDTH","setWidth","setHidden","strictWidth","DatagridHeaderRenderer","resizeEmitter","widthSet","autoSet","detectStrictWidth","widthAfterResize","computeWidth","getColumnWidthState","setColumnState","NoopDomAdapter","DatagridRowRenderer","cells","domAdapterFactory","DatagridMainRenderer","_heightSet","columnsSizesStable","shouldStabilizeColumns","computeHeadersWidth","sizeChange","resetDatagridHeight","toggleDetailPane","setupColumns","headers","stabilizeColumns","shouldComputeHeight","computeDatagridHeight","header","_header","nbColumns","allStrict","CLR_DATAGRID_DIRECTIVES","ClrDatagridActionBar","ClrDatagridDetailBody","ellipsisVerticalIcon","viewColumnsIcon","arrowIcon","timesIcon","stepForward2Icon","angleDoubleIcon","filterGridCircleIcon","filterGridIcon","ClrFormsModule","ClrLoadingModule","ClrOutsideClickModule","ClrExpandableAnimationModule","ClrDragAndDropModule","ClrFocusOnViewInitModule","ClrStackBlock","parent","uniqueId","_changedChildren","_fullyInitialized","_changed","addChild","getStackChildrenId","[class.stack-block]","ClrStackView","editable","save","_editMode","editingChange","stackView","modelChange","editing","ClrStackInput","StackControl","inputs","outputs","ClrStackSelect","[attr.aria-labelledby]","ClrSelectedState","CLR_STACK_VIEW_DIRECTIVES","ClrStackHeader","ClrStackContentInput","ClrStackViewCustomTags","TreeNodeModel","UNSELECTED","complete","propagateUp","propagateDown","INDETERMINATE","children","child","_updateSelectionFromChildren","toggleSelection","propagate","newState","SELECTED","computeSelectionStateFromChildren","oneSelected","oneUnselected","DeclarativeTreeNodeModel","_addChild","_removeChild","selectable","eager","childrenFetched","treeFeaturesFactory","TreeFeaturesService","TREE_FEATURES_PROVIDER","TreeFocusManagerService","_focusRequest","_focusChange","findSiblings","rootNodeModels","findLastVisibleInNode","lastChild","findNextFocusable","siblings","selfIndex","findLastVisibleInTree","lastRootNode","findNodeAbove","findNodeBelow","focusNode","nodeId","broadcastFocusedNode","focusedNodeId","focusParent","focusFirstVisibleNode","focusModel","focusLastVisibleNode","focusNodeAbove","focusNodeBelow","ClrTreeNodeLink","click","ClrTreeNode","featuresService","expandService","focusManager","STATES","skipEmitChange","selectedChange","contentContainerTabindex","recursion","_model","context","clrModel","_lView","isExpandable","focusRequest","focusTreeNode","checkTabIndex","treeNodeLinkList","setTabIndex","contentContainer","broadcastFocusOnContainer","expandOrFocusFirstChild","collapseOrFocusParent","triggerDefaultAction","treeNodeLink","overflow-y","[class.clr-tree-node]","ClrTree","focusManagerService","tabindex","setRootNodes","[attr.aria-multiselectable]","RecursiveTreeNodeModel","getChildren","_children","clearChildren","fetchChildren","asyncChildren","then","raw","wrapChildren","rawModels","ClrRecursiveForOf","wrapped","nodes","childrenFetchSubscription","root","RecursiveChildren","shouldRender","getContext","CLR_TREE_VIEW_DIRECTIVES","ClrDatagridModule","ClrStackViewModule","ClrTreeViewModule","Linkers","linkParent","linkVertical","loop","up","down","wrapObservable","observable","onSubscribe","onUnsubscribe","Observable","observer","DropdownFocusHandler","focusBackOnTrigger","resetChildren","moveToFirstItemWhenOpen","handleRootFocus","originalEvent","_container","stopPropagation","openAndGetChildren","closeAndGetThis","addChildren","DROPDOWN_FOCUS_HANDLER_PROVIDER","RootDropdownService","closeMenus","clrRootDropdownFactory","ROOT_DROPDOWN_PROVIDER","ClrDropdown","dropdownService","isMenuClosable","[class.dropdown]","[class.open]","BasicFocusableItem","Point","BASIC_FOCUSABLE_ITEM_PROVIDER","useClass","ClrDropdownItem","dropdown","_dropdownService","focusableItem","setByDeprecatedDisabled","onDropdownItemClick","[class.disabled]","[class.dropdown-item]","[attr.aria-disabled]","POSITION_ABSOLUTE","OVERFLOW_SCROLL","OVERFLOW_AUTO","Popover","scrollableElements","boundOnScrollListener","emitScrollEvent","bind","anchorAlign","popoverAlign","offsetX","_d","offsetY","_e","useAnchorParent","addScrollEventListeners","anchorRect","popoverRect","leftDiff","topDiff","LEFT_TOP","TOP_LEFT","TOP_CENTER","TOP_RIGHT","RIGHT_TOP","LEFT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","RIGHT_BOTTOM","LEFT_CENTER","RIGHT_CENTER","popoverComputedStyle","marginLeft","marginRight","marginTop","marginBottom","round","_scroll","release","removeScrollEventListeners","isPositioned","scrolls","addEventListener","removeEventListener","computedStyles","overflowX","overflowY","AbstractPopover","updateAnchor","popoverOptions","closeOnOutsideClick","anchorElem","popoverInstance","attachESCListener","detachESCListener","ignore","detachOutsideClickListener","anchorPoint","popoverPoint","attachOutsideClickListener","ignoreGlobalESCListener","documentESCListener","hostClickListener","ignoredElement","ignoredElementClickListener","ClrDropdownMenu","nested","allowMultipleOpen","notifyOnChanges","[class.dropdown-menu]","ClrDropdownTrigger","isRootLevelToggle","onDropdownTriggerClick","[class.dropdown-toggle]","[class.expandable]","[attr.aria-haspopup]","CLR_DROPDOWN_DIRECTIVES","ALERT_TYPES","AlertIconAndTypesService","defaultIconShape","_alertIconShape","_alertType","iconInfoFromType","shape","title","returnObj","cssClass","MultiAlertService","allAlerts","alert","_closed","activeAlerts","manage","alerts","ClrAlert","iconService","multiAlertService","isSmall","closable","isAppLevel","clrCloseButtonAriaLabel","_closedChanged","currentAlert","alertType","alertIconShape","ClrAlerts","currentAlertIndexChange","currentAlertChange","[class.alerts]","[class.alert-danger]","[class.alert-info]","[class.alert-success]","[class.alert-warning]","ClrAlertsPager","multiAlertServiceChanges","pageUp","pageDown","[class.alerts-pager]","CLR_ALERT_DIRECTIVES","ClrAlertItem","ClrAlertText","infoCircleIcon","exclamationTriangleIcon","ClrDropdownModule","ClrAlertModule","ResponsiveNavCodes","NAV_LEVEL_1","NAV_LEVEL_2","NAV_CLOSE_ALL","NAV_OPEN","NAV_CLOSE","NAV_TOGGLE","NAV_CLASS_HAMBURGER_MENU","NAV_CLASS_OVERFLOW_MENU","NAV_CLASS_TRIGGER_1","NAV_CLASS_TRIGGER_2","NAV_CLASS_LEVEL_1","NAV_CLASS_LEVEL_2","ResponsiveNavControlMessage","_controlCode","_navLevel","ResponsiveNavigationService","responsiveNavList","registerNavSubject","controlNavSubject","closeAllNavs","registerNav","navLevel","isNavRegistered","unregisterNav","sendControlMessage","controlCode","message","ClrMainContainer","responsiveNavService","_classList","_subscription","navControl","processMessage","navClass","controlNav","[class.main-container]","CLR_LAYOUT_DIRECTIVES","MainContainerWillyWonka","NavDetectionOompaLoompa","sum","ClrHeader","isNavLevel1OnPage","isNavLevel2OnPage","openNavLevel","responsiveNavCodes","registeredNavs","navLevelList","initializeNavTriggers","resetNavTriggers","navList","closeOpenNav","toggleNav","[class.header]","ClrNavLevel","level","addNavClass","navHostClassList","_level","onMouseClick","navHost","CLR_NAVIGATION_DIRECTIVES","TEMPLATE_REF_DIRECTIVES","TemplateRefContainer","TabsWillyWonka","TabsLayout","ActiveOompaLoompa","ifActive","TabsService","tab","active","tabLink","inOverflow","nbTabContentComponents","ClrTabContent","tabsService","tabContentId","viewRef","tabContentViewContainer","ariaLabelledBy","nbTabsComponent","TABS_ID","TABS_ID_PROVIDER","nbTabLinkComponents","ClrTabLink","tabsId","tabLinkId","templateRefContainer","_inOverflow","[attr.aria-hidden]","[class.btn]","ClrTab","ClrTabs","_tabLinkDirectives","tabLinkElements","_mousedown","link","overflowTabs","activeTab","keyFocus","overflowPosition","toggleOverflowOnPosition","_tabOverflowEl","resetKeyFocusCurrentToActive","activeTabPosition","toggleOverflowOnClick","isCurrentInOverflow","openOverflowOnFocus","closeOnFocusOut","closeOnEscapeKey","tabOverflowTrigger","listenForTabLinkChanges","tabs","tabLinkDirectives","ClrTabOverflowContent","CLR_TABS_DIRECTIVES","ClrTemplateRefModule","VerticalNavGroupRegistrationService","navGroupCount","registerNavGroup","unregisterNavGroup","VerticalNavIconService","_icons","registerIcon","unregisterIcon","VerticalNavService","_animateOnCollapsed","_collapsedChanged","_collapsed","_collapsible","collapsible","updateCollapseBehavior","collapsed","ClrVerticalNav","_navService","_navIconService","_navGroupRegistrationService","_sub","collapsedChanged","hasIcons","toggleByButton","[class.is-collapsed]","[class.has-nav-groups]","[class.has-icons]","VerticalNavGroupService","EXPANDED_STATE","COLLAPSED_STATE","ClrVerticalNavGroup","_itemExpand","_navGroupService","wasExpanded","_expandAnimationState","expandAnimationState","animateOnCollapsed","goingToCollapse","expandGroup","collapseGroup","expandAnimationDone","toState","visibility","ClrVerticalNavIcon","_verticalNavIconService","ClrVerticalNavLink","expandParentNavGroup","CLR_VERTICAL_NAV_DIRECTIVES","ClrVerticalNavGroupChildren","ClrMainContainerModule","ClrNavigationModule","ClrTabsModule","ClrVerticalNavModule","ScrollingService","stopScrolling","resumeScrolling","ClrModal","_scrollingService","modalId","_openChanged","staticBackdrop","skipAnimation","bypassScrollService","stopClose","altClose","focusTrap","fadeDone","viewProviders","ClrModalBody","mouseDown","mouseUp","CLR_MODAL_DIRECTIVES","SIGNPOST_POSITIONS","top-left","top-middle","top-right","right-top","right-middle","right-bottom","bottom-right","bottom-middle","bottom-left","left-bottom","left-middle","left-top","default","POSITIONS","ClrSignpostContent","signpostContentId","setPosition","[class.signpost-content]","CLR_SIGNPOST_DIRECTIVES","TooltipIdService","updateId","[class.tooltip]","SIZES","ClrTooltipContent","tooltipIdService","[class.tooltip-content]","[style.opacity]","ClrTooltipTrigger","tooltipId","ariaDescribedBy","showTooltip","hideTooltip","[class.tooltip-trigger]","[attr.aria-describedby]","CLR_TOOLTIP_DIRECTIVES","ClrTooltip","ClrSignpostModule","ClrTooltipModule","ButtonHubService","buttonsReady","_previousBtnClicked","_nextBtnClicked","_dangerBtnClicked","_cancelBtnClicked","_finishBtnClicked","_customBtnClicked","buttonClicked","buttonType","PageCollectionService","_pagesReset","pages","pageCount","pagesCount","pagesAsArray","getPageById","foundPages","checkResults","getPageByIndex","pagesLastIndex","getPageIndex","results","requestedPageId","foundPagesCount","pageRange","start","end","getPageRangeFromPages","otherPage","startIndex","endIndex","pageIndex","otherPageIndex","getPreviousPage","previousPageIndex","previousPageIsCompleted","completed","getNextPage","nextPageIndex","getStepItemIdForPage","pageIdParts","commitPage","pageHasOverrides","stopNext","onCommit","updateCompletedStates","firstIncompleteIndex","findFirstIncompletePageIndex","returnIndex","findFirstIncompletePage","myIncompleteIndex","WizardNavigationService","pageCollection","buttonService","_currentChanged","navServiceLoaded","forceForwardNavigation","_movedToNextPage","_wizardFinished","_movedToPreviousPage","_cancelWizard","wizardHasAltCancel","wizardHasAltNext","wizardStopNavigation","wizardDisableStepnav","previousButtonSubscription","previousBtnClicked","currentPageIsFirst","previousStepDisabled","previousButtonClicked","nextButtonSubscription","nextBtnClicked","checkAndCommitCurrentPage","dangerButtonSubscription","dangerBtnClicked","finishButtonSubscription","finishBtnClicked","customButtonSubscription","customBtnClicked","customButtonClicked","cancelButtonSubscription","cancelBtnClicked","pageOnCancel","cancel","pagesResetSubscription","pagesReset","setFirstPageCurrent","_currentPage","onLoad","currentPageIsLast","forceNext","readyToComplete","iAmTheLastPage","isNext","isDanger","isDangerNext","isFinish","primaryButtonClicked","finishButtonClicked","dangerButtonClicked","nextButtonClicked","finish","goTo","pageToGoToOrId","lazyComplete","myPages","pageToGoTo","currentPageIndex","goingForward","pagesToCheck","canGoTo","previousPagePasses","okayToMove","setLastEnabledPageCurrent","allPages","lastCompletedPageIndex","updateNavigation","toSetCurrent","HeaderActionService","navService","wizardHdrActions","wizardHeaderActions","hasHeaderActions","currentPageHasHeaderActions","wizardHasHeaderActions","wizardHeaderActionIndex","ClrWizardHeaderAction","headerActionClicked","pageButtonsTemplateRef","pageHeaderActionsTemplateRef","pageNavTitleTemplateRef","pageTitleTemplateRef","wizardPageIndex","ClrWizardPage","_nextStepDisabled","nextStepDisabledChange","_previousStepDisabled","previousStepDisabledChange","_hasError","_stopCancel","stopCancelChange","_stopNext","_complete","nextStepDisabled","previousCompleted","pageTitle","pageNavTitle","_headerActions","_buttons","makeCurrent","[class.clr-wizard-page]","ClrWizardPageTitle","ClrWizardPageNavTitle","ClrWizardPageButtons","ClrWizardPageHeaderActions","ClrWizard","headerActionService","_forceForward","_stopNavigation","_disableStepnav","_stopModalAnimations","onCancel","wizardFinished","onReset","currentPageChanged","onMoveNext","onMovePrevious","listenForNextPageChanges","listenForPreviousPageChanges","listenForCancelChanges","listenForFinishedChanges","listenForPageChanges","headerActions","updateNavOnPageChanges","skipChecksAndEmits","forceFinish","stopNavigation","modalCancel","checkAndCancel","currentPageHasOverrides","stopCancel","pageId","movedToNextPage","wizardTitle","movedToPreviousPage","notifyWizardCancel","emitWizardFinished","forEachAddedItem","forEachRemovedItem","[class.clr-wizard]","[class.wizard-md]","[class.wizard-lg]","[class.wizard-xl]","[class.lastPage]","DEFAULT_BUTTON_TYPES","CUSTOM_BUTTON_TYPES","ClrWizardButton","wasClicked","checkDefaultAndCustomType","valueToCheck","typeToLookUp","nav","isCancel","isPrevious","pageService","ClrWizardStepnavItem","pageGuard","isCurrent","isComplete","[attr.aria-current]","[class.clr-nav-link]","[class.nav-item]","[class.no-click]","[class.complete]","[class.error]","AccordionStrategy","AccordionStatus","CLR_WIZARD_DIRECTIVES","ClrWizardStepnav","ClrWizardCustomTags","errorStandardIcon","ClrModalModule","accordionCount","AccordionPanelModel","accordionId","Inactive","templateId","AccordionModel","strategy","Default","_panels","setStrategy","updatePanelOrder","ids","removeOldPanels","addPanel","panelId","panelIsOpen","closeAllPanels","disablePanel","panels","panel","AccordionService","accordion","_panelsChanges","getPanelChanges","emitUpdatedPanels","defaultAnimationTiming","panelAnimation","display","stepAnimation","[class.clr-accordion-description]","ClrAccordionPanel","accordionService","ifExpandService","panelOpen","panelOpenChange","isAccordion","tap","emitPanelChange","collapsePanelOnAnimationDone","getPanelStateClasses","getAccordionContentId","getAccordionHeaderId","[class.clr-accordion-panel]","ClrAccordionDescription","[class.clr-accordion-title]","ClrAccordion","multiPanel","setAccordionStrategy","listenForDOMChanges","[class.clr-accordion]","AccordionWillyWonka","AccordionOompaLoompa","ClrAccordionTitle","ClrAccordionContent","StepperModel","stepperModelInitialize","getNumberOfIncompletePanels","getNumberOfOpenPanels","openFirstPanel","Complete","navigateToNextPanel","currentPanelId","currentPanelValid","completePanel","openNextPanel","setPanelError","overrideInitialPanel","setPanelsWithErrors","resetPanels","resetPanel","getNextPanel","resetAllFuturePanels","firstPanel","getFirstPanel","nextPanel","StepperService","panelsCompleted","getAllCompletedPanelChanges","_activeStepChanges","activeStep","updateNextStep","allPanelsCompleted","triggerAllFormControlValidation","formGroup","controls","FormControl","FormGroup","ClrStepButtonType","ClrStepperPanel","formGroupName","ngModelGroup","stepperService","triggerAllFormControlValidationIfError","listenToFocusChanges","headerButton","FormGroupName","NgModelGroup","ClrStepButton","clrStep","Next","submitButton","Submit","valid","[class.clr-step-button]","[type]","ClrStepper","ngForm","form","listenForPanelsCompleted","listenForFormResetChanges","initialPanel","pristine","ngSubmit","setPanelsWithFormErrors","panelsWithErrors","[class.clr-stepper-forms]","FormGroupDirective","NgForm","StepperWillyWonka","StepperOompaLoompa","ClrAccordionModule","ClrProgressBar","externalId","_ID","_labeled","_fade","_loop","_success","_danger","_flash","_flashDanger","displayStringValue","displayval","ClrTimelineLayout","ClrTimelineStepState","CLR_PROGRESS_BAR_DIRECTIVES","TimelineIconAttributeService","attributeMap","Map","set","NOT_STARTED","iconShape","iconStatus","ariaLabel","CURRENT","PROCESSING","getAriaLabel","getIconShape","getIconStatus","ClrTimeline","[class.clr-timeline]","[class.clr-timeline-step-title]","ClrTimelineStep","iconAttributeService","stepTitle","stepTitleText","innerText","[class.clr-timeline-step]","ClrTimelineStepTitle","[class.clr-timeline-step-description]","[class.clr-timeline-step-header]","CLR_TIMELINE_DIRECTIVES","ClrTimelineStepDescription","ClrTimelineStepHeader","circleIcon","dotCircleIcon","successStandardIcon","ClrEmphasisModule","ClrDataModule","ClrButtonModule","ClrLayoutModule","ClrPopoverModule","ClrWizardModule","ClrStepperModule","ClrProgressBarModule","ClrTimelineModule","ClrAriaLivePoliteness","ClrAriaLiveService","announce","politeness","polite","off","ariaLiveElement","createContainer","previousTimeout"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-icon' })\nexport class ClrIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n\n@Directive({ selector: 'cds-icon' })\nexport class CdsIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum KeyCodes {\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n  Backspace = 'Backspace',\n  Tab = 'TAB',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Space = 'Space',\n  Home = 'Home',\n  End = 'End',\n}\n\nexport enum IEKeyCodes {\n  ArrowUp = 'Up',\n  ArrowDown = 'Down',\n  ArrowRight = 'Right',\n  ArrowLeft = 'Left',\n  Space = 'Spacebar',\n  Escape = 'Esc',\n  Home = 'Home',\n  End = 'End',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { CdsIconCustomTag, ClrIconCustomTag } from './icon';\n\nexport const CLR_ICON_DIRECTIVES: Type<any>[] = [ClrIconCustomTag, CdsIconCustomTag];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_ICON_DIRECTIVES], exports: [CLR_ICON_DIRECTIVES] })\nexport class ClrIconModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { KeyCodes, IEKeyCodes } from './../../enums/key-codes.enum';\n\nexport function keyValidator(key: string) {\n  if (key === KeyCodes.ArrowUp || key === IEKeyCodes.ArrowUp) {\n    return KeyCodes.ArrowUp;\n  } else if (key === KeyCodes.ArrowDown || key === IEKeyCodes.ArrowDown) {\n    return KeyCodes.ArrowDown;\n  } else if (key === KeyCodes.ArrowRight || key === IEKeyCodes.ArrowRight) {\n    return KeyCodes.ArrowRight;\n  } else if (key === KeyCodes.ArrowLeft || key === IEKeyCodes.ArrowLeft) {\n    return KeyCodes.ArrowLeft;\n  } else if (key === KeyCodes.Space || key === IEKeyCodes.Space) {\n    return KeyCodes.Space;\n  } else if (key === KeyCodes.Escape || key === IEKeyCodes.Escape) {\n    return KeyCodes.Escape;\n  } else {\n    return key;\n  }\n}\n\nexport function preventArrowKeyScroll(event: KeyboardEvent) {\n  const validKey = keyValidator(event.key);\n\n  if (\n    validKey === KeyCodes.ArrowUp ||\n    validKey === KeyCodes.ArrowDown ||\n    validKey === KeyCodes.ArrowLeft ||\n    validKey === KeyCodes.ArrowRight\n  ) {\n    // prevent element container scroll\n    // MDN references this is really the only way to prevent native browser interactions\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n    event.preventDefault();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { preventArrowKeyScroll } from '../../focus/key-focus/util';\n\n@Injectable()\nexport class ClrPopoverToggleService {\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _open = false;\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n  private _openEvent: Event;\n  private _openEventChange: Subject<Event> = new Subject<Event>();\n\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  public set openEvent(event: Event) {\n    this._openEvent = event;\n    this._openEventChange.next(event);\n  }\n\n  public get openEvent(): Event {\n    return this._openEvent;\n  }\n\n  public getEventChange(): Observable<Event> {\n    return this._openEventChange.asObservable();\n  }\n\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  public get open(): boolean {\n    return this._open;\n  }\n\n  // For compatibility with legacy IfOpenService based implementations\n  get originalEvent(): Event {\n    return this._openEvent;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public toggleWithEvent(event: any) {\n    preventArrowKeyScroll(event);\n\n    this.openEvent = event;\n    this.open = !this.open;\n  }\n\n  private _popoverAligned: Subject<HTMLElement> = new Subject();\n\n  public get popoverAligned(): Observable<HTMLElement> {\n    return this._popoverAligned.asObservable();\n  }\n\n  public popoverAlignedEmit(popoverNode: HTMLElement) {\n    this._popoverAligned.next(popoverNode);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrViewportViolation {\n  BOTTOM = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  TOP = 3,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAlignment {\n  START = 0,\n  CENTER = 0.5,\n  END = 1,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ElementRef, Injectable, Renderer2, Inject, OnDestroy } from '@angular/core';\nimport { ClrPopoverToggleService } from './popover-toggle.service';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Injectable()\nexport class ClrPopoverEventsService implements OnDestroy {\n  public outsideClickClose = true;\n  public scrollToClose = true;\n  private documentClickListener: () => void;\n  public ignoredEvent: any;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private smartOpenService: ClrPopoverToggleService,\n    @Inject(DOCUMENT) private document: HTMLDocument\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.addEscapeListener();\n          this.addClickListener();\n          this.addScrollListener();\n        } else {\n          this.removeAllEventListeners();\n        }\n      }),\n      smartOpenService.getEventChange().subscribe(event => {\n        // Remember the event that was used to open the content\n        this.ignoredEvent = event;\n      })\n    );\n  }\n\n  private scrollSubscription: Subscription;\n  public addScrollListener() {\n    if (this.scrollToClose) {\n      this.documentScroller = fromEvent(this.document, 'scroll', { capture: true });\n      this.scrollSubscription = this.documentScroller\n        .pipe(filter(this.testForSmartPopoverContentContainer))\n        .subscribe(() => {\n          this.smartOpenService.open = false;\n          this.setAnchorFocus();\n        });\n    } else {\n      // I think this is where dynamic re-positioning will be added\n      // Instead of testing like we do in the close pipe below\n      // we need to switch positioning to use an observable and then\n      // debounce the scroll events to recalculate content position in a performant way\n      // For now, ignore scrolling events.\n      return;\n    }\n  }\n\n  public removeScrollListener() {\n    if (this.documentScroller) {\n      this.scrollSubscription.unsubscribe();\n      delete this.documentScroller;\n    }\n  }\n\n  private testForSmartPopoverContentContainer(event: Event): boolean {\n    // Filter for the documentScroller observable event targets\n    let target = event.target as HTMLElement;\n\n    // Walk up the DOM tree until we get to the element that is a direct child of the body.\n    while (target.classList && target.parentElement.localName !== 'body') {\n      target = target.parentElement;\n    }\n\n    // Target is the child element of body where the scroll events originated.\n    // Return false and prevent the popover content container from closing for any scroll events inside a popover\n    // content container.\n    if (target.classList) {\n      // check scroll events to see if they are happening in popover content or elsewhere\n      return target.classList.contains('clr-popover-content') ? false : true;\n    } else {\n      // prevents it from closing right after first opening\n      return false;\n    }\n  }\n\n  public addClickListener() {\n    if (this.outsideClickClose) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', (event: MouseEvent) => {\n        if (event === this.ignoredEvent) {\n          // Here we ignore the opening click event (w/o this content opens and immediately closes.\n          delete this.ignoredEvent;\n        } else {\n          this.smartOpenService.open = false;\n          // Rather than a complex change to the focus trap I put focus on the element that was clicked\n          const clickedElement = event.target as HTMLElement;\n          clickedElement.focus();\n        }\n      });\n    }\n  }\n\n  public removeClickListener() {\n    if (this.outsideClickClose) {\n      delete this.ignoredEvent;\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n\n  private escapeListener: () => void;\n  public addEscapeListener() {\n    this.escapeListener = this.renderer.listen(this.document, 'keydown.escape', () => {\n      this.smartOpenService.open = false;\n      this.setAnchorFocus();\n    });\n  }\n\n  public removeEscapeListener() {\n    if (this.escapeListener) {\n      this.escapeListener();\n      delete this.escapeListener;\n    }\n  }\n\n  private _anchorButtonRef: ElementRef;\n  public set anchorButtonRef(ref: ElementRef) {\n    this._anchorButtonRef = ref;\n  }\n  public get anchorButtonRef(): ElementRef {\n    return this._anchorButtonRef;\n  }\n\n  private _closeButtonRef: ElementRef;\n  public set closeButtonRef(ref: ElementRef) {\n    this._closeButtonRef = ref;\n  }\n  public get closeButtonRef(): ElementRef {\n    return this._closeButtonRef;\n  }\n\n  public setCloseFocus(): void {\n    this._closeButtonRef.nativeElement.focus();\n  }\n\n  public setAnchorFocus(): void {\n    this.anchorButtonRef.nativeElement.focus();\n  }\n\n  private _contentRef: ElementRef;\n  public set contentRef(host: ElementRef) {\n    this._contentRef = host;\n  }\n  public get contentRef(): ElementRef {\n    return this._contentRef;\n  }\n\n  private documentScroller: Observable<Event>;\n\n  private removeAllEventListeners() {\n    this.removeScrollListener();\n    this.removeClickListener();\n    this.removeEscapeListener();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.removeAllEventListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from './interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from './enums/viewport-violation.enum';\nimport { ClrVisibilityCoords } from './interfaces/visibility-coords.interface';\nimport { ClrAlignment } from './enums/alignment.enum';\n\n// Put the forward arg here but it is only needed when nudging content or anchors.\nexport type ClrTransform = (position: ClrPopoverPosition, back?: boolean) => ClrPopoverPosition;\n\nexport const flipSides: ClrTransform = position => {\n  return {\n    ...position,\n    side: -1 * position.side,\n  };\n};\n\n// This could be used in more advanced positioning algorithms.\n// flipAxisFlipSideAndNudgeContent(flipAxis, flipSide, nudge, nudgeForward?): ClrTransform {...}\n// I would like to keep it for now.\nexport const flipAxis: ClrTransform = position => {\n  return {\n    ...position,\n    axis: position.axis === 0 ? 1 : 0,\n  };\n};\n\nexport const nudgeContent: ClrTransform = (position, forward) => {\n  const nextAlignment = position.content + (forward ? 0.5 : -0.5);\n  if (nextAlignment < 0 || nextAlignment > 1) {\n    return position;\n  } else {\n    return {\n      ...position,\n      content: nextAlignment,\n    };\n  }\n};\n\nexport function flipSidesAndNudgeContent(flip: ClrTransform, nudge: ClrTransform, nudgeBack?: boolean): ClrTransform {\n  return (position: ClrPopoverPosition): ClrPopoverPosition => nudge(flip(position), nudgeBack);\n}\n\nexport function align(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): ClrPopoverContentOffset {\n  let xDiff = anchor.left;\n  let yDiff = anchor.top;\n\n  // When ClrAxis is VERTICAL BEFORE = left, AFTER = right\n  // When ClrAxis is HORIZONTAL BEFORE is top, AFTER is bottom\n  switch (position.axis + position.side) {\n    case -1: {\n      // ClrAxis.VERTICAL + ClrSide.BEFORE\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff -= content.height; // pull content up to the top of the anchor\n      break;\n    }\n    case 1: {\n      // ClrAxis.VERTICAL + ClrSide.AFTER\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff += anchor.height; // push the content down to below the anchor\n      break;\n    }\n    case 0: {\n      // ClrAxis.HORIZONTAL + ClrSide.BEFORE\n      xDiff -= content.width; // pull the content left of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    case 2: {\n      // ClrAxis.HORIZONTAL + ClrSide.AFTER\n      xDiff += anchor.width; // push the content right of of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return { xOffset: xDiff, yOffset: yDiff };\n}\n\nfunction alignHorizontal(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  let horizontalOffset = 0;\n  // horizontal offset for the anchor position\n  switch (position.anchor /*calculate for the anchor alignment*/) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset += anchor.width / 2; // push content over 1/2 anchor width\n      break;\n    }\n    case ClrAlignment.END: {\n      horizontalOffset += anchor.width; //  push content over width of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // horizontal offsets for anchor alignment\n  switch (\n    position.content // calculate for the content alignment\n  ) {\n    case ClrAlignment.START: {\n      // Nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset -= content.width / 2; // pull content left by a value of 1/2 content width\n      break;\n    }\n    case ClrAlignment.END: {\n      // subtract the width of currentContent from horizontalOffset to pull it back\n      horizontalOffset -= content.width;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return horizontalOffset;\n}\n\nfunction alignVertical(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  // y axis offsets for anchor alignment\n  let verticalOffset = 0;\n\n  // Calculate y offset for anchor position\n  switch (position.anchor) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset += anchor.height / 2; // push content down to the middle of the anchor rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset += anchor.height; // push content down to the bottom of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // Calculate y offsets for content alignment\n  switch (position.content) {\n    case ClrAlignment.START: {\n      // aligned to the top of the content rect\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset -= content.height / 2; // pull content back up to the middle of the content rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset -= content.height; // pull content back up to the bottom of the content rect\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return verticalOffset;\n}\n\nexport function testVisibility(offset: ClrPopoverContentOffset, content: ClientRect): ClrViewportViolation[] {\n  const violations: ClrViewportViolation[] = [];\n  const mockCoords: ClrVisibilityCoords = {\n    bottom: offset.yOffset + content.height,\n    left: offset.xOffset,\n    right: offset.xOffset + content.width,\n    top: offset.yOffset,\n  };\n\n  if (!(mockCoords.top >= 0)) {\n    violations.push(ClrViewportViolation.TOP);\n  }\n  if (!(mockCoords.left >= 0)) {\n    violations.push(ClrViewportViolation.LEFT);\n  }\n  if (!(mockCoords.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {\n    violations.push(ClrViewportViolation.BOTTOM);\n  }\n  if (!(mockCoords.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n    violations.push(ClrViewportViolation.RIGHT);\n  }\n\n  return violations;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAxis {\n  VERTICAL,\n  HORIZONTAL,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { ClrPopoverEventsService } from './popover-events.service';\nimport { ClrPopoverPosition } from '../interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from '../interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from '../enums/viewport-violation.enum';\nimport { align, flipSidesAndNudgeContent, flipSides, nudgeContent, testVisibility } from '../position-operators';\nimport { ClrAxis } from '../enums/axis.enum';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverPositionService {\n  private currentAnchorCoords: ClientRect;\n  private currentContentCoords: ClientRect;\n  private contentOffsets: ClrPopoverContentOffset;\n  private _position: ClrPopoverPosition;\n\n  private _shouldRealign: Subject<void> = new Subject();\n  shouldRealign: Observable<void> = this._shouldRealign.asObservable();\n\n  realign() {\n    this._shouldRealign.next();\n  }\n\n  set position(position: ClrPopoverPosition) {\n    this._position = position;\n  }\n  get position(): ClrPopoverPosition {\n    return this._position;\n  }\n\n  constructor(private eventService: ClrPopoverEventsService, @Inject(PLATFORM_ID) public platformId: any) {}\n\n  public alignContent(content: HTMLElement): ClrPopoverContentOffset {\n    if (!isPlatformBrowser(this.platformId)) {\n      // Only position when in a browser.\n      // Default to the browser origin and prevent getBoundingClientRect from running.\n      return {\n        xOffset: 0,\n        yOffset: 0,\n      };\n    }\n\n    this.currentAnchorCoords = this.eventService.anchorButtonRef.nativeElement.getBoundingClientRect();\n    this.currentContentCoords = content.getBoundingClientRect();\n    this.contentOffsets = align(this.position, this.currentAnchorCoords, this.currentContentCoords);\n\n    const visibilityViolations: ClrViewportViolation[] = testVisibility(this.contentOffsets, this.currentContentCoords);\n    /**\n     * Calculate the sum of viewport errors. This calculation is used below with the provided Axis in the given\n     * ClrPopoverPosition. Its worth putting the ClrViewportViolation enum values here:\n     *\n     *   BOTTOM = 0,\n     *   LEFT = 1,\n     *   RIGHT = 2,\n     *   TOP = 3,\n     *\n     *   So, this.visibilityViolations.length tells us how many sides of the viewport that the popover content was\n     *   clipped on. We can only help when the content has an issue on one or two sides.\n     *   errorSum is calculated to determine _how_ to change the position. Looking at both the axis and the number\n     *   of violations I can use the errorSum to determine how to transform the position (on the fly) and adjust\n     *   where it can be improved.\n     *\n     *   Note, more than 3 viewport violations and there isn't anything we can do to help. Also when there are two\n     *   violations, we can't help if the violations are TOP+BOTTOM || LEFT+RIGHT => There is no transformation we\n     *   can make to the postion that will help.\n     *\n     *   Some examples:\n     *   There is only one error and Primary axis is VERTICAL\n     *   - this.handleVerticalAxisOneViolation has a switch that will use the error sum to apply the correct\n     *   transform to the postion based on the reduction of visibilityViolations.\n     *\n     *   There are two errors and Primary axis is HORIZONTAL\n     *   - handleHorizontalAxisTwoViolations has a switch that uses the error sum to apply both transforms needed to\n     *   improve the content position based on the reduction of visibilityViolations.\n     */\n\n    const errorSum = visibilityViolations.reduce((count, current) => {\n      return count + current;\n    }, 0);\n\n    if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there is one viewport violation\n      this.handleVerticalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there is one viewport violation\n      this.handleHorizontalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there are two viewport violations\n      this.handleVerticalAxisTwoViolations(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there are two viewport violations\n      this.handleHorizontalAxisTwoViolations(errorSum);\n    }\n    return this.contentOffsets;\n  }\n\n  private handleVerticalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 0:\n      case 3: {\n        // BOTTOM(0) or TOP(3) are primary violations and we can just flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 1: {\n        // LEFT(1) is secondary and needs to nudge content right\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 2: {\n        // RIGHT(2) is secondary and  needs to nudge content left\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleVerticalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      // We know there are two violations. We can use the errorSum to determine which combination of sides were\n      // violated and handle appropriately.\n      case 5: {\n        // TOP(3)+RIGHT(2) is case 5. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 4: {\n        //TOP(3)+LEFT(1) is case 4, we need to flip sides and nudge content to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2: {\n        // BOTTOM(0)+RIGHT(2) is case 2. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 1: {\n        // BOTTOM(0)+LEFT(1) is case 1. We need to flip sides and nudge to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 1:\n      case 2: {\n        // LEFT(1) and RIGHT(2) are primary violations so we can flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 0: {\n        // BOTTOM(0) is a secondary violation and we need to nudge content up\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3) is a secondary violation and we need to nudge content down\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      case 5:\n      case 4: {\n        // TOP(3)+LEFT(1) is case 4.\n        // TOP(3)+RIGHT(2) is case 5.\n        // In both of these cases we need to flip sides and nudge content down\n        const flipAndNudgeDown = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeDown(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2:\n      case 1: {\n        // BOTTOM(0)+RIGHT(2) is case 2.\n        // BOTTOM(0)+LEFT(1) is case 1.\n        // In both cases we  need to flip sides and nudge content up\n        const flipAndNudgeUp = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(flipAndNudgeUp(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  AfterContentChecked,\n  EventEmitter,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverPositionService } from './providers/popover-position.service';\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { debounceTime } from 'rxjs/operators';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Directive({ selector: '[clrPopoverContent]' })\nexport class ClrPopoverContent implements AfterContentChecked, OnDestroy {\n  private view: EmbeddedViewRef<void>;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrPopoverContent')\n  public set open(value: boolean) {\n    this.smartOpenService.open = !!value;\n  }\n\n  @Input('clrPopoverContentAt')\n  set contentAt(position: ClrPopoverPosition) {\n    this.smartPositionService.position = position;\n  }\n\n  @Input('clrPopoverContentOutsideClickToClose')\n  set outsideClickClose(clickToClose: boolean) {\n    this.smartEventsService.outsideClickClose = !!clickToClose;\n  }\n\n  @Input('clrPopoverContentScrollToClose')\n  set scrollToClose(scrollToClose: boolean) {\n    this.smartEventsService.scrollToClose = !!scrollToClose;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private renderer: Renderer2,\n    private smartPositionService: ClrPopoverPositionService,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        if (change) {\n          this.addContent();\n        } else {\n          this.removeContent();\n        }\n      }),\n      this.smartPositionService.shouldRealign.subscribe(() => {\n        this.shouldRealign = true;\n        // Avoid flickering on initialization, caused by the asynchronous nature of the\n        // check-collector pattern.\n        if (this.view) {\n          this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n        }\n      }),\n      // Here we collect subsequent synchronously received content-check events and only take action\n      // at the end of the cycle. See below for details on the check-collector pattern.\n      this.checkCollector.pipe(debounceTime(0)).subscribe(() => {\n        this.alignContent();\n        this.shouldRealign = false;\n        if (this.view) {\n          this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '1');\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.removeContent();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private removeContent(): void {\n    if (!this.view) {\n      return;\n    }\n    this.view.rootNodes.forEach(node => this.renderer.removeChild(this.document.body, node));\n    this.container.clear();\n    delete this.view;\n  }\n\n  /**\n   * TODO(matt): investigate why DebugElement retains a reference to the nodes and causes a memory leak.\n   * A note about the use of appendChild/removeChild\n   * The DebugElement is keeping a reference to the detached node and its unclear why.\n   * This does warrant further investigation. But, since it doesn't happen in production mode\n   * it is a low priority issue for now.\n   */\n  private addContent() {\n    // Create the view container\n    this.view = this.container.createEmbeddedView(this.template);\n    this.smartEventsService.contentRef = this.view.rootNodes[0]; // So we know where/what to set close focus on\n    this.renderer.addClass(this.view.rootNodes[0], 'clr-popover-content');\n    // Reset to the begining of the document to be available for sizing/positioning calculations.\n    // If we add new content to the bottom it triggers changes in the layout that may lead to false anchor\n    // coordinates values.\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', '0px');\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', '0px');\n    // We need to hide it during the calculation phase, while it's not yet finally positioned.\n    this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n    this.renderer.listen(this.view.rootNodes[0], 'click', event => {\n      this.smartOpenService.openEvent = event;\n    });\n    this.view.rootNodes.forEach(node => {\n      this.renderer.appendChild(this.document.body, node);\n    });\n    // Mark for realingment on the next content-check cycle.\n    this.shouldRealign = true;\n  }\n\n  private shouldRealign = false;\n\n  // Check-collector pattern:\n  // In order to get accurate content height/width values, we cannot calculate alignment offsets until\n  // after the projected content has stabilized.\n  // As multiple check events may happen in the same rendering cycle, we need to collect all events\n  // and only act after the content is really stable. Or we may get wrong intermediate positioning values.\n  // We will channel subsequent content check events through this observable.\n  private checkCollector: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentChecked(): void {\n    if (this.smartOpenService.open && this.view && this.shouldRealign) {\n      // Channel content-check event through the check-collector\n      this.checkCollector.emit();\n    }\n  }\n\n  private alignContent() {\n    if (!this.view) {\n      return;\n    }\n    const positionCoords = this.smartPositionService.alignContent(this.view.rootNodes[0]);\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', `${positionCoords.yOffset}px`);\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', `${positionCoords.xOffset}px`);\n    this.smartOpenService.popoverAlignedEmit(this.view.rootNodes[0]);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrPopoverOpenCloseButton]',\n  host: {\n    '[class.clr-smart-open-close]': 'true',\n  },\n})\nexport class ClrPopoverOpenCloseButton implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(private smartOpenService: ClrPopoverToggleService) {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        this.openCloseChange.next(change);\n      })\n    );\n  }\n\n  @Output('clrPopoverOpenCloseChange') openCloseChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef, EventEmitter, Output, HostListener, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[clrPopoverCloseButton]',\n  host: {\n    '[class.clr-smart-close-button]': 'true',\n  },\n})\nexport class ClrPopoverCloseButton implements OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.pipe(filter(value => !value)).subscribe(() => {\n        this.closeChange.next();\n      })\n    );\n  }\n\n  @Output('clrPopoverOnCloseChange') closeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n    this.smartEventsService.setAnchorFocus();\n  }\n\n  ngAfterViewInit() {\n    this.smartEventsService.closeButtonRef = this.elementRef;\n    this.smartEventsService.setCloseFocus();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\n\n@Directive({\n  selector: '[clrPopoverAnchor]',\n  host: {\n    '[class.clr-anchor]': 'true',\n  },\n})\nexport class ClrPopoverAnchor {\n  constructor(smartEventService: ClrPopoverEventsService, element: ElementRef) {\n    smartEventService.anchorButtonRef = element;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrPopoverContent } from './popover-content';\nimport { ClrPopoverOpenCloseButton } from './popover-open-close-button';\nimport { ClrPopoverCloseButton } from './popover-close-button';\nimport { ClrPopoverAnchor } from './popover-anchor';\n\n@NgModule({\n  imports: [],\n  declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n  exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n})\nexport class ClrPopoverModuleNext {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { LoadingListener } from './loading-listener';\n\nexport enum ClrLoadingState {\n  DEFAULT,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\n@Directive({ selector: '[clrLoading]' })\nexport class ClrLoading implements OnDestroy {\n  public static ngAcceptInputType_loadingState: boolean | ClrLoadingState | null;\n\n  // We find the first parent that handles something loading\n  constructor(@Optional() private listener: LoadingListener) {}\n\n  private _loadingState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  public get loadingState() {\n    return this._loadingState;\n  }\n\n  @Input('clrLoading')\n  public set loadingState(value: boolean | ClrLoadingState) {\n    if (value === true) {\n      value = ClrLoadingState.LOADING;\n    } else if (!value) {\n      value = ClrLoadingState.DEFAULT;\n    }\n\n    if (value === this._loadingState) {\n      return;\n    }\n\n    this._loadingState = value;\n    if (this.listener) {\n      this.listener.loadingStateChange(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this.loadingState = ClrLoadingState.DEFAULT;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrLoadingState } from './loading';\n\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n */\nexport abstract class LoadingListener {\n  abstract loadingStateChange(state: ClrLoadingState): void;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrButton } from '../button-group/button';\n\n@Injectable()\nexport class ButtonInGroupService {\n  private _changes: Subject<ClrButton> = new Subject<ClrButton>();\n\n  get changes(): Observable<ClrButton> {\n    return this._changes.asObservable();\n  }\n\n  updateButtonGroup(button: ClrButton): void {\n    this._changes.next(button);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-button',\n  template: `\n    <ng-template #buttonProjectedRef>\n      <button\n        [class]=\"classNames\"\n        (click)=\"emitClick($event)\"\n        [attr.type]=\"type\"\n        [attr.name]=\"name\"\n        [attr.disabled]=\"disabled\"\n        [attr.id]=\"id\"\n      >\n        <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n        <ng-content></ng-content>\n      </button>\n    </ng-template>\n  `,\n  providers: [{ provide: LoadingListener, useExisting: ClrButton }],\n})\nexport class ClrButton implements LoadingListener {\n  private _enableService = false;\n\n  @ViewChild('buttonProjectedRef', { static: true })\n  templateRef: TemplateRef<ClrButton>;\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public buttonInGroupService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService\n  ) {}\n\n  private _inMenu = false;\n\n  get inMenu(): boolean {\n    return this._inMenu;\n  }\n\n  @Input('clrInMenu')\n  set inMenu(value: boolean) {\n    value = !!value;\n    if (this._inMenu !== value) {\n      this._inMenu = value;\n      // We check if the service flag is enabled\n      // and if the service exists because the service is optional\n      if (this._enableService && this.buttonInGroupService) {\n        this.buttonInGroupService.updateButtonGroup(this);\n      }\n    }\n  }\n\n  private _classNames = 'btn';\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  @Input('class')\n  set classNames(value: string) {\n    if (typeof value === 'string') {\n      const classNames: string[] = value.split(' ');\n      if (classNames.indexOf('btn') === -1) {\n        classNames.push('btn');\n      }\n      this._classNames = classNames.join(' ');\n    }\n  }\n\n  private _name: string = null;\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    if (typeof value === 'string') {\n      this._name = value;\n    }\n  }\n\n  private _type: string = null;\n\n  get type(): string {\n    return this._type;\n  }\n\n  @Input('type')\n  set type(value: string) {\n    if (typeof value === 'string') {\n      this._type = value;\n    }\n  }\n\n  private _id: string = null;\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input('id')\n  set id(value: string) {\n    if (typeof value === 'string') {\n      this._id = value;\n    }\n  }\n\n  private _disabled: any = null;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input('disabled')\n  set disabled(value: any) {\n    if (value !== null && value !== false) {\n      this._disabled = '';\n    } else {\n      this._disabled = null;\n    }\n  }\n\n  public loading: boolean;\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  @Output('click') _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  emitClick($event: Event): void {\n    if (this.inMenu) {\n      this.toggleService.toggleWithEvent($event);\n    }\n    this._click.emit(true);\n  }\n\n  ngAfterViewInit() {\n    this._enableService = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrCommonStrings } from './common-strings.interface';\n\nexport const commonStringsDefault: ClrCommonStrings = {\n  open: 'Open',\n  close: 'Close',\n  show: 'Show',\n  hide: 'Hide',\n  expand: 'Expand',\n  collapse: 'Collapse',\n  more: 'More',\n  select: 'Select',\n  selectAll: 'Select All',\n  previous: 'Previous',\n  next: 'Next',\n  current: 'Jump to current',\n  info: 'Info',\n  success: 'Success',\n  warning: 'Warning',\n  danger: 'Error',\n  rowActions: 'Available actions',\n  pickColumns: 'Show or hide columns',\n  showColumns: 'Show Columns',\n  sortColumn: 'Sort Column',\n  firstPage: 'First Page',\n  lastPage: 'Last Page',\n  nextPage: 'Next Page',\n  previousPage: 'Previous Page',\n  currentPage: 'Current Page',\n  totalPages: 'Total Pages',\n  filterItems: 'Filter items',\n  minValue: 'Min value',\n  maxValue: 'Max value',\n  modalContentStart: 'Beginning of Modal Content',\n  modalContentEnd: 'End of Modal Content',\n  showColumnsMenuDescription: 'Show or hide columns menu',\n  allColumnsSelected: 'All columns selected',\n  signpostToggle: 'Signpost Toggle',\n  signpostClose: 'Signpost Close',\n  loading: 'Loading',\n  // Datagrid\n  detailPaneStart: 'Start of row details',\n  detailPaneEnd: 'End of row details',\n  singleSelectionAriaLabel: 'Single selection header',\n  singleActionableAriaLabel: 'Single actionable header',\n  detailExpandableAriaLabel: 'Toggle more row content',\n  datagridFilterAriaLabel: 'Toggle column filter',\n  columnSeparatorAriaLabel: 'Column resize handle',\n  columnSeparatorDescription: 'Not necessary to use this button',\n  // Alert\n  alertCloseButtonAriaLabel: 'Close alert',\n  // Date Picker\n  datepickerToggle: 'Toggle datepicker',\n  datepickerPreviousMonth: 'Previous month',\n  datepickerCurrentMonth: 'Current month',\n  datepickerNextMonth: 'Next month',\n  datepickerPreviousDecade: 'Previous decade',\n  datepickerNextDecade: 'Next decade',\n  datepickerCurrentDecade: 'Current decade',\n  datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',\n  datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',\n  // Stack View\n  stackViewChanged: 'Value changed.',\n  //Vertical Nav\n  verticalNavGroupToggle: 'Toggle vertical navigation group',\n  verticalNavToggle: 'Toggle vertical navigation',\n  // Timeline steps\n  timelineStepNotStarted: 'Not started',\n  timelineStepCurrent: 'Current',\n  timelineStepSuccess: 'Completed',\n  timelineStepError: 'Error',\n  timelineStepProcessing: 'In progress',\n  // Combobox\n  comboboxDelete: 'Delete selected option',\n  comboboxSearching: 'Searching for matches for \"{INPUT}\"',\n  comboboxSelection: 'Selection',\n  comboboxSelected: 'Selected',\n  comboboxNoResults: 'No results',\n  comboboxOpen: 'Show options',\n  // Datagrid expandable rows\n  dategridExpandableBeginningOf: 'Beginning of',\n  dategridExpandableEndOf: 'End of',\n  dategridExpandableRowContent: 'Expandable row content',\n  dategridExpandableRowsHelperText: `Screen reader table commands may not work for viewing expanded content, please use your screen reader's browse mode to read the content exposed by this button`,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { commonStringsDefault } from './../../utils/i18n/common-strings.default';\nimport { ClrCommonStrings } from './../../utils/i18n/common-strings.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrCommonStringsService {\n  private _strings = commonStringsDefault;\n\n  /**\n   * Allows you to pass in new overrides for localization\n   */\n  localize(overrides: Partial<ClrCommonStrings>) {\n    this._strings = { ...this._strings, ...overrides };\n  }\n\n  /**\n   * Access to all of the keys as strings\n   */\n  get keys(): Readonly<ClrCommonStrings> {\n    return this._strings;\n  }\n\n  /**\n   * Parse a string with a set of tokens to replace\n   */\n  parse(source: string, tokens: { [key: string]: string } = {}) {\n    const names = Object.keys(tokens);\n    let output = source;\n    if (names.length) {\n      names.forEach(name => {\n        output = output.replace(`{${name}}`, tokens[name]);\n      });\n    }\n    return output;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nlet NB_INSTANCES = 0;\n\nexport const UNIQUE_ID = new InjectionToken<string>('UNIQUE_ID');\n\nexport function uniqueIdFactory() {\n  return 'clr-id-' + NB_INSTANCES++;\n}\n\nexport const UNIQUE_ID_PROVIDER = {\n  provide: UNIQUE_ID,\n  useFactory: uniqueIdFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrSide {\n  BEFORE = -1,\n  AFTER = 1,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrAxis } from './axis.enum';\nimport { ClrSide } from './side.enum';\nimport { ClrAlignment } from './alignment.enum';\n\ninterface ClrPopoverPositionsInterface {\n  axis: ClrAxis;\n  side: ClrSide;\n  anchor: ClrAlignment;\n  content: ClrAlignment;\n}\n\nexport interface ClrPopoverPositions {\n  [key: string]: any;\n}\n\nexport class ClrPopoverPositions {\n  static 'top-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'top-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'bottom-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'bottom-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'right-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'right-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'left-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'left-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\n\nimport { ClrButton } from './button';\n\n@Component({\n  selector: 'clr-button-group',\n  templateUrl: 'button-group.html',\n  providers: [\n    ButtonInGroupService,\n    UNIQUE_ID_PROVIDER,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n  ],\n  host: { '[class.btn-group]': 'true' },\n})\nexport class ClrButtonGroup {\n  @ContentChildren(ClrButton) buttons: QueryList<ClrButton>;\n\n  constructor(\n    public buttonGroupNewService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  public popoverPosition: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  inlineButtons: ClrButton[] = [];\n  menuButtons: ClrButton[] = [];\n\n  /**\n   * 1. Initializes the initial Button Group View\n   * 2. Subscribes to changes on the ContentChildren\n   *    in case the user content projection changes\n   */\n  ngAfterContentInit() {\n    this.initializeButtons();\n    this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n    this.buttons.changes.subscribe(() => {\n      this.initializeButtons();\n    });\n  }\n\n  /**\n   * Moves the button into the other ViewContainer\n   * when an update is received.\n   *\n   * @param button\n   */\n  rearrangeButton(button: ClrButton): void {\n    let fromView: ClrButton[];\n    let toView: ClrButton[];\n    if (button.inMenu) {\n      fromView = this.inlineButtons;\n      toView = this.menuButtons;\n    } else {\n      fromView = this.menuButtons;\n      toView = this.inlineButtons;\n    }\n    const index: number = fromView.indexOf(button);\n    if (index > -1) {\n      fromView.splice(index, 1);\n      const moveIndex = this.getMoveIndex(button);\n      if (moveIndex <= toView.length) {\n        toView.splice(moveIndex, 0, button);\n      }\n    }\n  }\n\n  /**\n   * Author: Eudes\n   *\n   * Finds the order of a button w.r.t other buttons\n   *\n   * @param buttonToMove\n   * @returns\n   */\n  getMoveIndex(buttonToMove: ClrButton): number {\n    const tempArr: ClrButton[] = this.buttons.filter(button => button.inMenu === buttonToMove.inMenu);\n    return tempArr.indexOf(buttonToMove);\n  }\n\n  initializeButtons(): void {\n    const tempInlineButtons: ClrButton[] = [];\n    const tempInMenuButtons: ClrButton[] = [];\n    this.buttons.forEach(button => {\n      if (button.inMenu) {\n        tempInMenuButtons.push(button);\n      } else {\n        tempInlineButtons.push(button);\n      }\n    });\n    this.inlineButtons = tempInlineButtons;\n    this.menuButtons = tempInMenuButtons;\n  }\n\n  /**\n   * Overflow Menu\n   *\n   */\n\n  // Indicates the position of the overflow menu\n  private _menuPosition: string;\n\n  get menuPosition(): string {\n    return this._menuPosition;\n  }\n\n  @Input('clrMenuPosition')\n  set menuPosition(pos: string) {\n    if (pos && (ClrPopoverPositions as Record<string, any>)[pos]) {\n      this._menuPosition = pos;\n    } else {\n      this._menuPosition = 'bottom-left';\n    }\n\n    this.popoverPosition = (ClrPopoverPositions as Record<string, any>)[this._menuPosition];\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrButton } from './button';\nimport { ClrButtonGroup } from './button-group';\n\nexport const CLR_BUTTON_GROUP_DIRECTIVES: Type<any>[] = [ClrButton, ClrButtonGroup];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrPopoverModuleNext],\n  declarations: [CLR_BUTTON_GROUP_DIRECTIVES],\n  exports: [CLR_BUTTON_GROUP_DIRECTIVES],\n})\nexport class ClrButtonGroupModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\n@Component({\n  selector: 'button[clrLoading]',\n  template: `\n    <ng-container [ngSwitch]=\"state\">\n      <span *ngSwitchCase=\"buttonState.LOADING\">\n        <span @spinner class=\"spinner spinner-inline\"></span>\n      </span>\n      <span *ngSwitchCase=\"buttonState.SUCCESS\">\n        <span\n          @validated\n          (@validated.done)=\"this.loadingStateChange(this.buttonState.DEFAULT)\"\n          class=\"spinner spinner-inline spinner-check\"\n        ></span>\n      </span>\n      <span *ngSwitchCase=\"buttonState.DEFAULT\" @defaultButton>\n        <ng-content></ng-content>\n      </span>\n    </ng-container>\n  `,\n  providers: [{ provide: LoadingListener, useExisting: ClrLoadingButton }],\n  animations: [\n    trigger('defaultButton', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      // TODO: see if we can get leave animation to work before spinner's enter animation\n      transition(':leave', [style({ opacity: 0 })]),\n    ]),\n    trigger('spinner', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n    trigger('validated', [\n      transition(':enter', [\n        animate(\n          '600ms',\n          keyframes([\n            style({ transform: 'scale(0,0)', offset: 0 }),\n            style({ opacity: 1, offset: 0.2 }),\n            style({ transform: 'scale(1.2,1.2)', offset: 0.4 }),\n            style({ transform: 'scale(.9,.9)', offset: 0.6 }),\n            style({ transform: 'scale(1,1)', offset: 1 }),\n          ])\n        ),\n      ]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  host: { '[attr.disabled]': \"disabled? '' : null\" },\n})\nexport class ClrLoadingButton implements LoadingListener {\n  public buttonState = ClrLoadingState;\n  public state: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  @Input('disabled') public disabled: boolean;\n\n  @Output('clrLoadingChange')\n  public clrLoadingChange: EventEmitter<ClrLoadingState> = new EventEmitter<ClrLoadingState>(false);\n\n  constructor(public el: ElementRef, private renderer: Renderer2) {}\n\n  loadingStateChange(state: ClrLoadingState): void {\n    if (state === this.state) {\n      return;\n    }\n    this.state = state;\n\n    switch (state) {\n      case ClrLoadingState.DEFAULT:\n        this.renderer.removeStyle(this.el.nativeElement, 'width');\n        this.renderer.removeStyle(this.el.nativeElement, 'transform'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        if (!this.disabled) {\n          this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n        }\n        break;\n      case ClrLoadingState.LOADING:\n        this.setExplicitButtonWidth();\n        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translatez(0)'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        this.renderer.setAttribute(this.el.nativeElement, 'disabled', '');\n        break;\n      case ClrLoadingState.SUCCESS:\n        this.setExplicitButtonWidth();\n        break;\n      case ClrLoadingState.ERROR:\n        this.loadingStateChange(ClrLoadingState.DEFAULT);\n        break;\n      default:\n        break;\n    }\n    this.clrLoadingChange.emit(state);\n  }\n\n  private setExplicitButtonWidth() {\n    if (this.el.nativeElement && this.el.nativeElement.getBoundingClientRect) {\n      const boundingClientRect = this.el.nativeElement.getBoundingClientRect();\n      this.renderer.setStyle(this.el.nativeElement, 'width', `${boundingClientRect.width}px`);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoadingButton } from './loading-button';\n\nexport const CLR_LOADING_BUTTON_DIRECTIVES: Type<any>[] = [ClrLoadingButton];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_LOADING_BUTTON_DIRECTIVES],\n  exports: [CLR_LOADING_BUTTON_DIRECTIVES],\n})\nexport class ClrLoadingButtonModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClarityIcons, ellipsisHorizontalIcon } from '@cds/core/icon';\n\nimport { ClrButtonGroupModule } from './button-group/button-group.module';\nimport { ClrLoadingButtonModule } from './button-loading/loading-button.module';\n\n@NgModule({\n  exports: [ClrLoadingButtonModule, ClrButtonGroupModule],\n})\nexport class ClrButtonModule {\n  constructor() {\n    ClarityIcons.addIcons(ellipsisHorizontalIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class EmptyAnchor {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * Internal module, please do not export!\n */\n@NgModule({ declarations: [EmptyAnchor], exports: [EmptyAnchor], entryComponents: [EmptyAnchor] })\nexport class ClrHostWrappingModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  InjectionToken,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { DynamicWrapper } from './dynamic-wrapper';\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * HostWrapper must be called in OnInit to ensure that the Views are ready. If its called in a constructor the view is\n * still undefined.\n * TODO - make sure these comment annotations do not break ng-packgr.\n */\nexport class HostWrapper<W extends DynamicWrapper> implements Injector {\n  constructor(containerType: Type<W>, vcr: ViewContainerRef, index = 0) {\n    this.injector = vcr.injector;\n    // If the host is already wrapped, we don't do anything\n    if (!this.injector.get(containerType, null)) {\n      const cfr = this.injector.get(ComponentFactoryResolver);\n      const el = this.injector.get(ElementRef);\n\n      // We need a new anchor, since we're projecting the current one.\n      vcr.createComponent(cfr.resolveComponentFactory(EmptyAnchor));\n      const factory: ComponentFactory<W> = cfr.resolveComponentFactory(containerType);\n      // Craft the element array based on what slot to use. Angular only uses the index to determine\n      // which ng-content to project into, so if you have more than one ng-content you'll need to set\n      // the index in the constructor appropriately\n      const element = [];\n      element[index] = [el.nativeElement];\n      // We're assuming only one projection slot, but in more complex cases we might want to provide\n      // a different array of projected elements.\n      const containerRef = vcr.createComponent(factory, undefined, undefined, element);\n      // We can now remove the useless anchor\n      vcr.remove(0);\n\n      // We note that the container was dynamically created\n      containerRef.instance._dynamic = true;\n\n      // We keep the wrapper's injector to access the dependencies that weren't available before.\n      this.injector = containerRef.injector;\n    }\n  }\n\n  private injector: Injector;\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    return this.injector.get(token, notFoundValue);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class ControlIdService {\n  private _id = 'clr-form-control-' + ++counter;\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport enum ClrFormLayout {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  COMPACT = 'compact',\n}\n\n@Injectable()\nexport class LayoutService {\n  readonly minLabelSize = 1;\n  readonly maxLabelSize = 12;\n  layout: ClrFormLayout = ClrFormLayout.HORIZONTAL;\n\n  // This is basically a replacement for Object.values(), which IE11 and Node <9 don't support :(\n  // String enums cannot be reverse-mapped, meaning ClrFormLayout['COMPACT'] does not return 'compact' so\n  // this exists to deal with this little caveat to get the list of the values as an array.\n  private layoutValues: string[] = Object.keys(ClrFormLayout).map(key => (ClrFormLayout as Record<string, any>)[key]);\n  private _labelSize = 2;\n\n  set labelSize(size: number) {\n    if (this.labelSizeIsValid(size)) {\n      this._labelSize = size;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  isVertical(): boolean {\n    return this.layout === ClrFormLayout.VERTICAL;\n  }\n\n  isHorizontal(): boolean {\n    return this.layout === ClrFormLayout.HORIZONTAL;\n  }\n\n  isCompact(): boolean {\n    return this.layout === ClrFormLayout.COMPACT;\n  }\n\n  get layoutClass(): string {\n    return `clr-form-${this.layout}`;\n  }\n\n  isValid(layout: string): boolean {\n    return this.layoutValues.indexOf(layout) > -1;\n  }\n\n  labelSizeIsValid(labelSize: number): boolean {\n    return Number.isInteger(labelSize) && labelSize >= this.minLabelSize && labelSize <= this.maxLabelSize;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NgControlService {\n  // Observable to subscribe to the control, since its not available immediately for projected content\n  private _controlChanges: Subject<NgControl> = new Subject<NgControl>();\n  get controlChanges(): Observable<NgControl> {\n    return this._controlChanges.asObservable();\n  }\n\n  setControl(control: NgControl) {\n    this._controlChanges.next(control);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\nimport { NgControlService } from '../providers/ng-control.service';\n\nexport enum CONTROL_STATE {\n  NONE = 'NONE',\n  VALID = 'VALID',\n  INVALID = 'INVALID',\n}\n\n@Injectable()\nexport class IfControlStateService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private control: NgControl;\n\n  // Implement our own status changes observable, since Angular controls don't\n  private _statusChanges: BehaviorSubject<CONTROL_STATE> = new BehaviorSubject(CONTROL_STATE.NONE);\n  get statusChanges(): Observable<CONTROL_STATE> {\n    return this._statusChanges.asObservable();\n  }\n\n  constructor(private ngControlService: NgControlService) {\n    // Wait for the control to be available\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.control = control;\n          // Subscribe to the status change events, only after touched\n          // and emit the control\n          this.subscriptions.push(\n            this.control.statusChanges.subscribe(() => {\n              this.triggerStatusChange();\n            })\n          );\n        }\n      })\n    );\n  }\n\n  triggerStatusChange() {\n    /* Check if control is defined and run the code only then */\n    if (this.control) {\n      // These status values are mutually exclusive, so a control\n      // cannot be both valid AND invalid or invalid AND disabled.\n      const status = CONTROL_STATE[this.control.status];\n      this._statusChanges.next(\n        this.control.touched && ['VALID', 'INVALID'].includes(status) ? status : CONTROL_STATE.NONE\n      );\n    }\n  }\n\n  // Clean up subscriptions\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2 } from '@angular/core';\nimport { LayoutService } from './layout.service';\nimport { CONTROL_STATE } from '../if-control-state/if-control-state.service';\n\nconst CLASS_ERROR = 'clr-error';\nconst CLASS_SUCCESS = 'clr-success';\n\n@Injectable()\nexport class ControlClassService {\n  className = '';\n\n  constructor(@Optional() private layoutService: LayoutService) {}\n\n  controlClass(state: CONTROL_STATE = CONTROL_STATE.NONE, grid = false, additional = '') {\n    const controlClasses = [this.className, additional];\n    if (state === CONTROL_STATE.VALID) {\n      controlClasses.push(CLASS_SUCCESS);\n    }\n\n    if (state === CONTROL_STATE.INVALID) {\n      controlClasses.push(CLASS_ERROR);\n    }\n\n    if (grid && this.layoutService && this.className.indexOf('clr-col') === -1) {\n      controlClasses.push(`clr-col-md-${this.layoutService.maxLabelSize - this.layoutService.labelSize} clr-col-12`);\n    }\n    return controlClasses.join(' ').trim();\n  }\n\n  // We want to remove the column classes from the input up to the container\n  initControlClass(renderer: Renderer2, element: HTMLElement) {\n    if (element && element.className) {\n      this.className = element.className;\n      const klasses = element.className.split(' ');\n      klasses.forEach(klass => {\n        if (klass.startsWith('clr-col')) {\n          renderer.removeClass(element, klass);\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class MarkControlService {\n  private _touched: Subject<void> = new Subject();\n\n  get touchedChange(): Observable<void> {\n    return this._touched.asObservable();\n  }\n\n  markAsTouched() {\n    this._touched.next();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  HostBinding,\n  InjectionToken,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  Directive,\n  AfterViewInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\nimport { ControlClassService } from './providers/control-class.service';\nimport { MarkControlService } from './providers/mark-control.service';\nimport { IfControlStateService, CONTROL_STATE } from './if-control-state/if-control-state.service';\n\n@Directive()\nexport class WrappedFormControl<W extends DynamicWrapper> implements OnInit, AfterViewInit, OnDestroy {\n  protected ngControlService: NgControlService;\n  private ifControlStateService: IfControlStateService;\n  private controlClassService: ControlClassService;\n  private markControlService: MarkControlService;\n  protected renderer: Renderer2;\n  protected el: ElementRef<any>;\n\n  protected subscriptions: Subscription[] = [];\n  protected index = 0;\n  protected controlIdService: ControlIdService;\n\n  _id: string;\n\n  // I lost way too much time trying to make this work without injecting the ViewContainerRef and the Injector,\n  // I'm giving up. So we have to inject these two manually for now.\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected wrapperType: Type<W>,\n    injector: Injector,\n    private ngControl: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    this.renderer = renderer;\n    this.el = el;\n    try {\n      this.ngControlService = injector.get(NgControlService);\n      this.ifControlStateService = injector.get(IfControlStateService);\n      this.controlClassService = injector.get(ControlClassService);\n      this.markControlService = injector.get(MarkControlService);\n    } catch (e) {\n      // Swallow errors\n    }\n\n    if (this.controlClassService) {\n      this.controlClassService.initControlClass(renderer, el.nativeElement);\n    }\n    if (this.markControlService) {\n      this.subscriptions.push(\n        this.markControlService.touchedChange.subscribe(() => {\n          this.markAsTouched();\n        })\n      );\n    }\n  }\n\n  @HostBinding()\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    if (this.controlIdService) {\n      this.controlIdService.id = value;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    if (this.ifControlStateService) {\n      /**\n       * For some reason the <input type=\"number\" /> on blur ngControl doesn't set the control to 'touched'\n       * This one is a workaround to provide the control to be 'touched' on blur and fix #4480.\n       */\n      if (this.ngControl && !this.ngControl.touched) {\n        this.markAsTouched();\n      }\n      this.ifControlStateService.triggerStatusChange();\n    }\n  }\n\n  private markAsTouched(): void {\n    this.ngControl.control.markAsTouched();\n    this.ngControl.control.updateValueAndValidity();\n  }\n\n  private _containerInjector: Injector;\n\n  // @TODO This method has a try/catch due to an unknown issue that came when building the clrToggle feature\n  // We need to figure out why this fails for the ClrToggle scenario but works for Date picker...\n  // To see the error, remove the try/catch here and run the ClrToggle suite to see issues getting the container\n  // injector in time, and this ONLY HAPPENS in tests and not in dev/prod mode.\n  protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    try {\n      return this._containerInjector.get(token, notFoundValue);\n    } catch (e) {\n      return notFoundValue;\n    }\n  }\n\n  ngOnInit() {\n    this._containerInjector = new HostWrapper(this.wrapperType, this.vcr, this.index);\n    this.controlIdService = this._containerInjector.get(ControlIdService);\n\n    if (this._id) {\n      this.controlIdService.id = this._id;\n    } else {\n      this._id = this.controlIdService.id;\n    }\n\n    if (this.ngControlService) {\n      this.ngControlService.setControl(this.ngControl);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.listenForErrorStateChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private listenForErrorStateChanges() {\n    if (this.ifControlStateService) {\n      this.subscriptions.push(\n        this.ifControlStateService.statusChanges\n          .pipe(\n            startWith(CONTROL_STATE.NONE),\n            filter(() => this.renderer && !!this.el),\n            distinctUntilChanged()\n          )\n          .subscribe(state => this.setAriaDescribedBy(state))\n      );\n    }\n  }\n\n  private setAriaDescribedBy(state: CONTROL_STATE) {\n    this.renderer.setAttribute(this.el.nativeElement, 'aria-describedby', this.getAriaDescribedById(state));\n  }\n\n  private getAriaDescribedById(state: CONTROL_STATE): string {\n    if (!this.controlIdService) {\n      return '';\n    }\n\n    let suffix;\n\n    switch (state) {\n      case CONTROL_STATE.INVALID:\n        suffix = '-error';\n        break;\n      case CONTROL_STATE.VALID:\n        suffix = '-success';\n        break;\n      default:\n        suffix = '-helper';\n    }\n    return this.controlIdService.id.concat(suffix);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\n\n@Directive({ selector: 'label' })\nexport class ClrLabel implements OnInit, OnDestroy {\n  constructor(\n    @Optional() private controlIdService: ControlIdService,\n    @Optional() private layoutService: LayoutService,\n    @Optional() private ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  @HostBinding('attr.for')\n  @Input('for')\n  forAttr: string;\n\n  private subscriptions: Subscription[] = [];\n  private enableGrid = true;\n\n  get labelText(): string {\n    return this.el.nativeElement && this.el.nativeElement.textContent;\n  }\n\n  ngOnInit() {\n    // Only add the clr-control-label if it is inside a control container\n    if (this.controlIdService || this.ngControlService) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-control-label');\n    }\n    // Only set the grid column classes if we are in the right context and if they aren't already set\n    if (\n      this.enableGrid &&\n      this.layoutService &&\n      !this.layoutService.isVertical() &&\n      this.el.nativeElement &&\n      this.el.nativeElement.className.indexOf('clr-col') < 0\n    ) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-12');\n      this.renderer.addClass(this.el.nativeElement, `clr-col-md-${this.layoutService.labelSize}`);\n    }\n    if (this.controlIdService && !this.forAttr) {\n      this.subscriptions.push(this.controlIdService.idChange.subscribe(id => (this.forAttr = id)));\n    }\n  }\n\n  disableGrid() {\n    this.enableGrid = false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-success',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-success\"',\n  },\n})\nexport class ClrControlSuccess {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ContentChild, Directive, OnDestroy, Optional } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { NgControlService } from './providers/ng-control.service';\nimport { LayoutService } from './providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ClrLabel } from './label';\nimport { ControlClassService } from './providers/control-class.service';\nimport { Subscription } from 'rxjs';\nimport { IfControlStateService, CONTROL_STATE } from './if-control-state/if-control-state.service';\nimport { ClrControlSuccess } from './success';\n\n@Directive()\nexport abstract class ClrAbstractContainer implements DynamicWrapper, OnDestroy {\n  protected subscriptions: Subscription[] = [];\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n  private state: CONTROL_STATE;\n\n  /**\n   * Search for `ClrSuccessComponent` to know do we want to display clr-success or not\n   */\n  @ContentChild(ClrControlSuccess) controlSuccessComponent: ClrControlSuccess;\n\n  get showHelper(): boolean {\n    return this.state === CONTROL_STATE.NONE || (!this.showInvalid && !this.controlSuccessComponent);\n  }\n\n  get showValid(): boolean {\n    return this.state === CONTROL_STATE.VALID && !!this.controlSuccessComponent;\n  }\n\n  get showInvalid(): boolean {\n    return this.state === CONTROL_STATE.INVALID;\n  }\n\n  constructor(\n    protected ifControlStateService: IfControlStateService,\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifControlStateService.statusChanges.subscribe((state: CONTROL_STATE) => {\n        this.state = state;\n      })\n    );\n\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    /**\n     * Decide what subtext to display:\n     *   - element is valid but no success component is implemented - show helper\n     *   - element is valid and success component is implemented - show success\n     */\n    if (!this.controlSuccessComponent && this.state === CONTROL_STATE.VALID) {\n      return this.controlClassService.controlClass(CONTROL_STATE.NONE, this.addGrid());\n    }\n    /**\n     * Pass form control state and return string of classes to be applyed to the container.\n     */\n    return this.controlClassService.controlClass(this.state, this.addGrid());\n  }\n\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { NgControlService } from './providers/ng-control.service';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ControlClassService } from './providers/control-class.service';\nimport { IfControlStateService } from './if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-control-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <ng-content></ng-content>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrControlContainer extends ClrAbstractContainer {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { WrappedFormControl } from './wrapped-control';\nimport { ClrControlContainer } from './control-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrControl]', host: { '[class.clr-input]': 'true' } })\nexport class ClrControl extends WrappedFormControl<ClrControlContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrControlContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-error',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-error\"',\n  },\n})\nexport class ClrControlError {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ContentChildren, Directive, HostListener, QueryList, Input } from '@angular/core';\nimport { LayoutService } from './providers/layout.service';\nimport { MarkControlService } from './providers/mark-control.service';\nimport { ClrLabel } from './label';\n\n@Directive({\n  selector: '[clrForm]',\n  providers: [LayoutService, MarkControlService],\n  host: {\n    '[class.clr-form]': 'true',\n    '[class.clr-form-horizontal]': 'layoutService.isHorizontal()',\n    '[class.clr-form-compact]': 'layoutService.isCompact()',\n  },\n})\nexport class ClrForm {\n  @Input('clrLabelSize')\n  set labelSize(size: number | string) {\n    const sizeNumber = parseInt(size as string, 10) || 2;\n    this.layoutService.labelSize = sizeNumber;\n  }\n\n  constructor(public layoutService: LayoutService, private markControlService: MarkControlService) {}\n\n  // Trying to avoid adding an input and keep this backwards compatible at the same time\n  markAsTouched() {\n    this.markControlService.markAsTouched();\n  }\n\n  @ContentChildren(ClrLabel, { descendants: true })\n  labels: QueryList<ClrLabel>;\n\n  @HostListener('submit')\n  onFormSubmit() {\n    this.markAsTouched();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-helper',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-helper\"',\n  },\n})\nexport class ClrControlHelper {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { NgControlService } from '../providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\nimport { IfControlStateService, CONTROL_STATE } from './if-control-state.service';\n\n@Directive()\nexport abstract class AbstractIfState {\n  protected subscriptions: Subscription[] = [];\n  protected displayedContent = false;\n  protected control: NgControl;\n\n  constructor(\n    @Optional() protected ifControlStateService: IfControlStateService,\n    @Optional() protected ngControlService: NgControlService\n  ) {\n    if (ngControlService) {\n      this.subscriptions.push(\n        this.ngControlService.controlChanges.subscribe(control => {\n          this.control = control;\n        })\n      );\n    }\n\n    if (ifControlStateService) {\n      this.subscriptions.push(\n        this.ifControlStateService.statusChanges.subscribe((state: CONTROL_STATE) => {\n          this.handleState(state);\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  protected handleState(state: CONTROL_STATE): void {\n    /* overwrite in implementation to handle status change */\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { IfControlStateService, CONTROL_STATE } from './if-control-state.service';\nimport { AbstractIfState } from './abstract-if-state';\n\n@Directive({ selector: '[clrIfError]' })\nexport class ClrIfError extends AbstractIfState {\n  @Input('clrIfError') error: string;\n\n  constructor(\n    @Optional() ifControlStateService: IfControlStateService,\n    @Optional() ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    super(ifControlStateService, ngControlService);\n\n    if (!this.ifControlStateService) {\n      throw new Error('clrIfError can only be used within a form control container element like clr-input-container');\n    }\n  }\n  /**\n   * @param state CONTROL_STATE\n   */\n  protected handleState(state: CONTROL_STATE) {\n    if (this.error && this.control) {\n      this.displayError(this.control.hasError(this.error));\n    } else {\n      this.displayError(CONTROL_STATE.INVALID === state);\n    }\n  }\n\n  private displayError(invalid: boolean) {\n    /* if no container do nothing */\n    if (!this.container) {\n      return;\n    }\n    if (invalid && this.displayedContent === false) {\n      this.container.createEmbeddedView(this.template, { error: this.control.getError(this.error) });\n      this.displayedContent = true;\n    } else if (!invalid) {\n      this.container.clear();\n      this.displayedContent = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { IfControlStateService, CONTROL_STATE } from './if-control-state.service';\nimport { AbstractIfState } from './abstract-if-state';\n\n@Directive({ selector: '[clrIfSuccess]' })\nexport class ClrIfSuccess extends AbstractIfState {\n  constructor(\n    @Optional() ifControlStateService: IfControlStateService,\n    @Optional() ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    super(ifControlStateService, ngControlService);\n\n    if (!ifControlStateService) {\n      throw new Error('ClrIfSuccess can only be used within a form control container element like clr-input-container');\n    }\n  }\n\n  /**\n   * @param state CONTROL_STATE\n   */\n  protected handleState(state: CONTROL_STATE) {\n    const isValid = CONTROL_STATE.VALID === state;\n\n    if (isValid && !this.displayedContent) {\n      this.container.createEmbeddedView(this.template);\n    } else if (!isValid && this.container) {\n      this.container.clear();\n    }\n    this.displayedContent = isValid;\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { ClrFormLayout, LayoutService } from './providers/layout.service';\n\n@Directive({\n  selector: '[clrForm][clrLayout]',\n})\nexport class ClrLayout implements OnInit {\n  @Input('clrLayout') layout: ClrFormLayout;\n\n  constructor(public layoutService: LayoutService) {}\n\n  ngOnInit() {\n    // Only set the layout if it is a valid option\n    if (this.layout && this.layoutService.isValid(this.layout)) {\n      this.layoutService.layout = this.layout;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrControl } from './control';\nimport { ClrControlContainer } from './control-container';\nimport { ClrControlError } from './error';\nimport { ClrForm } from './form';\nimport { ClrControlHelper } from './helper';\nimport { ClrIfError } from './if-control-state/if-error';\nimport { ClrIfSuccess } from './if-control-state/if-success';\nimport { ClrLabel } from './label';\nimport { ClrLayout } from './layout';\nimport { ClrControlSuccess } from './success';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlSuccess,\n    ClrControlHelper,\n    ClrIfError,\n    ClrIfSuccess,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  exports: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlSuccess,\n    ClrControlHelper,\n    ClrIfError,\n    ClrIfSuccess,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  entryComponents: [ClrControlContainer],\n})\nexport class ClrCommonFormsModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, OnInit, ContentChild, Inject, InjectionToken, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\nexport const IS_TOGGLE = new InjectionToken<BehaviorSubject<boolean>>('IS_TOGGLE');\nexport function isToggleFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const IS_TOGGLE_PROVIDER = { provide: IS_TOGGLE, useFactory: isToggleFactory };\n\n@Component({\n  selector: 'clr-checkbox-wrapper,clr-toggle-wrapper',\n  template: `\n    <ng-content select=\"[clrCheckbox],[clrToggle]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-checkbox-wrapper]': '!toggle',\n    '[class.clr-toggle-wrapper]': 'toggle',\n  },\n  providers: [ControlIdService, IS_TOGGLE_PROVIDER],\n})\nexport class ClrCheckboxWrapper implements DynamicWrapper, OnInit, OnDestroy {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n  toggle = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(@Inject(IS_TOGGLE) toggleService: BehaviorSubject<boolean>) {\n    this.subscriptions.push(\n      toggleService.subscribe(state => {\n        this.toggle = state;\n      })\n    );\n  }\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Renderer2, ElementRef, Injector, Self, Optional, ViewContainerRef, Attribute } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ClrCheckboxWrapper, IS_TOGGLE } from './checkbox-wrapper';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n/**\n * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different\n * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute\n * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it\n * there is a toggle switch instead.\n */\n@Directive({ selector: '[clrCheckbox],[clrToggle]' })\nexport class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Attribute('clrToggle') private toggle: string\n  ) {\n    super(vcr, ClrCheckboxWrapper, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const toggleService = this.getProviderFromContainer<BehaviorSubject<boolean>>(IS_TOGGLE, null);\n\n    if (toggleService && this.toggle !== null) {\n      toggleService.next(true);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\n\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-checkbox-container,clr-toggle-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-checkbox-wrapper,clr-toggle-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          status=\"success\"\n          shape=\"check-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n        <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlClassService],\n})\nexport class ClrCheckboxContainer extends ClrAbstractContainer {\n  private inline = false;\n\n  constructor(\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService,\n    protected ifControlStateService: IfControlStateService\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n  }\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCheckbox } from './checkbox';\nimport { ClrCheckboxContainer } from './checkbox-container';\nimport { ClrCheckboxWrapper } from './checkbox-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonFormsModule, ClrHostWrappingModule],\n  declarations: [ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  exports: [ClrCommonFormsModule, ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  entryComponents: [ClrCheckboxWrapper],\n})\nexport class ClrCheckboxModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nlet activeCounter = 0;\n\nexport const IF_ACTIVE_ID = new InjectionToken<number>('IF_ACTIVE_ID');\n\nexport function tokenFactory() {\n  return ++activeCounter;\n}\n\nexport const IF_ACTIVE_ID_PROVIDER = {\n  provide: IF_ACTIVE_ID,\n  useFactory: tokenFactory,\n};\n\n@Injectable()\n\n/*********\n * @class IfActiveService\n *\n * @description\n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n *\n */\nexport class IfActiveService {\n  /********\n   * @property _currentChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n   * implemting the IfActive structural directive.\n   *\n   */\n  private _currentChange: Subject<number> = new Subject<number>();\n\n  /*********\n   * @property _current\n   *\n   * @description\n   * A property holding the current value for current/closed state of an IfActive structural directive.\n   */\n  private _current: number;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _current Subject.\n   *\n   */\n  public get currentChange(): Observable<number> {\n    return this._currentChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n   * And, broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n      this._currentChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfActive instance.\n   * @returns\n   */\n  public get current(): number {\n    return this._current;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IF_ACTIVE_ID, IfActiveService } from './if-active.service';\n\n@Directive({ selector: '[clrIfActive]' })\n\n/**********\n *\n * @class ClrIfActive\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n *\n */\nexport class ClrIfActive implements OnDestroy {\n  private subscription: Subscription;\n  private wasActive = false;\n\n  constructor(\n    private ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.checkAndUpdateView(ifActiveService.current);\n\n    this.subscription = this.ifActiveService.currentChange.subscribe(newCurrentId => {\n      this.checkAndUpdateView(newCurrentId);\n    });\n  }\n\n  private checkAndUpdateView(currentId: number) {\n    const isNowActive = currentId === this.id;\n    // only emit if the new active state is changed since last time.\n    if (isNowActive !== this.wasActive) {\n      this.updateView(isNowActive);\n      this.activeChange.emit(isNowActive);\n      this.wasActive = isNowActive;\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfActiveService.active with value.\n   *\n   * @param value\n   */\n  @Input('clrIfActive')\n  public set active(value: boolean) {\n    if (value) {\n      this.ifActiveService.current = this.id;\n    }\n  }\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfActiveService.active value.\n   */\n  public get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  /**********\n   * @property activeChange\n   *\n   * @description\n   * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   *\n   */\n  @Output('clrIfActiveChange') activeChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /*********\n   *\n   * @description\n   * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../popover/providers/popover-toggle.service';\n\n@Directive({ selector: '[clrIfOpen]' })\n\n/**********\n *\n * @class ClrIfOpen\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: ClrPopoverToggleService to maintain state between itself and the component\n * using it in the component template.\n *\n */\nexport class ClrIfOpen implements OnDestroy {\n  public static ngAcceptInputType_open: boolean | '';\n\n  private subscription: Subscription;\n\n  /*********\n   *\n   * @description\n   * A setter that updates ClrPopoverToggleService.open with value.\n   *\n   * @param value\n   */\n  @Input('clrIfOpen')\n  public set open(value: boolean) {\n    this.toggleService.open = value;\n  }\n\n  /********\n   *\n   * @description\n   * A getter that returns the current ClrPopoverToggleService.open value.\n   *\n   */\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  /**********\n   * @property openChange\n   *\n   * @description\n   * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   */\n  @Output('clrIfOpenChange') openChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      this.updateView(change);\n      this.openChange.emit(change);\n    });\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { LoadingListener } from '../loading/loading-listener';\nimport { ClrLoadingState } from '../loading/loading';\n\n@Injectable()\nexport class IfExpandService implements LoadingListener {\n  public expandable = 0;\n\n  protected _loading = false;\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    value = !!value;\n    if (value !== this._loading) {\n      this._loading = value;\n    }\n  }\n\n  protected _expanded = false;\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._expandChange.next(value);\n    }\n  }\n\n  public toggle() {\n    this.expanded = !this._expanded;\n  }\n\n  protected _expandChange: Subject<boolean> = new Subject<boolean>();\n  public get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    switch (state) {\n      case ClrLoadingState.LOADING:\n        this.loading = true;\n        break;\n      default:\n        this.loading = false;\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from './if-expanded.service';\n\n@Directive({ selector: '[clrIfExpanded]' })\nexport class ClrIfExpanded implements OnInit, OnDestroy {\n  private _expanded = false;\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input('clrIfExpanded')\n  set expanded(value: boolean) {\n    if (typeof value === 'boolean') {\n      this.expand.expanded = value;\n      this._expanded = value;\n    }\n  }\n\n  @Output('clrIfExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  constructor(\n    @Optional() private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private expand: IfExpandService\n  ) {\n    expand.expandable++;\n    this._subscriptions.push(\n      expand.expandChange.subscribe(() => {\n        this.updateView();\n        this.expandedChange.emit(this.expand.expanded);\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  private updateView() {\n    if (this.expand.expanded && this.container.length !== 0) {\n      return;\n    }\n    if (this.template) {\n      if (this.expand.expanded) {\n        // Should we pass a context? I don't see anything useful to pass right now,\n        // but we can come back to it in the future as a solution for additional features.\n        this.container.createEmbeddedView(this.template);\n      } else {\n        // TODO: Move when we move the animation logic to Datagrid Row Expand\n        // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n        // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n        // get the optimal behavior.\n        this.container.clear();\n      }\n    } else {\n      try {\n        // If we don't have a template ref, we fallback to a crude display: none for now.\n        if (this.expand.expanded) {\n          this.renderer.setStyle(this.el.nativeElement, 'display', null);\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n        }\n      } catch (e) {\n        // We catch the case where clrIfExpanded was put on a non-DOM element, and we just do nothing\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.updateView();\n  }\n\n  ngOnDestroy() {\n    this.expand.expandable--;\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIfActive } from './if-active.directive';\nimport { ClrIfOpen } from './if-open.directive';\nimport { ClrIfExpanded } from './if-expanded.directive';\n\nexport const CONDITIONAL_DIRECTIVES: Type<any>[] = [ClrIfActive, ClrIfOpen, ClrIfExpanded];\n\n@NgModule({ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] })\nexport class ClrConditionalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\n@Injectable({ providedIn: 'root' })\nexport class FocusTrapTracker {\n  private _previousFocusTraps: FocusTrapDirective[] = [];\n  private _current: FocusTrapDirective;\n\n  get current(): FocusTrapDirective {\n    return this._current;\n  }\n\n  set current(value: FocusTrapDirective) {\n    this._previousFocusTraps.push(this._current);\n    this._current = value;\n  }\n\n  get nbFocusTrappers(): number {\n    return this._previousFocusTraps.length;\n  }\n\n  activatePreviousTrapper() {\n    this._current = this._previousFocusTraps.pop();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  PLATFORM_ID,\n  Renderer2,\n  OnInit,\n} from '@angular/core';\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\nimport { FocusTrapConfig } from './focus-trap-config.interface';\n\nexport const FOCUSABLES =\n  '[href]:not([tabindex=\"-1\"]), button:not([disabled]):not([tabindex=\"-1\"]), input:not([disabled]):not([tabindex=\"-1\"]), select:not([disabled]):not([tabindex=\"-1\"]), textarea:not([disabled]):not([tabindex=\"-1\"]), [contenteditable=\"true\"]:not([tabindex=\"-1\"]), [tabindex]:not([tabindex=\"-1\"]) ';\n\n@Directive({ selector: '[clrFocusTrap]' })\nexport class FocusTrapDirective implements OnInit, AfterViewInit, OnDestroy {\n  private previousActiveElement: any;\n  private localFocusEscaped = false;\n  private document: Document;\n  private parentElement: Element;\n\n  private topReboundEl: any;\n  private bottomReboundEl: any;\n\n  private firstFocusableEl: HTMLElement;\n  private lastFocusableEl: HTMLElement;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private focusTrapsTracker: FocusTrapTracker,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.document = this.injector.get(DOCUMENT);\n    this.focusTrapsTracker.current = this;\n  }\n\n  private _config: FocusTrapConfig = {\n    strict: true,\n  };\n  @Input('clrFocusTrap')\n  set config(config: FocusTrapConfig) {\n    this._config = Object.assign(this._config, config);\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusIn(event: any) {\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    if (\n      this.focusTrapsTracker.current !== this ||\n      !isPlatformBrowser(this.platformId) ||\n      this.localFocusEscaped ||\n      nativeElement.contains(event.target)\n    ) {\n      return;\n    }\n    if (event.target === this.topReboundEl && nativeElement.contains(event.relatedTarget)) {\n      this.focusLastFocusable();\n      // if it fails to focus element inside the trap, focus the trap element.\n      this.focusTrapElIfOutside();\n    } else if (event.target === this.bottomReboundEl && nativeElement.contains(event.relatedTarget)) {\n      this.focusFirstFocusable();\n      // if it fails to focus element inside the trap, focus the trap element.\n      this.focusTrapElIfOutside();\n    } else {\n      this._config.strict ? this.el.nativeElement.focus() : (this.localFocusEscaped = true);\n    }\n  }\n\n  private createFocusableOffScreenEl(): any {\n    // Not using Renderer2's createElement method because that leads to DOM leakage.\n    // https://github.com/angular/angular/issues/26954\n    const offScreenSpan = this.document.createElement('span');\n    this.renderer.setAttribute(offScreenSpan, 'tabindex', '0');\n    this.renderer.addClass(offScreenSpan, 'offscreen-focus-rebounder');\n\n    return offScreenSpan;\n  }\n\n  private addReboundEls() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.topReboundEl = this.createFocusableOffScreenEl();\n      this.bottomReboundEl = this.createFocusableOffScreenEl();\n      const hostElement = this.el.nativeElement;\n      // Add reboundBeforeTrapEl right outside of host element\n      this.renderer.insertBefore(hostElement.parentElement, this.topReboundEl, hostElement);\n      // Add reboundAfterTrapEl right after host element\n      if (hostElement.nextSibling) {\n        this.renderer.insertBefore(hostElement.parentNode, this.bottomReboundEl, hostElement.nextSibling);\n      } else {\n        this.renderer.appendChild(hostElement.parentNode, this.bottomReboundEl);\n      }\n    }\n  }\n\n  private removeReboundEls() {\n    if (isPlatformBrowser(this.platformId) && this.topReboundEl && this.bottomReboundEl) {\n      this.parentElement.removeChild(this.topReboundEl);\n      this.parentElement.removeChild(this.bottomReboundEl);\n      // These are here to to make sure that\n      // we completely delete all traces of the removed DOM objects.\n      delete this.topReboundEl;\n      delete this.bottomReboundEl;\n    }\n  }\n\n  public setPreviousFocus(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.previousActiveElement = this.document.activeElement as HTMLElement;\n      this.parentElement = this.el.nativeElement.parentElement;\n    }\n\n    this.addReboundEls();\n  }\n\n  private get potentiallyFocusableEls(): HTMLElement[] {\n    return [...this.el.nativeElement.querySelectorAll(FOCUSABLES)];\n  }\n\n  private focusFirstFocusable() {\n    for (let i = 0; i < this.potentiallyFocusableEls.length; i++) {\n      this.firstFocusableEl = this.focusElement(this.potentiallyFocusableEls[i]);\n      if (this.firstFocusableEl) {\n        break;\n      }\n    }\n  }\n\n  private focusLastFocusable() {\n    for (let i = this.potentiallyFocusableEls.length - 1; i >= 0; i--) {\n      this.lastFocusableEl = this.focusElement(this.potentiallyFocusableEls[i]);\n      if (this.lastFocusableEl) {\n        break;\n      }\n    }\n  }\n\n  private focusTrapElIfOutside() {\n    if (!this.el.nativeElement.contains(document.activeElement)) {\n      this.el.nativeElement.focus();\n    }\n  }\n\n  private focusElement(el: HTMLElement): HTMLElement {\n    if (el && el.focus) {\n      el.focus();\n      if (document.activeElement === el) {\n        return el;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.removeReboundEls();\n    this.setPreviousFocus();\n    this.focusTrapsTracker.activatePreviousTrapper();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\nexport const FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_TRAP_DIRECTIVES],\n  exports: [FOCUS_TRAP_DIRECTIVES],\n})\nexport class ClrFocusTrapModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const UP_ARROW = 38;\nexport const DOWN_ARROW = 40;\nexport const RIGHT_ARROW = 39;\nexport const LEFT_ARROW = 37;\nexport const ENTER = 13;\nexport const SPACE = 32;\nexport const SHIFT = 16;\nexport const TAB = 9;\nexport const ESC = 27;\nexport const BACKSPACE = 8;\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * This is the en-001 short locale date format. Setting as default.\n */\nexport const DEFAULT_LOCALE_FORMAT = 'dd/MM/y';\n\n// https://en.wikipedia.org/wiki/Date_format_by_country\nexport const LITTLE_ENDIAN_REGEX = /d+.+m+.+y+/i;\nexport const MIDDLE_ENDIAN_REGEX = /m+.+d+.+y+/i;\n// No need for BIG_ENDIAN_REGEX because anything that doesn't satisfy the above 2\n// is automatically BIG_ENDIAN\n\nexport const DELIMITER_REGEX = /d+|m+|y+/i;\n\nexport const USER_INPUT_REGEX = /\\d+/g;\n\nexport const MOBILE_USERAGENT_REGEX = /Mobi/i;\n\nexport const RTL_REGEX = /\\u200f/g;\n\nexport const YEAR = 'YYYY';\nexport const MONTH = 'MM';\nexport const DATE = 'DD';\n\nexport type FormatType = 'LITTLE_ENDIAN' | 'MIDDLE_ENDIAN' | 'BIG_ENDIAN';\n\nexport type InputDateDisplayFormat = {\n  readonly name: FormatType;\n  readonly format: [string, string, string];\n};\n\nexport const LITTLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'LITTLE_ENDIAN',\n  format: [DATE, MONTH, YEAR],\n};\n\nexport const MIDDLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'MIDDLE_ENDIAN',\n  format: [MONTH, DATE, YEAR],\n};\n\nexport const BIG_ENDIAN: InputDateDisplayFormat = {\n  name: 'BIG_ENDIAN',\n  format: [YEAR, MONTH, DATE],\n};\n\nexport const NO_OF_DAYS_IN_A_WEEK = 7;\nexport const NO_OF_ROWS_IN_CALENDAR_VIEW = 6;\nexport const TOTAL_DAYS_IN_DAYS_VIEW: number = NO_OF_DAYS_IN_A_WEEK * NO_OF_ROWS_IN_CALENDAR_VIEW;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { WeekDay } from '@angular/common';\n\n/**\n * Returns the number of days in a month.\n */\nexport function getNumberOfDaysInTheMonth(year: number, month: number): number {\n  // If we go to the next month, but use a day of 0, it returns the last day from the previous month\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * Returns the day for the corresponding date where 0 represents Sunday.\n */\nexport function getDay(year: number, month: number, date: number): WeekDay {\n  return new Date(year, month, date).getDay();\n}\n\n/**\n * Takes in a year and if it is a 2 digit year, returns the corresponding 4 digit year.\n * Window of 80 years before and 20 years after the present year.\n * Credit: https://github.com/globalizejs/globalize/blob/e1b31cd6a4f1cff75b185b68b7a32220aac5196f/src/date/parse.js\n */\nexport function parseToFourDigitYear(year: number): number {\n  if (year > 9999 || (year > 100 && year < 999) || year < 10) {\n    return -1;\n  }\n  if (year > 999) {\n    return year;\n  }\n  const currYear: number = new Date().getFullYear();\n  const century: number = Math.floor(currYear / 100) * 100;\n  let result: number = year + century;\n  if (result > currYear + 20) {\n    result = result - 100;\n  }\n  return result;\n}\n\nexport function datesAreEqual(date1: Date, date2: Date) {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  } else {\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DayModel } from './day.model';\n\nexport class DayViewModel {\n  constructor(\n    public dayModel: DayModel,\n    public isTodaysDate: boolean = false,\n    public isExcluded: boolean = false,\n    public isDisabled: boolean = false,\n    public isSelected: boolean = false,\n    public isFocusable: boolean = false\n  ) {}\n\n  /**\n   * Gets the tab index based on the isFocusable flag.\n   */\n  get tabIndex(): number {\n    return this.isFocusable ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class DayModel {\n  constructor(public readonly year: number, public readonly month: number, public readonly date: number) {}\n\n  /**\n   * Checks if the passed CalendarDate is equal to itself.\n   */\n  isEqual(day: DayModel) {\n    if (day) {\n      return this.year === day.year && this.month === day.month && this.date === day.date;\n    }\n    return false;\n  }\n\n  toDate(): Date {\n    return new Date(this.year, this.month, this.date);\n  }\n\n  /**\n   * Returns a new DayModel which is incremented based on the value passed.\n   */\n  incrementBy(value: number): DayModel {\n    // Creating new Javascript Date object to increment because\n    // it will automatically take care of switching to next or previous\n    // months & years without we having to worry about it.\n    const date: Date = new Date(this.year, this.month, this.date + value);\n    return new DayModel(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Clones the current day model.\n   */\n  clone(): DayModel {\n    return new DayModel(this.year, this.month, this.date);\n  }\n\n  toComparisonString(): string {\n    return `${this.year}${this.pad(this.month)}${this.pad(this.date)}`;\n  }\n\n  private pad(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  public toDateString(): string {\n    return this.toDate().toLocaleDateString();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NO_OF_DAYS_IN_A_WEEK, NO_OF_ROWS_IN_CALENDAR_VIEW, TOTAL_DAYS_IN_DAYS_VIEW } from '../utils/constants';\nimport { getDay } from '../utils/date-utils';\n\nimport { CalendarModel } from './calendar.model';\nimport { DayViewModel } from './day-view.model';\nimport { DayModel } from './day.model';\nimport { DateRange } from '../interfaces/date-range.interface';\n\nexport class CalendarViewModel {\n  constructor(\n    public calendar: CalendarModel,\n    private selectedDay: DayModel,\n    private focusableDay: DayModel,\n    private today: DayModel,\n    public firstDayOfWeek: number,\n    private excludedDates: DateRange\n  ) {\n    this.initializeCalendarView();\n  }\n\n  private currMonthDayViews: DayViewModel[] = [];\n\n  private _calendarView: DayViewModel[][];\n\n  /**\n   * DayViewModel matrix. Size 6x7\n   */\n  get calendarView(): DayViewModel[][] {\n    return this._calendarView;\n  }\n\n  /**\n   * Generates a 6x7 matrix of DayViewModel based on the Calendar.\n   * The 6x7 matrix is structured according to the first day of the week.\n   * 6 rows to accommodate months which might have dates spanning over 6 weeks.\n   * 7 columns because there are 7 days in a week :P :D\n   */\n  private initializeCalendarView(): void {\n    // Generate prev and next month calendar models.\n    const prevMonthCalendar: CalendarModel = this.calendar.previousMonth();\n    const nextMonthCalendar: CalendarModel = this.calendar.nextMonth();\n\n    // Get no of days from prev and next months.\n    const daysFromPrevMonthInCalView: number = this.numDaysFromPrevMonthInCalView(\n      this.calendar.year,\n      this.calendar.month\n    );\n    const daysFromNextMonthInCalView: number =\n      TOTAL_DAYS_IN_DAYS_VIEW - (this.calendar.days.length + daysFromPrevMonthInCalView);\n\n    // Generate prev, curr and next day view models\n    let prevMonthDayViews: DayViewModel[] = [];\n    let nextMonthDayViews: DayViewModel[] = [];\n\n    if (daysFromPrevMonthInCalView > 0) {\n      prevMonthDayViews = this.generateDayViewModels(\n        prevMonthCalendar.days.slice(-1 * daysFromPrevMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    this.currMonthDayViews = this.generateDayViewModels(this.calendar.days, false, true);\n\n    if (daysFromNextMonthInCalView > 0) {\n      nextMonthDayViews = this.generateDayViewModels(\n        nextMonthCalendar.days.slice(0, daysFromNextMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    // Generate calendar view and initialize flags\n    this._calendarView = this.generateCalendarView(prevMonthDayViews, this.currMonthDayViews, nextMonthDayViews);\n    this.initializeSelectedDay();\n    this.initializeFocusableDay();\n  }\n\n  private isDateExcluded(date: DayModel) {\n    const { minDate, maxDate }: DateRange = this.excludedDates;\n    const from = minDate.toComparisonString();\n    const to = maxDate.toComparisonString();\n    const today = date.toComparisonString();\n\n    return !(today >= from && today <= to);\n  }\n\n  /**\n   * Generates a DayViewModel array based on the DayModel passed\n   */\n  private generateDayViewModels(days: DayModel[], isExcluded: boolean, isCurrentCalendar: boolean): DayViewModel[] {\n    const dayViews: DayViewModel[] = days.map(day => {\n      return new DayViewModel(day, false, isExcluded, this.isDateExcluded(day), false, false);\n    });\n    if (isCurrentCalendar && this.calendar.isDayInCalendar(this.today)) {\n      dayViews[this.today.date - 1].isTodaysDate = true;\n    }\n    return dayViews;\n  }\n\n  /**\n   * Gets the first day of the current month to figure out how many dates of previous month\n   * are needed to complete the Calendar View based on the first day of the week.\n   * eg: Assuming locale en-US, the first day of the week is Sunday,\n   * if first day of the current month lands on Wednesday, then\n   * (this.getDay function would return 3 since\n   * first day of the week is 0), we need the 3 days from the previous month.\n   */\n  private numDaysFromPrevMonthInCalView(currentYear: number, currentMonth: number): number {\n    const firstDayOfCurrMonth: number = getDay(currentYear, currentMonth, 1);\n\n    if (firstDayOfCurrMonth >= this.firstDayOfWeek) {\n      return firstDayOfCurrMonth - this.firstDayOfWeek;\n    } else {\n      return NO_OF_DAYS_IN_A_WEEK + firstDayOfCurrMonth - this.firstDayOfWeek;\n    }\n  }\n\n  /**\n   * Checks if the Day passed is in the CalendarView.\n   */\n  private isDayInCalendarView(day: DayModel): boolean {\n    if (!this.calendar.isDayInCalendar(day)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Using the DayViewModels from the previous, current and next month, this function\n   * generates the CalendarView.\n   */\n  private generateCalendarView(prev: DayViewModel[], curr: DayViewModel[], next: DayViewModel[]): DayViewModel[][] {\n    const combinationArr: DayViewModel[] = [...prev, ...curr, ...next];\n\n    const calendarView: DayViewModel[][] = [];\n    for (let i = 0; i < NO_OF_ROWS_IN_CALENDAR_VIEW; i++) {\n      calendarView[i] = combinationArr.slice(i * NO_OF_DAYS_IN_A_WEEK, (i + 1) * NO_OF_DAYS_IN_A_WEEK);\n    }\n    return calendarView;\n  }\n\n  /**\n   * Initialize the selected day if the day is in the calendar.\n   */\n  private initializeSelectedDay(): void {\n    if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.currMonthDayViews[this.selectedDay.date - 1].isSelected = true;\n    }\n  }\n\n  /**\n   * Initializes the focusable day if the day is in the calendar. If focusable day is not set, then\n   * we check for the selected day. If selected day is not set then check if today is in the current\n   * calendar. If not then just set the 15th of the current calendar month.\n   */\n  private initializeFocusableDay(): void {\n    if (this.focusableDay && this.isDayInCalendarView(this.focusableDay)) {\n      this.setFocusableFlag(this.focusableDay, true);\n    } else if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.setFocusableFlag(this.selectedDay, true);\n      this.focusableDay = this.selectedDay.clone();\n    } else if (this.isDayInCalendarView(this.today)) {\n      this.setFocusableFlag(this.today, true);\n      this.focusableDay = this.today.clone();\n    } else {\n      this.focusableDay = new DayModel(this.calendar.year, this.calendar.month, 15);\n      this.setFocusableFlag(this.focusableDay, true);\n    }\n  }\n\n  private setFocusableFlag(day: DayModel, flag: boolean): void {\n    if (day) {\n      this.currMonthDayViews[day.date - 1].isFocusable = flag;\n    }\n  }\n\n  /**\n   * Updates the focusable day in the calendar.\n   */\n  updateFocusableDay(day: DayModel): void {\n    this.setFocusableFlag(this.focusableDay, false);\n    this.setFocusableFlag(day, true);\n    this.focusableDay = day;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { getNumberOfDaysInTheMonth } from '../utils/date-utils';\n\nimport { DayModel } from './day.model';\n\nexport class CalendarModel {\n  constructor(public readonly year: number, public readonly month: number) {\n    this.initializeDaysInCalendar();\n  }\n\n  days: DayModel[];\n\n  /**\n   * Populates the days array with the DayModels in the current Calendar.\n   */\n  private initializeDaysInCalendar(): void {\n    const noOfDaysInCalendar: number = getNumberOfDaysInTheMonth(this.year, this.month);\n    this.days = Array(noOfDaysInCalendar)\n      .fill(null)\n      .map((_date, index) => {\n        return new DayModel(this.year, this.month, index + 1);\n      });\n  }\n\n  /**\n   * Checks if the calendar passed is equal to the current calendar.\n   */\n  isEqual(calendar: CalendarModel) {\n    if (calendar) {\n      return this.year === calendar.year && this.month === calendar.month;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if a DayModel is in the Calendar\n   */\n  isDayInCalendar(day: DayModel): boolean {\n    if (day) {\n      return this.year === day.year && this.month === day.month;\n    }\n    return false;\n  }\n\n  /**\n   * Returns CalendarModel of the previous month.\n   */\n  previousMonth(): CalendarModel {\n    if (this.month === 0) {\n      return new CalendarModel(this.year - 1, 11);\n    } else {\n      return new CalendarModel(this.year, this.month - 1);\n    }\n  }\n\n  /**\n   * Returns CalendarModel of the next month.\n   */\n  nextMonth(): CalendarModel {\n    if (this.month === 11) {\n      return new CalendarModel(this.year + 1, 0);\n    } else {\n      return new CalendarModel(this.year, this.month + 1);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { CalendarModel } from '../model/calendar.model';\nimport { DayModel } from '../model/day.model';\n\n/**\n * This service is responsible for:\n * 1. Initializing the displayed calendar.\n * 2. Moving the calendar to the next, previous or current months\n * 3. Managing the focused and selected day models.\n */\n@Injectable()\nexport class DateNavigationService {\n  private _displayedCalendar: CalendarModel;\n\n  get displayedCalendar(): CalendarModel {\n    return this._displayedCalendar;\n  }\n\n  // not a setter because i want this to remain private\n  private setDisplayedCalendar(value: CalendarModel) {\n    if (!this._displayedCalendar.isEqual(value)) {\n      this._displayedCalendar = value;\n      this._displayedCalendarChange.next();\n    }\n  }\n\n  /**\n   * Variable to store today's date.\n   */\n  private _todaysFullDate: Date = new Date();\n  private _today: DayModel;\n\n  private initializeTodaysDate(): void {\n    this._todaysFullDate = new Date();\n    this._today = new DayModel(\n      this._todaysFullDate.getFullYear(),\n      this._todaysFullDate.getMonth(),\n      this._todaysFullDate.getDate()\n    );\n  }\n\n  get today(): DayModel {\n    return this._today;\n  }\n\n  public selectedDay: DayModel;\n\n  private _selectedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  get selectedDayChange(): Observable<DayModel> {\n    return this._selectedDayChange.asObservable();\n  }\n\n  /**\n   * Notifies that the selected day has changed so that the date can be emitted to the user.\n   * Note: Only to be called from day.ts\n   */\n  notifySelectedDayChanged(dayModel: DayModel) {\n    this.selectedDay = dayModel;\n    this._selectedDayChange.next(dayModel);\n  }\n\n  public focusedDay: DayModel;\n\n  /**\n   * Initializes the calendar based on the selected day.\n   */\n  initializeCalendar(): void {\n    this.focusedDay = null; // Can be removed later on the store focus\n    this.initializeTodaysDate();\n    if (this.selectedDay) {\n      this._displayedCalendar = new CalendarModel(this.selectedDay.year, this.selectedDay.month);\n    } else {\n      this._displayedCalendar = new CalendarModel(this.today.year, this.today.month);\n    }\n  }\n\n  changeMonth(month: number): void {\n    this.setDisplayedCalendar(new CalendarModel(this._displayedCalendar.year, month));\n  }\n\n  changeYear(year: number): void {\n    this.setDisplayedCalendar(new CalendarModel(year, this._displayedCalendar.month));\n  }\n\n  /**\n   * Moves the displayed calendar to the next month.\n   */\n  moveToNextMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.nextMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the previous month.\n   */\n  moveToPreviousMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.previousMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the current month and year.\n   */\n  moveToCurrentMonth(): void {\n    if (!this.displayedCalendar.isDayInCalendar(this.today)) {\n      this.setDisplayedCalendar(new CalendarModel(this.today.year, this.today.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  incrementFocusDay(value: number): void {\n    this.focusedDay = this.focusedDay.incrementBy(value);\n    if (this._displayedCalendar.isDayInCalendar(this.focusedDay)) {\n      this._focusedDayChange.next(this.focusedDay);\n    } else {\n      this.setDisplayedCalendar(new CalendarModel(this.focusedDay.year, this.focusedDay.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  private _displayedCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the displayed calendar has changed.\n   */\n  get displayedCalendarChange(): Observable<void> {\n    return this._displayedCalendarChange.asObservable();\n  }\n\n  private _focusOnCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the focus should be applied on the calendar.\n   */\n  get focusOnCalendarChange(): Observable<void> {\n    return this._focusOnCalendarChange.asObservable();\n  }\n\n  private _focusedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  /**\n   * This observable lets the subscriber know that the focused day in the displayed calendar has changed.\n   */\n  get focusedDayChange(): Observable<DayModel> {\n    return this._focusedDayChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { first, filter } from 'rxjs/operators';\n\n/**\n * This service focuses the day that is focusable in the calendar.\n */\n@Injectable()\nexport class DatepickerFocusService {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: any) {}\n\n  focusCell(elRef: ElementRef): void {\n    this._ngZone.runOutsideAngular(() => {\n      this.ngZoneIsStableInBrowser().subscribe(() => {\n        const focusEl = elRef.nativeElement.querySelector('[tabindex=\"0\"]');\n        if (focusEl) {\n          focusEl.focus();\n        }\n      });\n    });\n  }\n\n  focusInput(element: HTMLInputElement): void {\n    this._ngZone.runOutsideAngular(() => this.ngZoneIsStableInBrowser().subscribe(() => element.focus()));\n  }\n\n  elementIsFocused(element: HTMLInputElement) {\n    return isPlatformBrowser(this.platformId) && document.activeElement === element;\n  }\n\n  private ngZoneIsStableInBrowser() {\n    // Credit: Material: https://github.com/angular/material2/blob/master/src/lib/datepicker/calendar.ts\n    return this._ngZone.onStable.asObservable().pipe(\n      first(),\n      filter(() => isPlatformBrowser(this.platformId))\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { ClrDayOfWeek } from '../interfaces/day-of-week.interface';\n\n/**\n * This service extracts the Angular CLDR data needed by the datepicker.\n */\n@Injectable()\nexport class LocaleHelperService {\n  constructor(@Inject(LOCALE_ID) public locale: string) {\n    this.initializeLocaleData();\n  }\n\n  private _firstDayOfWeek = 0;\n  private _localeDays: ReadonlyArray<ClrDayOfWeek>;\n  private _localeMonthsAbbreviated: ReadonlyArray<string>;\n  private _localeMonthsWide: ReadonlyArray<string>;\n  private _localeDateFormat: string;\n\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeDays;\n  }\n\n  // leave for backward compatibility\n  get localeDaysNarrow(): ReadonlyArray<string> {\n    return this._localeDays.map(day => day.narrow);\n  }\n\n  get localeMonthsAbbreviated(): ReadonlyArray<string> {\n    return this._localeMonthsAbbreviated;\n  }\n\n  get localeMonthsWide(): ReadonlyArray<string> {\n    return this._localeMonthsWide;\n  }\n\n  get localeDateFormat(): string {\n    return this._localeDateFormat;\n  }\n\n  /**\n   * Initializes the locale data.\n   */\n  private initializeLocaleData(): void {\n    // Order in which these functions is called is very important.\n    this.initializeFirstDayOfWeek();\n    this.initializeLocaleDateFormat();\n    this.initializeLocaleMonthsAbbreviated();\n    this.initializeLocaleMonthsWide();\n    this.initializeLocaleDays();\n  }\n\n  /**\n   * Initialize day names based on the locale.\n   * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.\n   */\n  private initializeLocaleDays(): void {\n    // Get locale day names starting with Sunday\n    const tempArr = [];\n    const tempWideArr: string[] = getLocaleDayNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n    const tempNarrowArr: string[] = getLocaleDayNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Narrow\n    ).slice();\n    // Get first day of the week based on the locale\n    const firstDayOfWeek: number = this.firstDayOfWeek;\n    for (let i = 0; i < 7; i++) {\n      tempArr.push({ day: tempWideArr[i], narrow: tempNarrowArr[i] });\n    }\n    // Rearrange the tempArr to start with the first day of the week based on the locale.\n    if (firstDayOfWeek > 0) {\n      const prevDays: { day: string; narrow: string }[] = tempArr.splice(0, firstDayOfWeek);\n      tempArr.push(...prevDays);\n    }\n    this._localeDays = tempArr;\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Abbreviated format.\n   * e.g. `[Jan, Feb, ...]` for en-US\n   */\n  private initializeLocaleMonthsAbbreviated(): void {\n    this._localeMonthsAbbreviated = getLocaleMonthNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    ).slice();\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Wide format.\n   * e.g. `[January, February, ...]` for en-US\n   */\n  private initializeLocaleMonthsWide(): void {\n    this._localeMonthsWide = getLocaleMonthNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n  }\n\n  /**\n   * Initializes the first day of the week based on the locale.\n   */\n  private initializeFirstDayOfWeek(): void {\n    this._firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  private initializeLocaleDateFormat(): void {\n    this._localeDateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  BIG_ENDIAN,\n  DEFAULT_LOCALE_FORMAT,\n  DELIMITER_REGEX,\n  InputDateDisplayFormat,\n  LITTLE_ENDIAN,\n  LITTLE_ENDIAN_REGEX,\n  MIDDLE_ENDIAN,\n  MIDDLE_ENDIAN_REGEX,\n  RTL_REGEX,\n  USER_INPUT_REGEX,\n} from '../utils/constants';\nimport { getNumberOfDaysInTheMonth, parseToFourDigitYear } from '../utils/date-utils';\n\nimport { LocaleHelperService } from './locale-helper.service';\nimport { DateRange } from '../interfaces/date-range.interface';\nimport { DayModel } from '../model/day.model';\n\n@Injectable()\nexport class DateIOService {\n  public disabledDates: DateRange = {\n    // This is the default range. It approximates the beginning of time to the end of time.\n    // Unless a minDate or maxDate is set with the native HTML5 api the range is all dates\n    // TODO: turn this into an Array of min/max ranges that allow configuration of multiple ranges.\n    minDate: new DayModel(0, 0, 1),\n    maxDate: new DayModel(9999, 11, 31),\n  };\n  public cldrLocaleDateFormat: string = DEFAULT_LOCALE_FORMAT;\n  private localeDisplayFormat: InputDateDisplayFormat = LITTLE_ENDIAN;\n  private delimiters: [string, string] = ['/', '/'];\n\n  constructor(private _localeHelperService: LocaleHelperService) {\n    this.cldrLocaleDateFormat = this._localeHelperService.localeDateFormat;\n    this.initializeLocaleDisplayFormat();\n  }\n\n  public setMinDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset back to the beginning of time\n      this.disabledDates.minDate = new DayModel(0, 0, 1);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.minDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  public setMaxDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset forward to the end of time\n      this.disabledDates.maxDate = new DayModel(9999, 11, 31);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.maxDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  private initializeLocaleDisplayFormat(): void {\n    const format: string = this.cldrLocaleDateFormat.toLocaleLowerCase();\n    if (LITTLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = LITTLE_ENDIAN;\n    } else if (MIDDLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = MIDDLE_ENDIAN;\n    } else {\n      // everything else is set to BIG-ENDIAN FORMAT\n      this.localeDisplayFormat = BIG_ENDIAN;\n    }\n    this.extractDelimiters();\n  }\n\n  private extractDelimiters(): void {\n    if (this.cldrLocaleDateFormat) {\n      // Sanitize Date Format. Remove RTL characters.\n      // FIXME: When we support RTL, remove this and handle it correctly.\n      const localeFormat: string = this.cldrLocaleDateFormat.replace(RTL_REGEX, '');\n      const delimiters: string[] = localeFormat.split(DELIMITER_REGEX);\n\n      // NOTE: The split from the CLDR date format should always result\n      // in an arary with 4 elements. The 1st and the 2nd values are the delimiters\n      // we will use in order.\n      // Eg: \"dd/MM/y\".split(/d+|m+|y+/i) results in [\"\", \"/\", \"/\", \"\"]\n      if (delimiters && delimiters.length === 4) {\n        this.delimiters = [delimiters[1], delimiters[2]];\n      } else {\n        console.error('Unexpected date format received. Delimiters extracted: ', delimiters);\n      }\n    }\n  }\n\n  toLocaleDisplayFormatString(date: Date): string {\n    if (date) {\n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      const dateNo: number = date.getDate();\n      const monthNo: number = date.getMonth() + 1;\n      const dateStr: string = dateNo > 9 ? dateNo.toString() : '0' + dateNo;\n      const monthStr: string = monthNo > 9 ? monthNo.toString() : '0' + monthNo;\n      if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n        return dateStr + this.delimiters[0] + monthStr + this.delimiters[1] + date.getFullYear();\n      } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n        return monthStr + this.delimiters[0] + dateStr + this.delimiters[1] + date.getFullYear();\n      } else {\n        return date.getFullYear() + this.delimiters[0] + monthStr + this.delimiters[1] + dateStr;\n      }\n    }\n    return '';\n  }\n\n  get placeholderText(): string {\n    const format: [string, string, string] = this.localeDisplayFormat.format;\n    return format[0] + this.delimiters[0] + format[1] + this.delimiters[1] + format[2];\n  }\n\n  /**\n   * Checks if the month entered by the user is valid or not.\n   * Note: Month is 0 based.\n   */\n  private isValidMonth(month: number): boolean {\n    return month > -1 && month < 12;\n  }\n\n  /**\n   * Checks if the date is valid depending on the year and month provided.\n   */\n  private isValidDate(year: number, month: number, date: number): boolean {\n    return date > 0 && date <= getNumberOfDaysInTheMonth(year, month);\n  }\n\n  /**\n   * Validates the parameters provided and returns the date.\n   * If the parameters are not\n   * valid then return null.\n   * NOTE: (Month here is 1 based since the user has provided that as an input)\n   */\n  private validateAndGetDate(year: string, month: string, date: string): Date {\n    // I don't know whats wrong with the TS compiler. It throws an error if I write\n    // the below if statement. The error is:\n    // Operator '!==' cannot be applied to types '2' and '4'\n    // More info here: https://github.com/Microsoft/TypeScript/issues/12794#issuecomment-270342936\n    /*\n        if (year.length !== 2 || year.length !== 4) {\n            return null;\n        }\n        */\n\n    // Instead I have to write the logic like this x-(\n    const y: number = +year;\n    const m: number = +month - 1; // month is 0 based\n    const d: number = +date;\n    if (!this.isValidMonth(m) || !this.isValidDate(y, m, d)) {\n      return null;\n    }\n    const result: number = parseToFourDigitYear(y);\n    return result !== -1 ? new Date(result, m, d) : null;\n  }\n\n  getDateValueFromDateString(date: string): Date {\n    if (!date) {\n      return null;\n    }\n    const dateParts: string[] = date.match(USER_INPUT_REGEX);\n    if (!dateParts || dateParts.length !== 3) {\n      return null;\n    }\n    const [firstPart, secondPart, thirdPart] = dateParts;\n    if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n      // secondPart is month && firstPart is date\n      return this.validateAndGetDate(thirdPart, secondPart, firstPart);\n    } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n      // firstPart is month && secondPart is date\n      return this.validateAndGetDate(thirdPart, firstPart, secondPart);\n    } else {\n      // secondPart is month && thirdPart is date\n      return this.validateAndGetDate(firstPart, secondPart, thirdPart);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { CalendarViewModel } from './model/calendar-view.model';\nimport { CalendarModel } from './model/calendar.model';\nimport { DayModel } from './model/day.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { NO_OF_DAYS_IN_A_WEEK } from './utils/constants';\nimport { ClrDayOfWeek } from './interfaces/day-of-week.interface';\nimport { DateIOService } from './providers/date-io.service';\n\n@Component({ selector: 'clr-calendar', templateUrl: './calendar.html' })\nexport class ClrCalendar implements OnDestroy {\n  private _subs: Subscription[] = [];\n  constructor(\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _dateIOService: DateIOService,\n    private _elRef: ElementRef\n  ) {\n    this.generateCalendarView();\n    this.initializeSubscriptions();\n  }\n\n  /**\n   * Calendar View Model to generate the Calendar.\n   */\n  calendarViewModel: CalendarViewModel;\n\n  /**\n   * Gets the locale days according to the TranslationWidth.Narrow format.\n   */\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeHelperService.localeDays;\n  }\n\n  get calendar(): CalendarModel {\n    return this._dateNavigationService.displayedCalendar;\n  }\n\n  get selectedDay(): DayModel {\n    return this._dateNavigationService.selectedDay;\n  }\n\n  get focusedDay(): DayModel {\n    return this._dateNavigationService.focusedDay;\n  }\n\n  get today(): DayModel {\n    return this._dateNavigationService.today;\n  }\n\n  /**\n   * Initialize subscriptions to:\n   * 1. update the calendar view model.\n   * 2. update the focusable day in the calendar view model.\n   * 3. focus on the focusable day in the calendar.\n   */\n  private initializeSubscriptions(): void {\n    this._subs.push(\n      this._dateNavigationService.displayedCalendarChange.subscribe(() => {\n        this.generateCalendarView();\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusedDayChange.subscribe((focusedDay: DayModel) => {\n        this.calendarViewModel.updateFocusableDay(focusedDay);\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusOnCalendarChange.subscribe(() => {\n        this._datepickerFocusService.focusCell(this._elRef);\n      })\n    );\n  }\n\n  /**\n   * Generates the Calendar View based on the calendar retrieved from the DateNavigationService.\n   */\n  private generateCalendarView(): void {\n    this.calendarViewModel = new CalendarViewModel(\n      this.calendar,\n      this.selectedDay,\n      this.focusedDay,\n      this.today,\n      this._localeHelperService.firstDayOfWeek,\n      this._dateIOService.disabledDates\n    );\n  }\n\n  /**\n   * Delegates Keyboard arrow navigation to the DateNavigationService.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (event && this.focusedDay) {\n      switch (event.keyCode) {\n        case UP_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1 * NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case DOWN_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case LEFT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1);\n          break;\n        case RIGHT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(1);\n          break;\n        default:\n          break; // No default case. ESLint x-(\n      }\n    }\n  }\n\n  /**\n   * Focuses on the focusable day when the Calendar View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy(): void {\n    this._subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class FocusService {\n  private _focused: BehaviorSubject<boolean> = new BehaviorSubject(false as boolean);\n  get focusChange(): Observable<boolean> {\n    return this._focused.asObservable();\n  }\n  set focused(state: boolean) {\n    this._focused.next(state);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class DateFormControlService {\n  private _touchedChange: Subject<void> = new Subject<void>();\n  public disabled: boolean;\n\n  get touchedChange(): Observable<void> {\n    return this._touchedChange.asObservable();\n  }\n\n  private _dirtyChange: Subject<void> = new Subject<void>();\n\n  get dirtyChange(): Observable<void> {\n    return this._dirtyChange.asObservable();\n  }\n\n  markAsTouched(): void {\n    this._touchedChange.next();\n  }\n\n  markAsDirty(): void {\n    this._dirtyChange.next();\n  }\n\n  // friendly wrapper\n  setDisabled(state: boolean) {\n    this.disabled = state;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// iPad mini screen width\n// http://stephen.io/mediaqueries/#iPadMini\nexport const DATEPICKER_ENABLE_BREAKPOINT = 768;\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { DATEPICKER_ENABLE_BREAKPOINT } from '../../../utils/breakpoints/breakpoints';\nimport { MOBILE_USERAGENT_REGEX } from '../utils/constants';\n\n@Injectable()\nexport class DatepickerEnabledService {\n  constructor(@Inject(DOCUMENT) private _document: any) {\n    if (this._document) {\n      this._isUserAgentMobile = MOBILE_USERAGENT_REGEX.test(_document.defaultView.navigator.userAgent);\n      this._innerWidth = _document.defaultView.innerWidth;\n    }\n  }\n\n  private _isUserAgentMobile = false;\n  private _innerWidth: number;\n\n  /**\n   * Returns if the calendar should be active or not.\n   * If the user agent is mobile and the screen width is less than DATEPICKER_ACTIVE_BREAKPOINT\n   * then the calendar is inactive.\n   */\n  get isEnabled(): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n    // What they recommend is:\n    //\"In summary, we recommend looking for the string 'Mobi'\n    // anywhere in the User Agent to detect a mobile device.\"\n    if (this._document) {\n      if (this._innerWidth < DATEPICKER_ENABLE_BREAKPOINT && this._isUserAgentMobile) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ClrPopoverPositions } from '../../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../../utils/popover/interfaces/popover-position.interface';\n\nconst enum DatepickerViewEnum {\n  MONTHVIEW = 'MONTHVIEW',\n  YEARVIEW = 'YEARVIEW',\n  DAYVIEW = 'DAYVIEW',\n}\n\n/**\n * This service manages which view is visible in the datepicker popover.\n */\n@Injectable()\nexport class ViewManagerService {\n  private _currentView: DatepickerViewEnum = DatepickerViewEnum.DAYVIEW;\n  position: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  get isDayView(): boolean {\n    return this._currentView === DatepickerViewEnum.DAYVIEW;\n  }\n\n  get isYearView(): boolean {\n    return this._currentView === DatepickerViewEnum.YEARVIEW;\n  }\n\n  get isMonthView(): boolean {\n    return this._currentView === DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToMonthView(): void {\n    this._currentView = DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToYearView(): void {\n    this._currentView = DatepickerViewEnum.YEARVIEW;\n  }\n\n  changeToDayView(): void {\n    this._currentView = DatepickerViewEnum.DAYVIEW;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrLabel } from '../common/label';\n\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { Subscription } from 'rxjs';\nimport { IfControlStateService, CONTROL_STATE } from '../common/if-control-state/if-control-state.service';\nimport { ClrControlSuccess } from '../common/success';\n\n@Component({\n  selector: 'clr-date-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\" clrPopoverAnchor>\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrDate]\"></ng-content>\n          <button\n            #actionButton\n            type=\"button\"\n            clrPopoverOpenCloseButton\n            class=\"clr-input-group-icon-action\"\n            [attr.title]=\"commonStrings.keys.datepickerToggle\"\n            [attr.aria-label]=\"commonStrings.keys.datepickerToggle\"\n            [disabled]=\"isInputDateDisabled\"\n            *ngIf=\"isEnabled\"\n          >\n            <cds-icon status=\"info\" shape=\"calendar\"></cds-icon>\n          </button>\n          <clr-datepicker-view-manager\n            *clrPopoverContent=\"open; at: popoverPosition; outsideClickToClose: true; scrollToClose: true\"\n            clrFocusTrap\n          ></clr-datepicker-view-manager>\n        </div>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  providers: [\n    ControlIdService,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n    LocaleHelperService,\n    ControlClassService,\n    FocusService,\n    NgControlService,\n    DateIOService,\n    DateNavigationService,\n    DatepickerEnabledService,\n    DateFormControlService,\n    ViewManagerService,\n    IfControlStateService,\n  ],\n  host: {\n    '[class.clr-date-container]': 'true',\n    '[class.clr-form-control-disabled]': 'isInputDateDisabled',\n    '[class.clr-form-control]': 'true',\n    '[class.clr-row]': 'addGrid()',\n  },\n})\nexport class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {\n  _dynamic = false;\n  showInvalid = false;\n  showHelper = false;\n  focus = false;\n  showValid = false;\n  state: CONTROL_STATE;\n  control: NgControl;\n  @ContentChild(ClrLabel) label: ClrLabel;\n  @ContentChild(ClrControlSuccess) controlSuccessComponent: ClrControlSuccess;\n\n  @Input('clrPosition')\n  set clrPosition(position: string) {\n    if (position && (ClrPopoverPositions as Record<string, any>)[position]) {\n      this.viewManagerService.position = (ClrPopoverPositions as Record<string, any>)[position];\n    }\n  }\n  get popoverPosition(): ClrPopoverPosition {\n    return this.viewManagerService.position;\n  }\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  private toggleButton: ElementRef;\n  @ViewChild('actionButton')\n  set actionButton(button: ElementRef) {\n    this.toggleButton = button;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private dateNavigationService: DateNavigationService,\n    private datepickerEnabledService: DatepickerEnabledService,\n    private dateFormControlService: DateFormControlService,\n    public commonStrings: ClrCommonStringsService,\n    private focusService: FocusService,\n    private viewManagerService: ViewManagerService,\n    private controlClassService: ControlClassService,\n    @Optional() private layoutService: LayoutService,\n    private ngControlService: NgControlService,\n    private ifControlStateService: IfControlStateService\n  ) {\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(() => {\n        this.dateFormControlService.markAsTouched();\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ifControlStateService.statusChanges.subscribe((state: CONTROL_STATE) => {\n        this.state = state;\n        this.showValid = CONTROL_STATE.VALID === state && !!this.controlSuccessComponent;\n        this.showInvalid = CONTROL_STATE.INVALID === state;\n        this.showHelper = CONTROL_STATE.NONE === state || (!this.showInvalid && !this.controlSuccessComponent);\n      })\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(open => {\n        if (open) {\n          this.initializeCalendar();\n        } else {\n          this.toggleButton.nativeElement.focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the classes to apply to the control\n   */\n  controlClass() {\n    return this.controlClassService.controlClass(this.state, this.addGrid());\n  }\n\n  /**\n   * Determines if the control needs to add grid classes\n   */\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  /**\n   * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.\n   */\n  get isEnabled(): boolean {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  /**\n   * Return if Datepicker is diabled or not as Form Control\n   */\n  get isInputDateDisabled(): boolean {\n    /* clrForm wrapper or without clrForm */\n    return (\n      (this.control && this.control.disabled) || (this.dateFormControlService && this.dateFormControlService.disabled)\n    );\n  }\n\n  /**\n   * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.\n   */\n  private initializeCalendar(): void {\n    this.dateNavigationService.initializeCalendar();\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function isBooleanAttributeSet(value: string | boolean): boolean {\n  // for null just return false no need to check anything\n  if (value === null) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    // Empty string is valid, 'true' as string is also valid\n    return value.length >= 0;\n  }\n  // Boolean value will be read as it is, everything else is false\n  return typeof value === 'boolean' ? value : false;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { datesAreEqual } from './utils/date-utils';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n// There are four ways the datepicker value is set\n// 1. Value set by user typing into text input as a string ex: '01/28/2015'\n// 2. Value set explicitly by Angular Forms APIs as a string ex: '01/28/2015'\n// 3. Value set by user via datepicker UI as a Date Object\n// 4. Value set via `clrDate` input as a Date Object\n\n@Directive({\n  selector: '[clrDate]',\n  host: {\n    '[class.clr-input]': 'true',\n  },\n  providers: [DatepickerFocusService],\n})\nexport class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n  public static ngAcceptInputType_date: Date | null;\n\n  @Input() placeholder: string;\n  @Output('clrDateChange') dateChange: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Input('clrDate')\n  set date(date: Date) {\n    if (this.previousDateChange !== date) {\n      this.updateDate(this.getValidDateValueFromDate(date));\n    }\n\n    if (!this.initialClrDateInputValue) {\n      this.initialClrDateInputValue = date;\n    }\n  }\n\n  @Input()\n  set min(dateString: string) {\n    this.dateIOService.setMinDate(dateString);\n  }\n\n  @Input()\n  set max(dateString: string) {\n    this.dateIOService.setMaxDate(dateString);\n  }\n\n  protected index = 1;\n  private initialClrDateInputValue: Date;\n  private previousDateChange: Date;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    injector: Injector,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n    @Self()\n    @Optional()\n    protected control: NgControl,\n    @Optional() private container: ClrDateContainer,\n    @Optional() private dateIOService: DateIOService,\n    @Optional() private dateNavigationService: DateNavigationService,\n    @Optional() private datepickerEnabledService: DatepickerEnabledService,\n    @Optional() private dateFormControlService: DateFormControlService,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Optional() private focusService: FocusService,\n    private datepickerFocusService: DatepickerFocusService\n  ) {\n    super(viewContainerRef, ClrDateContainer, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.populateServicesFromContainerComponent();\n\n    this.subscriptions.push(\n      this.listenForUserSelectedDayChanges(),\n      this.listenForControlValueChanges(),\n      this.listenForTouchChanges(),\n      this.listenForDirtyChanges(),\n      this.listenForInputRefocus()\n    );\n  }\n\n  ngAfterViewInit() {\n    // I don't know why I have to do this but after using the new HostWrapping Module I have to delay the processing\n    // of the initial Input set by the user to here. If I do not 2 issues occur:\n    // 1. The Input setter is called before ngOnInit. ngOnInit initializes the services without which the setter fails.\n    // 2. The Renderer doesn't work before ngAfterViewInit (It used to before the new HostWrapping Module for some reason).\n    // I need the renderer to set the value property on the input to make sure that if the user has supplied a Date\n    // input object, we reflect it with the right date on the input field using the IO service. I am not sure if\n    // these are major issues or not but just noting them down here.\n    this.processInitialInputs();\n  }\n\n  @HostListener('focus')\n  setFocusStates() {\n    this.setFocus(true);\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    this.setFocus(false);\n  }\n\n  @HostBinding('attr.placeholder')\n  get placeholderText(): string {\n    return this.placeholder ? this.placeholder : this.dateIOService.placeholderText;\n  }\n\n  @HostBinding('attr.type')\n  get inputType(): string {\n    return isPlatformBrowser(this.platformId) && this.usingNativeDatepicker() ? 'date' : 'text';\n  }\n\n  @HostListener('change', ['$event.target'])\n  onValueChange(target: HTMLInputElement) {\n    const validDateValue = this.dateIOService.getDateValueFromDateString(target.value);\n    if (this.usingClarityDatepicker() && validDateValue) {\n      this.updateDate(validDateValue, true);\n    } else if (this.usingNativeDatepicker()) {\n      const [year, month, day] = target.value.split('-');\n      this.updateDate(new Date(+year, +month - 1, +day), true);\n    } else {\n      this.emitDateOutput(null);\n    }\n  }\n\n  @HostBinding('disabled')\n  @Input('disabled')\n  set disabled(value: boolean | string) {\n    if (this.dateFormControlService) {\n      this.dateFormControlService.setDisabled(isBooleanAttributeSet(value));\n    }\n  }\n  get disabled() {\n    if (this.dateFormControlService) {\n      return this.dateFormControlService.disabled;\n    }\n    return null;\n  }\n\n  private usingClarityDatepicker() {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  private usingNativeDatepicker() {\n    return !this.datepickerEnabledService.isEnabled;\n  }\n\n  private setFocus(focus: boolean) {\n    if (this.focusService) {\n      this.focusService.focused = focus;\n    }\n  }\n\n  private populateServicesFromContainerComponent() {\n    if (!this.container) {\n      this.dateIOService = this.getProviderFromContainer(DateIOService);\n      this.dateNavigationService = this.getProviderFromContainer(DateNavigationService);\n      this.datepickerEnabledService = this.getProviderFromContainer(DatepickerEnabledService);\n      this.dateFormControlService = this.getProviderFromContainer(DateFormControlService);\n    }\n  }\n\n  private processInitialInputs() {\n    if (this.datepickerHasFormControl()) {\n      this.updateDate(this.dateIOService.getDateValueFromDateString(this.control.value));\n    } else {\n      this.updateDate(this.initialClrDateInputValue);\n    }\n  }\n\n  private updateDate(value: Date, setByUserInteraction = false) {\n    const date = this.getValidDateValueFromDate(value);\n\n    if (setByUserInteraction) {\n      this.emitDateOutput(date);\n    } else {\n      this.previousDateChange = date;\n    }\n\n    if (this.dateNavigationService) {\n      this.dateNavigationService.selectedDay = date\n        ? new DayModel(date.getFullYear(), date.getMonth(), date.getDate())\n        : null;\n    }\n\n    this.updateInput(date);\n  }\n\n  private updateInput(date: Date) {\n    if (date) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      if (this.usingNativeDatepicker()) {\n        // valueAsDate expects UTC, date from input is time-zoned\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        this.renderer.setProperty(this.el.nativeElement, 'valueAsDate', date);\n      } else if (this.datepickerHasFormControl() && dateString !== this.control.value) {\n        this.control.control.setValue(dateString);\n      } else {\n        this.renderer.setProperty(this.el.nativeElement, 'value', dateString);\n      }\n    } else {\n      this.renderer.setProperty(this.el.nativeElement, 'value', '');\n    }\n  }\n\n  private getValidDateValueFromDate(date: Date) {\n    if (this.dateIOService) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      return this.dateIOService.getDateValueFromDateString(dateString);\n    } else {\n      return null;\n    }\n  }\n\n  private emitDateOutput(date: Date) {\n    if (!datesAreEqual(date, this.previousDateChange)) {\n      this.dateChange.emit(date);\n      this.previousDateChange = date;\n    } else if (!date && this.previousDateChange) {\n      this.dateChange.emit(null);\n      this.previousDateChange = null;\n    }\n  }\n\n  private datepickerHasFormControl() {\n    return !!this.control;\n  }\n\n  private listenForControlValueChanges() {\n    return of(this.datepickerHasFormControl())\n      .pipe(\n        filter(hasControl => hasControl),\n        switchMap(() => this.control.valueChanges),\n        // only update date value if not being set by user\n        filter(() => !this.datepickerFocusService.elementIsFocused(this.el.nativeElement))\n      )\n      .subscribe((value: string) => this.updateDate(this.dateIOService.getDateValueFromDateString(value)));\n  }\n\n  private listenForUserSelectedDayChanges() {\n    return this.dateNavigationService.selectedDayChange.subscribe(dayModel => this.updateDate(dayModel.toDate(), true));\n  }\n\n  private listenForTouchChanges() {\n    return this.dateFormControlService.touchedChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsTouched());\n  }\n\n  private listenForDirtyChanges() {\n    return this.dateFormControlService.dirtyChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsDirty());\n  }\n\n  private listenForInputRefocus() {\n    return this.dateNavigationService.selectedDayChange\n      .pipe(filter(date => !!date))\n      .subscribe(() => this.datepickerFocusService.focusInput(this.el.nativeElement));\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-datepicker-view-manager',\n  templateUrl: './datepicker-view-manager.html',\n  providers: [DatepickerFocusService],\n  host: {\n    '[class.datepicker]': 'true',\n    '[attr.aria-modal]': 'true',\n  },\n})\nexport class ClrDatepickerViewManager {\n  constructor(private viewManagerService: ViewManagerService) {}\n\n  /**\n   * Returns if the current view is the monthpicker.\n   */\n  get isMonthView(): boolean {\n    return this.viewManagerService.isMonthView;\n  }\n\n  /**\n   * Returns if the current view is the yearpicker.\n   */\n  get isYearView(): boolean {\n    return this.viewManagerService.isYearView;\n  }\n\n  /**\n   * Returns if the current view is the daypicker.\n   */\n  get isDayView(): boolean {\n    return this.viewManagerService.isDayView;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { DayViewModel } from './model/day-view.model';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\n\n@Component({\n  selector: 'clr-day',\n  template: `\n    <button\n      class=\"day-btn\"\n      type=\"button\"\n      [class.is-today]=\"dayView.isTodaysDate\"\n      [class.is-excluded]=\"dayView.isExcluded\"\n      [class.is-disabled]=\"dayView.isDisabled\"\n      [class.is-selected]=\"dayView.isSelected\"\n      [attr.tabindex]=\"dayView.tabIndex\"\n      (click)=\"selectDay()\"\n      (focus)=\"onDayViewFocus()\"\n      [attr.aria-label]=\"dayString\"\n    >\n      {{ dayView.dayModel.date }}\n    </button>\n  `,\n  host: { '[class.day]': 'true' },\n})\nexport class ClrDay {\n  private _dayView: DayViewModel;\n  public dayString: string;\n\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _toggleService: ClrPopoverToggleService,\n    private dateFormControlService: DateFormControlService\n  ) {}\n\n  /**\n   * DayViewModel input which is used to build the Day View.\n   */\n\n  @Input('clrDayView')\n  public set dayView(day: DayViewModel) {\n    this._dayView = day;\n    this.dayString = this._dayView.dayModel.toDateString();\n  }\n\n  public get dayView(): DayViewModel {\n    return this._dayView;\n  }\n\n  /**\n   * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.\n   */\n  onDayViewFocus() {\n    this._dateNavigationService.focusedDay = this.dayView.dayModel;\n  }\n\n  /**\n   * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.\n   */\n  selectDay(): void {\n    const day: DayModel = this.dayView.dayModel;\n    this._dateNavigationService.notifySelectedDayChanged(day);\n    this.dateFormControlService.markAsDirty();\n    this._toggleService.open = false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-daypicker',\n  templateUrl: './daypicker.html',\n  host: { '[class.daypicker]': 'true' },\n})\nexport class ClrDaypicker {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _dateNavigationService: DateNavigationService,\n    private _localeHelperService: LocaleHelperService,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  get monthAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectMonthText, {\n      CALENDAR_MONTH: this.calendarMonth,\n    });\n  }\n\n  get yearAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectYearText, {\n      CALENDAR_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the monthpicker view.\n   */\n  changeToMonthView(): void {\n    this._viewManagerService.changeToMonthView();\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the yearpicker view.\n   */\n  changeToYearView(): void {\n    this._viewManagerService.changeToYearView();\n  }\n\n  /**\n   * Returns the month value of the calendar in the TranslationWidth.Abbreviated format.\n   */\n  get calendarMonth(): string {\n    return this._localeHelperService.localeMonthsAbbreviated[this._dateNavigationService.displayedCalendar.month];\n  }\n\n  /**\n   * Returns the year value of the calendar.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the next month.\n   */\n  nextMonth(): void {\n    this._dateNavigationService.moveToNextMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the previous month.\n   */\n  previousMonth(): void {\n    this._dateNavigationService.moveToPreviousMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the current month.\n   */\n  currentMonth(): void {\n    this._dateNavigationService.moveToCurrentMonth();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-monthpicker',\n  template: `\n    <button\n      type=\"button\"\n      class=\"calendar-btn month\"\n      *ngFor=\"let month of monthNames; let monthIndex = index\"\n      (click)=\"changeMonth(monthIndex)\"\n      [class.is-selected]=\"monthIndex === calendarMonthIndex\"\n      [attr.tabindex]=\"getTabIndex(monthIndex)\"\n    >\n      {{ month }}\n    </button>\n  `,\n  host: {\n    '[class.monthpicker]': 'true',\n  },\n})\nexport class ClrMonthpicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this._focusedMonthIndex = this.calendarMonthIndex;\n  }\n\n  /**\n   * Keeps track of the current focused month.\n   */\n  private _focusedMonthIndex: number;\n\n  /**\n   * Gets the months array which is used to rendered the monthpicker view.\n   * Months are in the TranslationWidth.Wide format.\n   */\n  get monthNames(): ReadonlyArray<string> {\n    return this._localeHelperService.localeMonthsWide;\n  }\n\n  /**\n   * Gets the month value of the Calendar.\n   */\n  get calendarMonthIndex(): number {\n    return this._dateNavigationService.displayedCalendar.month;\n  }\n\n  /**\n   * Calls the DateNavigationService to update the month value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeMonth(monthIndex: number) {\n    this._dateNavigationService.changeMonth(monthIndex);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Compares the month passed to the focused month and returns the tab index.\n   */\n  getTabIndex(monthIndex: number): number {\n    return monthIndex === this._focusedMonthIndex ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the monthpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW && this._focusedMonthIndex > 0) {\n        event.preventDefault();\n        this._focusedMonthIndex--;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === DOWN_ARROW && this._focusedMonthIndex < 11) {\n        event.preventDefault();\n        this._focusedMonthIndex++;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === RIGHT_ARROW && this._focusedMonthIndex < 6) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex + 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === LEFT_ARROW && this._focusedMonthIndex > 5) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex - 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      }\n    }\n  }\n\n  /**\n   * Focuses on the current calendar month when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nconst YEARS_TO_DISPLAY = 10;\n\nexport class YearRangeModel {\n  constructor(private readonly year: number) {\n    this.generateYearRange();\n  }\n\n  yearRange: number[] = [];\n\n  /**\n   * Gets the number in the middle of the range.\n   */\n  get middleYear(): number {\n    return this.yearRange[Math.floor(this.yearRange.length / 2)];\n  }\n\n  /**\n   * Generates the year range based on the year parameter.\n   * eg: If 2018 is passed the output will be [2010, 2011, ..., 2019]\n   */\n  private generateYearRange() {\n    const remainder: number = this.year % YEARS_TO_DISPLAY;\n    const floor: number = this.year - remainder;\n    const ceil: number = floor + YEARS_TO_DISPLAY;\n    this.yearRange = this.generateRange(floor, ceil);\n  }\n\n  /**\n   * Function which generate a range of numbers from floor to ceil.\n   */\n  private generateRange(floor: number, ceil: number): number[] {\n    return Array.from({ length: ceil - floor }, (_v, k) => k + floor);\n  }\n\n  /**\n   * Generates the YearRangeModel for the next decade.\n   */\n  nextDecade(): YearRangeModel {\n    return new YearRangeModel(this.year + 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the previous decade.\n   */\n  previousDecade(): YearRangeModel {\n    return new YearRangeModel(this.year - 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the current decade.\n   */\n  currentDecade(): YearRangeModel {\n    return new YearRangeModel(new Date().getFullYear());\n  }\n\n  /**\n   * Checks if the value is in the YearRangeModel.\n   */\n  inRange(value: number): boolean {\n    return this.yearRange.indexOf(value) > -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { YearRangeModel } from './model/year-range.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-yearpicker',\n  template: `\n    <div class=\"year-switchers\">\n      <button\n        class=\"calendar-btn switcher\"\n        type=\"button\"\n        (click)=\"previousDecade()\"\n        [attr.aria-label]=\"commonStrings.keys.datepickerPreviousDecade\"\n      >\n        <cds-icon shape=\"angle\" direction=\"left\" [attr.title]=\"commonStrings.keys.datepickerPreviousDecade\"></cds-icon>\n      </button>\n      <button\n        class=\"calendar-btn switcher\"\n        type=\"button\"\n        (click)=\"currentDecade()\"\n        [attr.aria-label]=\"commonStrings.keys.datepickerCurrentDecade\"\n      >\n        <cds-icon shape=\"event\" [attr.title]=\"commonStrings.keys.datepickerCurrentDecade\"></cds-icon>\n      </button>\n      <button\n        class=\"calendar-btn switcher\"\n        type=\"button\"\n        (click)=\"nextDecade()\"\n        [attr.aria-label]=\"commonStrings.keys.datepickerNextDecade\"\n      >\n        <cds-icon shape=\"angle\" direction=\"right\" [attr.title]=\"commonStrings.keys.datepickerNextDecade\"></cds-icon>\n      </button>\n    </div>\n    <div class=\"years\">\n      <button\n        *ngFor=\"let year of yearRangeModel.yearRange\"\n        type=\"button\"\n        class=\"calendar-btn year\"\n        [attr.tabindex]=\"getTabIndex(year)\"\n        [class.is-selected]=\"year === calendarYear\"\n        (click)=\"changeYear(year)\"\n      >\n        {{ year }}\n      </button>\n    </div>\n  `,\n  host: {\n    '[class.yearpicker]': 'true',\n  },\n})\nexport class ClrYearpicker implements AfterViewInit {\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _viewManagerService: ViewManagerService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.yearRangeModel = new YearRangeModel(this.calendarYear);\n    this._focusedYear = this.calendarYear;\n    this.updateRange(this.yearRangeModel);\n  }\n\n  private decadeRange: string;\n\n  /**\n   * YearRangeModel which is used to build the YearPicker view.\n   */\n  yearRangeModel: YearRangeModel;\n\n  /**\n   * Keeps track of the current focused year.\n   */\n  private _focusedYear: number;\n\n  /**\n   * Gets the year which the user is currently on.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Increments the focus year by the value passed. Updates the YearRangeModel if the\n   * new value is not in the current decade.\n   */\n  private incrementFocusYearBy(value: number): void {\n    this._focusedYear = this._focusedYear + value;\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (value > 0) {\n        this.yearRangeModel = this.yearRangeModel.nextDecade();\n      } else {\n        this.yearRangeModel = this.yearRangeModel.previousDecade();\n      }\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Calls the DateNavigationService to update the year value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeYear(year: number): void {\n    this._dateNavigationService.changeYear(year);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Updates the YearRangeModel to the previous decade.\n   */\n  previousDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.previousDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Updates the YearRangeModel to the current decade.\n   */\n  currentDecade(): void {\n    if (!this.yearRangeModel.inRange(this._dateNavigationService.today.year)) {\n      this.yearRangeModel = this.yearRangeModel.currentDecade();\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /**\n   * Updates the YearRangeModel to the next decade.\n   */\n  nextDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.nextDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Compares the year passed to the focused year and returns the tab index.\n   */\n  getTabIndex(year: number): number {\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (this.yearRangeModel.inRange(this.calendarYear)) {\n        this._focusedYear = this.calendarYear;\n      } else {\n        this._focusedYear = this.yearRangeModel.middleYear;\n      }\n    }\n    return this._focusedYear === year ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the yearpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-1);\n      } else if (keyCode === DOWN_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(1);\n      } else if (keyCode === RIGHT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(5);\n      } else if (keyCode === LEFT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-5);\n      }\n    }\n  }\n\n  private updateRange(yrm: YearRangeModel): void {\n    const floor = yrm.yearRange[0];\n    const ceil = yrm.yearRange[yrm.yearRange.length - 1];\n    this.decadeRange = `${floor} to ${ceil}`;\n  }\n\n  /**\n   * Focuses on the current calendar year when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrCalendar } from './calendar';\nimport { ClrDateContainer } from './date-container';\nimport { ClrDateInput } from './date-input';\nimport { ClrDatepickerViewManager } from './datepicker-view-manager';\nimport { ClrDay } from './day';\nimport { ClrDaypicker } from './daypicker';\nimport { ClrMonthpicker } from './monthpicker';\nimport { ClrYearpicker } from './yearpicker';\nimport {\n  checkCircleIcon,\n  ClarityIcons,\n  eventIcon,\n  exclamationCircleIcon,\n  angleIcon,\n  calendarIcon,\n} from '@cds/core/icon';\n\nexport const CLR_DATEPICKER_DIRECTIVES: Type<any>[] = [\n  ClrDay,\n  ClrDateContainer,\n  ClrDateInput,\n  ClrDatepickerViewManager,\n  ClrMonthpicker,\n  ClrYearpicker,\n  ClrDaypicker,\n  ClrCalendar,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrHostWrappingModule,\n    ClrConditionalModule,\n    ClrPopoverModuleNext,\n    ClrIconModule,\n    ClrFocusTrapModule,\n    ClrCommonFormsModule,\n  ],\n  declarations: [CLR_DATEPICKER_DIRECTIVES],\n  exports: [CLR_DATEPICKER_DIRECTIVES],\n  entryComponents: [ClrDateContainer],\n})\nexport class ClrDatepickerModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon, angleIcon, eventIcon, calendarIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-input-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <ng-content select=\"[clrInput]\"></ng-content>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrInputContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrInputContainer } from './input-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n@Directive({ selector: '[clrInput]', host: { '[class.clr-input]': 'true' } })\nexport class ClrInput extends WrappedFormControl<ClrInputContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrInputContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrInput } from './input';\nimport { ClrInputContainer } from './input-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrInput, ClrInputContainer],\n  exports: [ClrCommonFormsModule, ClrInput, ClrInputContainer],\n  entryComponents: [ClrInputContainer],\n})\nexport class ClrInputModule {\n  constructor() {\n    ClarityIcons.addIcons(\n      exclamationCircleIcon,\n      checkCircleIcon // caret\n    );\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, InjectionToken, Input, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\nexport const TOGGLE_SERVICE = new InjectionToken<BehaviorSubject<boolean>>(undefined);\nexport function ToggleServiceFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const TOGGLE_SERVICE_PROVIDER = { provide: TOGGLE_SERVICE, useFactory: ToggleServiceFactory };\n\n@Component({\n  selector: 'clr-password-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrPassword]\"></ng-content>\n          <button\n            *ngIf=\"clrToggle\"\n            (click)=\"toggle()\"\n            [disabled]=\"control?.disabled\"\n            class=\"clr-input-group-icon-action\"\n            type=\"button\"\n          >\n            <cds-icon\n              status=\"info\"\n              [attr.shape]=\"show ? 'eye-hide' : 'eye'\"\n              [attr.title]=\"show ? commonStrings.keys.hide : commonStrings.keys.show\"\n            ></cds-icon>\n          </button>\n        </div>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    NgControlService,\n    ControlIdService,\n    ControlClassService,\n    FocusService,\n    TOGGLE_SERVICE_PROVIDER,\n    IfControlStateService,\n  ],\n})\nexport class ClrPasswordContainer extends ClrAbstractContainer {\n  show = false;\n  focus = false;\n  private _toggle = true;\n\n  @Input('clrToggle')\n  set clrToggle(state: boolean) {\n    this._toggle = state;\n    if (!state) {\n      this.show = false;\n    }\n  }\n  get clrToggle() {\n    return this._toggle;\n  }\n\n  constructor(\n    ifControlStateService: IfControlStateService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    public focusService: FocusService,\n    @Inject(TOGGLE_SERVICE) private toggleService: BehaviorSubject<boolean>,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n\n    /* The unsubscribe is handle inside the ClrAbstractContainer */\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.toggleService.next(this.show);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPasswordContainer, TOGGLE_SERVICE } from './password-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { FocusService } from '../common/providers/focus.service';\n\n@Directive({ selector: '[clrPassword]', host: { '[class.clr-input]': 'true' } })\nexport class ClrPassword extends WrappedFormControl<ClrPasswordContainer> implements OnInit, OnDestroy {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Optional() private focusService: FocusService,\n    @Optional()\n    @Inject(TOGGLE_SERVICE)\n    private toggleService: BehaviorSubject<boolean>\n  ) {\n    super(vcr, ClrPasswordContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrPassword requires being wrapped in <clr-password-container>');\n    }\n\n    this.subscriptions.push(\n      this.toggleService.subscribe(toggle => {\n        renderer.setProperty(el.nativeElement, 'type', toggle ? 'text' : 'password');\n      })\n    );\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon, eyeHideIcon, eyeIcon } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrPassword } from './password';\nimport { ClrPasswordContainer } from './password-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrPassword, ClrPasswordContainer],\n  exports: [ClrCommonFormsModule, ClrPassword, ClrPasswordContainer],\n  entryComponents: [ClrPasswordContainer],\n})\nexport class ClrPasswordModule {\n  constructor() {\n    ClarityIcons.addIcons(eyeHideIcon, eyeIcon, exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnInit } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\n@Component({\n  selector: 'clr-radio-wrapper',\n  template: `\n    <ng-content select=\"[clrRadio]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-radio-wrapper]': 'true',\n  },\n  providers: [ControlIdService],\n})\nexport class ClrRadioWrapper implements DynamicWrapper, OnInit {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRadioWrapper } from '../radio/radio-wrapper';\n\n@Directive({ selector: '[clrRadio]' })\nexport class ClrRadio extends WrappedFormControl<ClrRadioWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRadioWrapper, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\n\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-radio-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-radio-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n        <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, IfControlStateService, ControlClassService],\n})\nexport class ClrRadioContainer extends ClrAbstractContainer {\n  private inline = false;\n\n  constructor(\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService,\n    protected ifControlStateService: IfControlStateService\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n  }\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrRadio } from './radio';\nimport { ClrRadioContainer } from './radio-container';\nimport { ClrRadioWrapper } from './radio-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  exports: [ClrCommonFormsModule, ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  entryComponents: [ClrRadioWrapper],\n})\nexport class ClrRadioModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, Optional } from '@angular/core';\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\n\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-select-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div [ngClass]=\"wrapperClass()\">\n        <ng-content select=\"[clrSelect]\"></ng-content>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrSelectContainer extends ClrAbstractContainer {\n  @ContentChild(SelectMultipleControlValueAccessor, { static: false })\n  multiple: SelectMultipleControlValueAccessor;\n  private multi = false;\n\n  constructor(\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService,\n    protected ifControlStateService: IfControlStateService\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n  }\n\n  ngOnInit() {\n    /* The unsubscribe is handle inside the ClrAbstractContainer */\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.multi = control.valueAccessor instanceof SelectMultipleControlValueAccessor;\n          this.control = control;\n        }\n      })\n    );\n  }\n\n  wrapperClass() {\n    return this.multi ? 'clr-multiselect-wrapper' : 'clr-select-wrapper';\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrSelectContainer } from './select-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrSelect]', host: { '[class.clr-select]': 'true' } })\nexport class ClrSelect extends WrappedFormControl<ClrSelectContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrSelectContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrSelect } from './select';\nimport { ClrSelectContainer } from './select-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrSelect, ClrSelectContainer],\n  exports: [ClrCommonFormsModule, ClrSelect, ClrSelectContainer],\n  entryComponents: [ClrSelectContainer],\n})\nexport class ClrSelectModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-textarea-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-textarea-wrapper\">\n        <ng-content select=\"[clrTextarea]\"></ng-content>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrTextareaContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@Directive({ selector: '[clrTextarea]', host: { '[class.clr-textarea]': 'true' } })\nexport class ClrTextarea extends WrappedFormControl<ClrTextareaContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrTextareaContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrTextarea } from './textarea';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrTextarea, ClrTextareaContainer],\n  exports: [ClrCommonFormsModule, ClrTextarea, ClrTextareaContainer],\n  entryComponents: [ClrTextareaContainer],\n})\nexport class ClrTextareaModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional, Renderer2 } from '@angular/core';\n\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-range-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-range-wrapper\" [class.progress-fill]=\"hasProgress\">\n        <ng-content select=\"[clrRange]\"></ng-content>\n        <span *ngIf=\"hasProgress\" class=\"fill-input\" [style.width]=\"getRangeProgressFillWidth()\"></span>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrRangeContainer extends ClrAbstractContainer {\n  private _hasProgress = false;\n\n  @Input('clrRangeHasProgress')\n  set hasProgress(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasProgress) {\n      this._hasProgress = valBool;\n    }\n  }\n\n  get hasProgress() {\n    return this._hasProgress;\n  }\n\n  constructor(\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private idService: ControlIdService,\n    protected ifControlStateService: IfControlStateService\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n  }\n\n  getRangeProgressFillWidth(): string {\n    const input = this.renderer.selectRootElement('[clrRange]#' + this.idService.id);\n\n    const inputWidth = input.offsetWidth;\n    const inputMinValue = +input.min;\n    let inputMaxValue = +input.max;\n\n    if (inputMinValue === 0 && inputMaxValue === 0) {\n      inputMaxValue = 100;\n    }\n\n    const inputMiddle = (inputMinValue + inputMaxValue) / 2;\n    const inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;\n    const valueAsPercent = ((inputValue - inputMinValue) * 100) / (inputMaxValue - inputMinValue);\n\n    return (valueAsPercent * inputWidth) / 100 + 'px';\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRangeContainer } from './range-container';\n\n@Directive({ selector: '[clrRange]', host: { '[class.clr-range]': 'true' } })\nexport class ClrRange extends WrappedFormControl<ClrRangeContainer> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRangeContainer, injector, control, renderer, el);\n  }\n\n  // Notes: We need an output here EventEmitter for the value\n  // Does this implementation also need a display for the value?\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrRange } from './range';\nimport { ClrRangeContainer } from './range-container';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRange, ClrRangeContainer],\n  exports: [ClrCommonFormsModule, ClrRange, ClrRangeContainer],\n  entryComponents: [ClrRangeContainer],\n})\nexport class ClrRangeModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class DatalistIdService {\n  private _id = 'clr-datalist-' + ++counter;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-datalist-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrDatalistInput]\"></ng-content>\n          <ng-content select=\"datalist\"></ng-content>\n        </div>\n        <cds-icon\n          *ngIf=\"showInvalid\"\n          class=\"clr-validate-icon\"\n          status=\"danger\"\n          shape=\"exclamation-circle\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n        <cds-icon\n          *ngIf=\"showValid\"\n          class=\"clr-validate-icon\"\n          shape=\"check-circle\"\n          status=\"success\"\n          aria-hidden=\"true\"\n        ></cds-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    ControlClassService,\n    LayoutService,\n    ControlIdService,\n    FocusService,\n    NgControlService,\n    DatalistIdService,\n    IfControlStateService,\n  ],\n})\nexport class ClrDatalistContainer extends ClrAbstractContainer {\n  focus = false;\n\n  constructor(\n    controlClassService: ControlClassService,\n    @Optional() layoutService: LayoutService,\n    ngControlService: NgControlService,\n    private focusService: FocusService,\n    protected ifControlStateService: IfControlStateService\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n\n    this.subscriptions.push(this.focusService.focusChange.subscribe(state => (this.focus = state)));\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ViewContainerRef,\n  Injector,\n  Self,\n  Optional,\n  Renderer2,\n  ElementRef,\n  HostListener,\n  AfterContentInit,\n} from '@angular/core';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { NgControl } from '@angular/forms';\nimport { FocusService } from '../common/providers/focus.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: '[clrDatalistInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.list]': 'listValue',\n  },\n})\nexport class ClrDatalistInput extends WrappedFormControl<ClrDatalistContainer> implements AfterContentInit {\n  constructor(\n    @Optional() private focusService: FocusService,\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    private datalistIdService: DatalistIdService\n  ) {\n    super(vcr, ClrDatalistContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrDatalist requires being wrapped in <clr-datalist-container>');\n    }\n  }\n\n  listValue: string;\n\n  ngAfterContentInit() {\n    // Subscriptions is inherited from WrappedFormControl, unsubscribe is handled there\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.listValue = id)));\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Input, Directive, AfterContentInit, Optional } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: 'datalist',\n  host: {\n    '[id]': 'datalistId',\n  },\n})\nexport class ClrDatalist implements AfterContentInit {\n  private subscriptions: Subscription[] = [];\n  constructor(@Optional() private datalistIdService: DatalistIdService) {}\n  datalistId: string;\n\n  ngAfterContentInit() {\n    if (!this.datalistIdService) {\n      return;\n    }\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.datalistId = id)));\n  }\n  @Input()\n  set id(idValue: string) {\n    if (!!idValue && this.datalistIdService) {\n      this.datalistId = idValue;\n      this.datalistIdService.id = idValue;\n    } else if (idValue) {\n      this.datalistId = idValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrDatalistInput } from './datalist-input';\nimport { ClrInputModule } from '../input/input.module';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDatalist } from './datalist';\nimport { checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\n\n@NgModule({\n  imports: [CommonModule, ClrInputModule, ClrIconModule],\n  declarations: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n  exports: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n})\nexport class ClrDatalistModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ComboboxModel } from './combobox.model';\n\nexport class MultiSelectComboboxModel<T> implements ComboboxModel<T> {\n  model: T[];\n\n  containsItem(item: T): boolean {\n    return this.model ? this.model.includes(item) : false;\n  }\n\n  select(item: T): void {\n    this.addItem(item);\n  }\n\n  unselect(item: T): void {\n    this.removeItem(item);\n  }\n\n  isEmpty(): boolean {\n    return !(this.model && this.model.length > 0);\n  }\n\n  pop(): T {\n    let item;\n    if (this.model && this.model.length > 0) {\n      item = this.model[this.model.length - 1];\n      this.removeItem(item);\n    }\n    return item;\n  }\n\n  toString(displayField?: string, index = -1): string {\n    let displayString = '';\n\n    if (this.model) {\n      // If the model is array, we can use a specific item from it, to retrieve the display value.\n      if (index > -1) {\n        if (this.model[index]) {\n          // If we have a defined display field, we'll use it's value as display value\n          if (displayField && (this.model[index] as any)[displayField]) {\n            displayString += (this.model[index] as any)[displayField];\n          } else {\n            // If we don't have a defined display field, we'll use the toString representation of the\n            // item as display value.\n            displayString += this.model[index].toString();\n          }\n        }\n      } else {\n        this.model.forEach((model: T) => {\n          // If we have a defined display field, we'll use it's value as display value\n          if (displayField && (model as any)[displayField]) {\n            displayString += (model as any)[displayField];\n          } else {\n            // If we don't have a defined display field, we'll use the toString representation of the\n            // model as display value.\n            displayString += model.toString();\n          }\n          displayString += ' ';\n        });\n      }\n    }\n\n    return displayString.trim();\n  }\n\n  private addItem(item: T) {\n    if (!this.containsItem(item)) {\n      this.model = this.model || [];\n      this.model.push(item);\n    }\n  }\n\n  private removeItem(item: T) {\n    if (this.model === null || this.model === undefined) {\n      return;\n    }\n\n    const index = this.model.indexOf(item);\n\n    if (index > -1) {\n      this.model.splice(index, 1);\n    }\n\n    // we intentionally set the model to null for form validation\n    if (this.model.length === 0) {\n      this.model = null;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, ReplaySubject } from 'rxjs';\n\nimport { MultiSelectComboboxModel } from '../model/multi-select-combobox.model';\nimport { ComboboxModel } from '../model/combobox.model';\n\n@Injectable()\nexport class OptionSelectionService<T> {\n  public selectionModel: ComboboxModel<T>;\n  public loading = false;\n  public displayField: string;\n  private _currentInput = '';\n  get currentInput(): string {\n    return this._currentInput;\n  }\n  set currentInput(input) {\n    // clear value in single selection model when input is empty\n    if (!input && !this.multiselectable) {\n      this.setSelectionValue(null);\n    }\n    this._currentInput = input;\n    this._inputChanged.next(input);\n  }\n  private _inputChanged: BehaviorSubject<string> = new BehaviorSubject('');\n  inputChanged = this._inputChanged.asObservable();\n\n  private _selectionChanged: ReplaySubject<ComboboxModel<T>> = new ReplaySubject(1);\n\n  // This observable is for notifying the ClrOption to update its\n  // selection by comparing the value\n  get selectionChanged(): Observable<ComboboxModel<T>> {\n    return this._selectionChanged.asObservable();\n  }\n\n  select(item: T) {\n    if (!item || this.selectionModel.containsItem(item)) {\n      return;\n    }\n    this.selectionModel.select(item);\n    this._selectionChanged.next(this.selectionModel);\n  }\n\n  toggle(item: T) {\n    if (!item) {\n      return;\n    }\n    if (this.selectionModel.containsItem(item)) {\n      this.selectionModel.unselect(item);\n    } else {\n      this.selectionModel.select(item);\n    }\n    this._selectionChanged.next(this.selectionModel);\n  }\n\n  unselect(item: T) {\n    if (!item || !this.selectionModel.containsItem(item)) {\n      return;\n    }\n    this.selectionModel.unselect(item);\n    this._selectionChanged.next(this.selectionModel);\n  }\n\n  get multiselectable(): boolean {\n    return this.selectionModel instanceof MultiSelectComboboxModel;\n  }\n\n  // TODO: Add support for trackBy and compareFn\n  setSelectionValue(value: T | T[]): void {\n    // NOTE: Currently we assume that no 2 options will have the same value\n    // but Eudes and I discussed that this is a possibility but we will handle\n    // this later\n\n    // if selection is undefined, or its value hasn't changed, or changing from null <-> undefined, that's not really changing so we return\n    if (!this.selectionModel || this.selectionModel.model === value || (!this.selectionModel.model && !value)) {\n      return;\n    }\n\n    this.selectionModel.model = value;\n    this._selectionChanged.next(this.selectionModel);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ArrowKeyDirection {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class FocusableItem {\n  id: string;\n  disabled?: boolean;\n\n  abstract focus(): void;\n  abstract blur(): void;\n  abstract activate?(): void;\n\n  up?: FocusableItem | Observable<FocusableItem>;\n  down?: FocusableItem | Observable<FocusableItem>;\n  left?: FocusableItem | Observable<FocusableItem>;\n  right?: FocusableItem | Observable<FocusableItem>;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Type } from '@angular/core';\nimport { UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\nexport function customFocusableItemProvider<T>(implementation: Type<T>) {\n  return [\n    UNIQUE_ID_PROVIDER,\n    implementation,\n    {\n      provide: FocusableItem,\n      useExisting: implementation,\n    },\n  ];\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ComboboxModel } from './combobox.model';\n\nexport class SingleSelectComboboxModel<T> implements ComboboxModel<T> {\n  model: T;\n\n  containsItem(item: T): boolean {\n    return this.model === item;\n  }\n\n  select(item: T): void {\n    this.model = item;\n  }\n\n  unselect(item: T): void {\n    if (this.containsItem(item)) {\n      this.model = null;\n    }\n  }\n\n  isEmpty(): boolean {\n    return !this.model;\n  }\n\n  pop(): T {\n    const item = this.model;\n    this.model = null;\n    return item;\n  }\n\n  toString(displayField?: string): string {\n    if (!this.model) {\n      return '';\n    }\n    if (displayField && (this.model as any)[displayField]) {\n      return (this.model as any)[displayField];\n    } else {\n      return this.model.toString();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { SingleSelectComboboxModel } from './single-select-combobox.model';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport class PseudoFocusModel<T> extends SingleSelectComboboxModel<T> {\n  private _focusChanged: BehaviorSubject<T> = new BehaviorSubject(null);\n  get focusChanged(): Observable<T> {\n    return this._focusChanged.asObservable();\n  }\n\n  select(item: T): void {\n    if (this.model !== item) {\n      this.model = item;\n      this._focusChanged.next(item);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID, Renderer2, ApplicationRef, RendererFactory2 } from '@angular/core';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { OptionSelectionService } from './option-selection.service';\nimport { PseudoFocusModel } from '../model/pseudo-focus.model';\nimport { take } from 'rxjs/operators';\nimport { KeyCodes } from '../../../utils/enums/key-codes.enum';\nimport { keyValidator } from '../../../utils/focus/key-focus/util';\n\n@Injectable()\nexport class ComboboxFocusHandler<T> {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    rendererFactory: RendererFactory2,\n    private toggleService: ClrPopoverToggleService,\n    private selectionService: OptionSelectionService<T>,\n    private appRef: ApplicationRef,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.handleFocusSubscription();\n    // Direct renderer injection can be problematic and leads to failing tests at least\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  private renderer: Renderer2;\n\n  private handleFocusSubscription() {\n    this.toggleService.openChange.subscribe(open => {\n      if (!open) {\n        this.pseudoFocus.model = null;\n      }\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n    this.addFocusOnBlurListener(el);\n  }\n\n  private _listbox: HTMLElement;\n  get listbox() {\n    return this._listbox;\n  }\n  set listbox(el: HTMLElement) {\n    this._listbox = el;\n    this.addFocusOnBlurListener(el);\n  }\n\n  public pseudoFocus: PseudoFocusModel<OptionData<T>> = new PseudoFocusModel<OptionData<T>>();\n\n  private _textInput: HTMLElement;\n  get textInput() {\n    return this._textInput;\n  }\n  set textInput(el: HTMLElement) {\n    this._textInput = el;\n    this.renderer.listen(el, 'keydown', event => !this.handleTextInput(event));\n    this.addFocusOnBlurListener(el);\n  }\n\n  private moveFocusTo(direction: ArrowKeyDirection) {\n    let index = this.optionData.findIndex(option => option.equals(this.pseudoFocus.model));\n    if (direction === ArrowKeyDirection.UP) {\n      if (index === -1 || index === 0) {\n        index = this.optionData.length - 1;\n      } else {\n        index--;\n      }\n    } else if (direction === ArrowKeyDirection.DOWN) {\n      if (index === -1 || index === this.optionData.length - 1) {\n        index = 0;\n      } else {\n        index++;\n      }\n    }\n    this.pseudoFocus.select(this.optionData[index]);\n    if (this.pseudoFocus.model && this.pseudoFocus.model.el) {\n      this.pseudoFocus.model.el.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n    }\n  }\n\n  private openAndMoveTo(direction: ArrowKeyDirection) {\n    if (!this.toggleService.open) {\n      this.toggleService.openChange.pipe(take(1)).subscribe(open => {\n        if (open) {\n          this.moveFocusTo(direction);\n        }\n      });\n      this.toggleService.open = true;\n    } else {\n      this.moveFocusTo(direction);\n    }\n  }\n\n  // this service is only interested in keys that may move the focus\n  private handleTextInput(event: KeyboardEvent): boolean {\n    let preventDefault = false;\n    const key = keyValidator(event.key);\n    if (event) {\n      switch (key) {\n        case KeyCodes.Enter:\n          if (this.toggleService.open && this.pseudoFocus.model) {\n            if (this.selectionService.multiselectable) {\n              this.selectionService.toggle(this.pseudoFocus.model.value);\n            } else {\n              this.selectionService.select(this.pseudoFocus.model.value);\n            }\n            preventDefault = true;\n          }\n          break;\n        case KeyCodes.Space:\n          if (!this.toggleService.open) {\n            this.toggleService.open = true;\n            preventDefault = true;\n          }\n          break;\n        case KeyCodes.ArrowUp:\n          this.preventViewportScrolling(event);\n          this.openAndMoveTo(ArrowKeyDirection.UP);\n          preventDefault = true;\n          break;\n        case KeyCodes.ArrowDown:\n          this.preventViewportScrolling(event);\n          this.openAndMoveTo(ArrowKeyDirection.DOWN);\n          preventDefault = true;\n          break;\n        default:\n          // Any other keypress\n          if (\n            event.key !== KeyCodes.Tab &&\n            !(this.selectionService.multiselectable && event.key === KeyCodes.Backspace) &&\n            !this.toggleService.open\n          ) {\n            this.toggleService.open = true;\n          }\n          break;\n      }\n    }\n    return preventDefault;\n  }\n\n  private preventViewportScrolling(event: KeyboardEvent) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n  }\n\n  focusInput() {\n    if (this.textInput && isPlatformBrowser(this.platformId)) {\n      this.textInput.focus();\n    }\n  }\n\n  private addFocusOnBlurListener(el: HTMLElement) {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.listen(el, 'blur', event => {\n        if (this.focusOutOfComponent(event)) {\n          this.toggleService.open = false;\n          // Workaround for popover close-on-outside-click timing issues in Edge browser\n          this.appRef.tick();\n        }\n      });\n    }\n  }\n\n  private focusOutOfComponent(event: FocusEvent): boolean {\n    // event.relatedTarget is null in IE11. In that case we use document.activeElement\n    // which points to the element that becomes active as the blur event occurs on the input.\n    const target = (event.relatedTarget || document.activeElement) as Node;\n    return !(this.textInput.contains(target) || this.trigger.contains(target) || this.listbox.contains(target));\n  }\n\n  focusFirstActive() {\n    if (this.optionData.length > 0) {\n      if (this.selectionService.selectionModel.isEmpty()) {\n        this.pseudoFocus.select(this.optionData[0]);\n      } else {\n        let firstActive: T;\n        if (this.selectionService.multiselectable) {\n          firstActive = (this.selectionService.selectionModel.model as T[])[0];\n        } else {\n          firstActive = this.selectionService.selectionModel.model as T;\n        }\n        const activeProxy = this.optionData.find(option => option.value === firstActive);\n        this.pseudoFocus.select(activeProxy);\n      }\n    }\n  }\n\n  private optionData: OptionData<T>[] = [];\n\n  addOptionValues(options: OptionData<T>[]) {\n    this.optionData = options;\n  }\n}\n\nexport const COMBOBOX_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(ComboboxFocusHandler);\n\nexport class OptionData<T> {\n  id: string;\n  el: HTMLElement;\n  value: T;\n  constructor(id: string, value: T) {\n    this.id = id;\n    this.value = value;\n  }\n  equals(other: OptionData<T>): boolean {\n    if (!other) {\n      return false;\n    }\n    return this.id === other.id && this.value === other.value;\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostBinding, HostListener, Inject, Input, OnInit } from '@angular/core';\n\nimport { OptionSelectionService } from './providers/option-selection.service';\nimport { ComboboxFocusHandler, OptionData as OptionProxy } from './providers/combobox-focus-handler.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n@Component({\n  selector: 'clr-option',\n  template: `<ng-content></ng-content>\n    <span *ngIf=\"selected\" class=\"clr-sr-only\"> {{ commonStrings.keys.comboboxSelected }} </span> `,\n  providers: [UNIQUE_ID_PROVIDER],\n  host: {\n    '[class.clr-combobox-option]': 'true',\n    '[attr.role]': '\"option\"',\n    // Do not remove. Or click-selection will not work.\n    '[attr.tabindex]': '-1',\n    '[attr.id]': 'optionId',\n  },\n})\nexport class ClrOption<T> implements OnInit {\n  // A proxy with only the necessary data to be used for a11y and the focus handler service.\n  public optionProxy: OptionProxy<T> = new OptionProxy(null, null);\n\n  private _id: string;\n  @Input('id')\n  set optionId(id: string) {\n    this._id = id;\n    this.optionProxy.id = this._id;\n  }\n  get optionId() {\n    return this._id;\n  }\n\n  private _value: T;\n  @Input('clrValue')\n  set value(value: T) {\n    this._value = value;\n    this.optionProxy.value = value;\n  }\n  get value(): T {\n    return this._value;\n  }\n\n  @HostBinding('class.active')\n  get selected() {\n    return (\n      this.optionSelectionService.selectionModel && this.optionSelectionService.selectionModel.containsItem(this.value)\n    );\n  }\n\n  constructor(\n    public elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private focusHandler: ComboboxFocusHandler<T>,\n    private optionSelectionService: OptionSelectionService<T>,\n    @Inject(UNIQUE_ID) private autoId: string\n  ) {\n    this.optionProxy.el = this.elRef.nativeElement;\n  }\n\n  ngOnInit() {\n    if (!this._id) {\n      this._id = 'clr-option-' + this.autoId;\n      this.optionProxy.id = this._id;\n    }\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.optionSelectionService.multiselectable) {\n      this.optionSelectionService.toggle(this.value);\n    } else {\n      this.optionSelectionService.select(this.value);\n    }\n  }\n\n  @HostBinding('class.clr-focus')\n  get focusClass() {\n    return this.focusHandler.pseudoFocus.containsItem(this.optionProxy);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport const POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>('POPOVER_HOST_ANCHOR');\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n// TODO: if we find more components that could use this, consider moving this to utils\n@Injectable()\nexport class AriaService {\n  public ariaLabelledBy: string;\n  public ariaControls: string;\n  public ariaOwns: string;\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Input,\n  Optional,\n  QueryList,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { POPOVER_HOST_ANCHOR } from '../../popover/common/popover-host-anchor.token';\nimport { OptionSelectionService } from './providers/option-selection.service';\nimport { IF_ACTIVE_ID } from '../../utils/conditional/if-active.service';\nimport { AriaService } from '../../utils/aria/aria.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { ClrOption } from './option';\nimport { ComboboxFocusHandler } from './providers/combobox-focus-handler.service';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nlet nbOptionsComponents = 0;\n\n@Component({\n  selector: 'clr-options',\n  template: `\n    <div *ngIf=\"optionSelectionService.loading\" class=\"clr-combobox-options-loading\">\n      <clr-spinner clrInline>\n        {{ commonStrings.keys.loading }}\n      </clr-spinner>\n      <span class=\"clr-combobox-options-text\">\n        {{ searchText(optionSelectionService.currentInput) }}\n      </span>\n    </div>\n\n    <!-- Rendered if data set is empty -->\n    <div *ngIf=\"emptyOptions\">\n      <span class=\"clr-combobox-options-empty-text\">\n        {{ commonStrings.keys.comboboxNoResults }}\n      </span>\n    </div>\n\n    <!--Option Groups and Options will be projected here-->\n    <ng-content></ng-content>\n  `,\n  providers: [{ provide: LoadingListener, useExisting: ClrOptions }],\n  host: {\n    '[class.clr-combobox-options]': 'true',\n    '[attr.role]': '\"listbox\"',\n    '[id]': 'optionsId',\n  },\n})\nexport class ClrOptions<T> implements AfterViewInit, LoadingListener, OnDestroy {\n  public loading = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    public optionSelectionService: OptionSelectionService<T>,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private focusHandler: ComboboxFocusHandler<T>,\n    private toggleService: ClrPopoverToggleService,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(DOCUMENT) private document: any\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-options should only be used inside of a clr-combobox');\n    }\n\n    if (!this.optionsId) {\n      this.optionsId = 'clr-options-' + nbOptionsComponents++;\n    }\n  }\n\n  public searchText(input: string) {\n    return this.commonStrings.parse(this.commonStrings.keys.comboboxSearching, { INPUT: input });\n  }\n\n  /**\n   * Tests if the list of options is empty, meaning it doesn't contain any items\n   */\n  public get emptyOptions() {\n    return !this.optionSelectionService.loading && this.items.length === 0;\n  }\n\n  @Input('id')\n  set optionsId(id: string) {\n    this.ariaService.ariaControls = id;\n    this.ariaService.ariaOwns = id;\n  }\n\n  get optionsId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  _items: QueryList<ClrOption<T>>;\n  @ContentChildren(ClrOption)\n  set items(items: QueryList<ClrOption<T>>) {\n    this._items = items;\n    this.focusHandler.addOptionValues(this._items.map(option => option.optionProxy));\n  }\n\n  get items(): QueryList<ClrOption<T>> {\n    return this._items;\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  ngAfterViewInit() {\n    this.focusHandler.listbox = this.el.nativeElement;\n\n    this.subscriptions.push(\n      fromEvent(this.document, 'scroll', { capture: true }).subscribe(event => {\n        if (\n          this.toggleService.open &&\n          (event as Event).target !== this.el.nativeElement &&\n          (event as Event).target !== this.focusHandler.textInput\n        ) {\n          this.toggleService.open = false;\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ComboboxContainerService {\n  labelOffset = 0;\n  labelText: string;\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  Optional,\n  ElementRef,\n  ViewChild,\n  ContentChild,\n  AfterViewInit,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ComboboxContainerService } from './providers/combobox-container.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { ClrLabel } from '../common/label';\nimport { IfControlStateService } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-combobox-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\" #controlContainer>\n      <ng-content select=\"clr-combobox\"></ng-content>\n      <cds-icon\n        *ngIf=\"showInvalid\"\n        class=\"clr-validate-icon\"\n        status=\"danger\"\n        shape=\"exclamation-circle\"\n        aria-hidden=\"true\"\n      ></cds-icon>\n      <cds-icon\n        *ngIf=\"showValid\"\n        class=\"clr-validate-icon\"\n        status=\"success\"\n        shape=\"check-circle\"\n        aria-hidden=\"true\"\n      ></cds-icon>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"showHelper\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"showInvalid\"></ng-content>\n      <ng-content select=\"clr-control-success\" *ngIf=\"showValid\"></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-combobox-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfControlStateService, NgControlService, ControlIdService, ControlClassService, ComboboxContainerService],\n})\nexport class ClrComboboxContainer extends ClrAbstractContainer implements AfterContentInit, AfterViewInit {\n  @ViewChild('controlContainer') controlContainer: ElementRef;\n  @ContentChild(ClrLabel) label: ClrLabel;\n\n  constructor(\n    ifControlStateService: IfControlStateService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    private containerService: ComboboxContainerService,\n    private el: ElementRef\n  ) {\n    super(ifControlStateService, layoutService, controlClassService, ngControlService);\n  }\n\n  ngAfterContentInit() {\n    if (this.label) {\n      this.containerService.labelText = this.label.labelText;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.containerService.labelOffset =\n      this.controlContainer.nativeElement.offsetHeight - this.el.nativeElement.offsetHeight;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrOptionSelected]' })\nexport class ClrOptionSelected<T> {\n  constructor(public template: TemplateRef<{ $implicit: T }>) {}\n\n  @Input('clrOptionSelected') selected: T;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { isObservable, of } from 'rxjs';\n\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\n\n@Injectable()\nexport class FocusService {\n  constructor(private renderer: Renderer2) {}\n\n  private _unlistenFuncs: Function[] = [];\n  private _current: FocusableItem;\n  public get current() {\n    return this._current;\n  }\n\n  reset(first: FocusableItem) {\n    this._current = first;\n  }\n\n  listenToArrowKeys(el: HTMLElement) {\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowup', () => !this.move(ArrowKeyDirection.UP)));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowdown', () => !this.move(ArrowKeyDirection.DOWN)));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowleft', () => !this.move(ArrowKeyDirection.LEFT)));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowright', () => !this.move(ArrowKeyDirection.RIGHT)));\n  }\n\n  registerContainer(el: HTMLElement) {\n    this.renderer.setAttribute(el, 'tabindex', '0');\n    this.listenToArrowKeys(el);\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.space', () => !this.activateCurrent()));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.enter', () => !this.activateCurrent()));\n  }\n\n  moveTo(item: FocusableItem) {\n    /**\n     * Make sure that item is not undefined,\n     * This is safety net in the case that someone sometime decide to\n     * call this method without having FocusableItem.\n     */\n    if (item === undefined) {\n      return;\n    }\n\n    if (this.current) {\n      this.current.blur();\n    }\n    item.focus();\n    this._current = item;\n  }\n\n  move(direction: ArrowKeyDirection): boolean {\n    let moved = false;\n    if (this.current) {\n      const next = this.current[direction];\n      if (next) {\n        // Turning the value into an Observable isn't great, but it's the fastest way to avoid code duplication.\n        // If performance ever matters for this, we can refactor using additional private methods.\n        const nextObs = isObservable(next) ? next : of(next);\n        nextObs.subscribe(item => {\n          if (item) {\n            this.moveTo(item);\n            moved = true;\n          }\n        });\n      }\n    }\n    return moved;\n  }\n\n  activateCurrent() {\n    if (this.current && this.current.activate) {\n      this.current.activate();\n      return true;\n    }\n    return false;\n  }\n\n  public detachListeners() {\n    this._unlistenFuncs.forEach(unlisten => unlisten());\n  }\n}\n\nexport function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2) {\n  return existing || new FocusService(renderer);\n}\n\nexport const FOCUS_SERVICE_PROVIDER = {\n  provide: FocusService,\n  useFactory: clrFocusServiceFactory,\n  deps: [[new Optional(), new SkipSelf(), FocusService], Renderer2],\n};\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  HostListener,\n  PLATFORM_ID,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n  Injector,\n  Self,\n  Optional,\n  Input,\n  Output,\n  EventEmitter,\n  AfterContentInit,\n  Inject,\n} from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\n\nimport { POPOVER_HOST_ANCHOR } from '../../popover/common/popover-host-anchor.token';\n\nimport { OptionSelectionService } from './providers/option-selection.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrComboboxContainer } from './combobox-container';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\nimport { ClrOptionSelected } from './option-selected.directive';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nimport { AriaService } from '../../utils/aria/aria.service';\nimport { IF_ACTIVE_ID_PROVIDER } from '../../utils/conditional/if-active.service';\nimport { MultiSelectComboboxModel } from './model/multi-select-combobox.model';\nimport { SingleSelectComboboxModel } from './model/single-select-combobox.model';\nimport { COMBOBOX_FOCUS_HANDLER_PROVIDER, ComboboxFocusHandler } from './providers/combobox-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\nimport { BACKSPACE } from '../../utils/key-codes/key-codes';\n\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ComboboxContainerService } from './providers/combobox-container.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { ComboboxModel } from './model/combobox.model';\nimport { IfControlStateService, CONTROL_STATE } from '../common/if-control-state/if-control-state.service';\n\n@Component({\n  selector: 'clr-combobox',\n  templateUrl: './combobox.html',\n  providers: [\n    ClrPopoverToggleService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    OptionSelectionService,\n    { provide: LoadingListener, useExisting: ClrCombobox },\n    IF_ACTIVE_ID_PROVIDER,\n    AriaService,\n    FOCUS_SERVICE_PROVIDER,\n    COMBOBOX_FOCUS_HANDLER_PROVIDER,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n  ],\n  host: {\n    '[class.aria-required]': 'true',\n    '[class.clr-combobox]': 'true',\n    '[class.clr-combobox-disabled]': 'control?.disabled',\n  },\n})\nexport class ClrCombobox<T> extends WrappedFormControl<ClrComboboxContainer>\n  implements ControlValueAccessor, LoadingListener, AfterContentInit {\n  @ViewChild('textboxInput') textbox: ElementRef;\n  @ViewChild('trigger') trigger: ElementRef;\n  @ContentChild(ClrOptionSelected) optionSelected: ClrOptionSelected<T>;\n\n  private onChangeCallback: (model: T | T[]) => any;\n\n  protected index = 1;\n\n  invalid = false;\n  focused = false;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    public control: NgControl,\n    protected renderer: Renderer2,\n    protected el: ElementRef,\n    public optionSelectionService: OptionSelectionService<T>,\n    public commonStrings: ClrCommonStringsService,\n    private toggleService: ClrPopoverToggleService,\n    private positionService: ClrPopoverPositionService,\n    @Optional() private controlStateService: IfControlStateService,\n    @Optional() private containerService: ComboboxContainerService,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private ariaService: AriaService,\n    private focusHandler: ComboboxFocusHandler<T>\n  ) {\n    super(vcr, ClrComboboxContainer, injector, control, renderer, el);\n    if (control) {\n      control.valueAccessor = this;\n    }\n    // default to SingleSelectComboboxModel, in case the optional input [ClrMulti] isn't used\n    this.optionSelectionService.selectionModel = new SingleSelectComboboxModel<T>();\n    this.updateControlValue();\n  }\n\n  focusedPill: any;\n\n  // Override the id of WrappedFormControl, as we want to move it to the embedded input.\n  // Otherwise the label/component connection does not work and screen readers do not read the label.\n  get id() {\n    return this.controlIdService.id + '-combobox';\n  }\n\n  inputId(): string {\n    return this.controlIdService.id;\n  }\n\n  get openState(): boolean {\n    return this.toggleService.open;\n  }\n\n  private _searchText = '';\n\n  set searchText(text: string) {\n    // if input text has changed since last time, fire a change event so application can react to it\n    if (text !== this._searchText) {\n      this._searchText = text;\n      this.clrInputChange.emit(this.searchText);\n      this.optionSelectionService.currentInput = this.searchText;\n    }\n  }\n\n  get searchText(): string {\n    return this._searchText;\n  }\n\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.optionSelectionService.loading = state === ClrLoadingState.LOADING;\n    this.positionService.realign();\n    if (state !== ClrLoadingState.LOADING && isPlatformBrowser(this.platformId)) {\n      setTimeout(() => {\n        this.focusFirstActive();\n      });\n    }\n  }\n\n  private get disabled() {\n    return this.control && this.control.disabled;\n  }\n\n  unselect(item: T) {\n    if (!this.disabled) {\n      this.optionSelectionService.unselect(item);\n    }\n  }\n\n  @Input('placeholder') placeholder = '';\n\n  @Input('clrMulti')\n  set multiSelect(value: boolean) {\n    if (value) {\n      this.optionSelectionService.selectionModel = new MultiSelectComboboxModel<T>();\n    } else {\n      // in theory, setting this again should not cause errors even though we already set it in constructor,\n      // since the initial call to writeValue (caused by [ngModel] input) should happen after this\n      this.optionSelectionService.selectionModel = new SingleSelectComboboxModel<T>();\n    }\n    this.updateControlValue();\n  }\n\n  get multiSelect() {\n    return this.optionSelectionService.multiselectable;\n  }\n\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get ariaOwns(): string {\n    return this.ariaService.ariaOwns;\n  }\n\n  get ariaDescribedBySelection(): string {\n    return 'selection-' + this.id;\n  }\n\n  get displayField(): string {\n    return this.optionSelectionService.displayField;\n  }\n\n  onBlur() {\n    this.onTouchedCallback();\n    if (this.control.control.updateOn === 'blur') {\n      this.control.control.updateValueAndValidity();\n    }\n    this.focused = false;\n  }\n\n  onFocus() {\n    this.focused = true;\n  }\n\n  getSelectionAriaLabel() {\n    if (this.containerService && this.containerService.labelText) {\n      return `${this.containerService.labelText} ${this.commonStrings.keys.comboboxSelection}`;\n    }\n    return this.commonStrings.keys.comboboxSelection;\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyUp(event: KeyboardEvent) {\n    // if BACKSPACE in multiselect mode, delete the last pill if text is empty\n    if (event.keyCode === BACKSPACE && this.multiSelect && this._searchText.length === 0) {\n      const multiModel: T[] = this.optionSelectionService.selectionModel.model as T[];\n      if (multiModel && multiModel.length > 0) {\n        const lastItem: T = multiModel[multiModel.length - 1];\n        this.control.control.markAsTouched();\n        this.optionSelectionService.unselect(lastItem);\n      }\n    }\n  }\n\n  @Output('clrInputChange') public clrInputChange: EventEmitter<string> = new EventEmitter<string>(false);\n\n  @Output('clrOpenChange') public clrOpenChange: Observable<boolean> = this.toggleService.openChange;\n\n  // This output should be used to set up a live region using aria-live and populate it with updates that reflect each combobox change\n  @Output('clrSelectionChange') public clrSelectionChange: Observable<ComboboxModel<T>> = this.optionSelectionService\n    .selectionChanged;\n\n  private initializeSubscriptions(): void {\n    this.subscriptions.push(\n      this.optionSelectionService.selectionChanged.subscribe((newSelection: ComboboxModel<T>) => {\n        this.updateInputValue(newSelection);\n        if (!this.multiSelect && newSelection && !newSelection.isEmpty()) {\n          this.toggleService.open = false;\n        }\n        this.updateControlValue();\n      })\n    );\n\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(open => {\n        if (open) {\n          this.focusFirstActive();\n        }\n        if (this.multiSelect) {\n          this.searchText = '';\n        } else {\n          this.searchText = this.getDisplayNames(this.optionSelectionService.selectionModel.model)[0];\n        }\n      })\n    );\n\n    this.subscriptions.push(\n      this.toggleService.popoverAligned.subscribe(popoverNode => {\n        // When used outside a combobox container\n        if (!this.containerService) {\n          return;\n        }\n        const popover: HTMLElement = popoverNode as HTMLElement;\n        // Update position if popover hides the label\n        if (popover.getBoundingClientRect().top < this.el.nativeElement.getBoundingClientRect().top) {\n          this.renderer.setStyle(popoverNode, 'top', `${popover.offsetTop + this.containerService.labelOffset}px`);\n        }\n      })\n    );\n\n    if (this.controlStateService) {\n      this.subscriptions.push(\n        this.controlStateService.statusChanges.subscribe(invalid => {\n          this.invalid = invalid === CONTROL_STATE.INVALID;\n        })\n      );\n    }\n  }\n\n  focusFirstActive() {\n    this.focusHandler.focusFirstActive();\n  }\n\n  private updateInputValue(model: ComboboxModel<T>) {\n    if (!this.multiSelect) {\n      this.searchText = model.model ? this.getDisplayNames(model.model)[0] : '';\n      if (this.searchText) {\n        this.optionSelectionService.currentInput = this.searchText;\n      }\n    }\n  }\n\n  private updateControlValue() {\n    if (this.onChangeCallback) {\n      this.onChangeCallback(this.optionSelectionService.selectionModel.model);\n    }\n  }\n\n  // ControlValueAccessor implementation methods\n  writeValue(value: T | T[]): void {\n    this.optionSelectionService.selectionModel.model = value;\n    this.updateInputValue(this.optionSelectionService.selectionModel);\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChangeCallback = onChange;\n  }\n\n  getActiveDescendant() {\n    const model = this.focusHandler.pseudoFocus.model;\n    return model ? model.id : null;\n  }\n\n  private onTouchedCallback: () => any;\n\n  registerOnTouched(onTouched: any): void {\n    this.onTouchedCallback = onTouched;\n  }\n\n  setDisabledState(): void {\n    // do nothing\n  }\n\n  focusInput() {\n    this.focusHandler.focusInput();\n  }\n\n  private getDisplayNames(model: T | T[]) {\n    if (this.displayField) {\n      if (!Array.isArray(model)) {\n        model = [model];\n      }\n      return model.map(item => (item ? (item as any)[this.displayField] : null));\n    }\n    return [this.optionSelectionService.selectionModel.model];\n  }\n\n  // Lifecycle methods\n  ngAfterContentInit() {\n    this.initializeSubscriptions();\n\n    // Initialize with preselected value\n    if (!this.optionSelectionService.selectionModel.isEmpty()) {\n      this.updateInputValue(this.optionSelectionService.selectionModel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focusHandler.textInput = this.textbox.nativeElement;\n    this.focusHandler.trigger = this.trigger.nativeElement;\n    // The text input is the actual element we are wrapping\n    // This assignment is needed by the wrapper, so it can set\n    // the aria properties on the input element, not on the component.\n    this.el = this.textbox;\n    super.ngAfterViewInit();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { OptionSelectionService } from './providers/option-selection.service';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\n\n@Directive({\n  selector: '[clrOptionItems][clrOptionItemsOf]',\n})\nexport class ClrOptionItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private filteredItems: T[];\n  private subscriptions: Subscription[] = [];\n  private filter = '';\n  private _filterField: string;\n  private differ: IterableDiffer<T> | null = null;\n\n  @Input('clrOptionItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : [];\n    this.updateItems();\n  }\n\n  @Input('clrOptionItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  @Input('clrOptionItemsField')\n  public set field(field: string) {\n    this._filterField = field;\n    this.optionService.displayField = field;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private optionService: OptionSelectionService<T>,\n    private positionService: ClrPopoverPositionService,\n    private vcr: ViewContainerRef\n  ) {\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      optionService.inputChanged.subscribe(filter => {\n        this.filter = filter;\n        this.updateItems();\n      })\n    );\n  }\n\n  private updateItems() {\n    if (!this._rawItems || this.filter === undefined || this.filter === null) {\n      return;\n    }\n    if (this._filterField) {\n      this.filteredItems = this._rawItems.filter(item => {\n        const objValue = (item as any)[this._filterField];\n        return objValue !== undefined\n          ? objValue.toString().toLowerCase().indexOf(this.filter.toLowerCase().toString()) > -1\n          : false;\n      });\n    } else {\n      // Filter by all item object values\n      this.filteredItems = this._rawItems.filter(item => {\n        if (typeof item !== 'object') {\n          return item.toString().toLowerCase().indexOf(this.filter.toString().toLowerCase()) > -1;\n        }\n        const objValues = Object.values(item).filter(value => {\n          return value.toString().toLowerCase().indexOf(this.filter.toString().toLowerCase()) > -1;\n        });\n        return objValues.length > 0;\n      });\n    }\n    this.iterableProxy.ngForOf = this.filteredItems;\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this.filteredItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this.filteredItems);\n      if (changes) {\n        this.iterableProxy.ngDoCheck();\n        this.positionService.realign();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n@Component({\n  selector: 'clr-spinner',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[attr.aria-busy]': 'true',\n  },\n})\nexport class ClrSpinner {\n  /**\n   * Default class for all spinners. This class is always true\n   */\n  @HostBinding('class.spinner')\n  get spinnerClass() {\n    return true;\n  }\n\n  // Style\n  private _inline: boolean;\n  @HostBinding('class.spinner-inline')\n  get inlineClass() {\n    return this._inline;\n  }\n\n  @Input('clrInline')\n  set clrInline(value: boolean | string) {\n    this._inline = isBooleanAttributeSet(value);\n  }\n\n  private _inverse: boolean;\n  @HostBinding('class.spinner-inverse')\n  get inverseClass() {\n    return this._inverse;\n  }\n\n  @Input('clrInverse')\n  set clrInverse(value: boolean | string) {\n    this._inverse = isBooleanAttributeSet(value);\n  }\n\n  // Size\n  /**\n   * By default all spinners are Large. (spinner-lg)\n   * To change the size you need to use set clrSmall or clrMedium to TRUE/\n   */\n\n  /**\n   * Small\n   */\n  private _small: boolean;\n  @HostBinding('class.spinner-sm')\n  get smallClass() {\n    return this._small;\n  }\n\n  @Input('clrSmall')\n  set clrSmall(value: boolean | string) {\n    this._small = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * When clrSmall & clrMedium are set both to true.\n   * The CSS with high priority will be small - so medium size will be ignored.\n   *\n   * For this reason if clrSmall is set we won't add clrMedium class.\n   *\n   * NOTE: This is dictated by the CSS rules.\n   * DON'T USE clrSmall & clrMedium to toggle classes. This could change without notice.\n   *\n   * Also there is no logical need to have both of them set to TRUE or FALSE.\n   */\n  private _medium: boolean;\n  @HostBinding('class.spinner-md')\n  get mediumClass() {\n    if (this._small) {\n      return false;\n    }\n    return this._medium;\n  }\n\n  @Input('clrMedium')\n  set clrMedium(value: boolean | string) {\n    this._medium = isBooleanAttributeSet(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrFocusDirection {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  BOTH = 'both',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrSpinner } from './spinner';\n\nexport const CLR_SPINNER_DIRECTIVES: Type<any>[] = [ClrSpinner];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_SPINNER_DIRECTIVES],\n  exports: [CLR_SPINNER_DIRECTIVES],\n})\nexport class ClrSpinnerModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[clrKeyFocusItem]',\n})\nexport class ClrKeyFocusItem {\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: any) {}\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  QueryList,\n  ElementRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrFocusDirection } from './enums/focus-direction.enum';\nimport { FocusableItem } from './interfaces';\n\nimport { KeyCodes } from './../../enums/key-codes.enum';\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { preventArrowKeyScroll, keyValidator } from './util';\n\n@Component({\n  selector: '[clrKeyFocus]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrKeyFocus {\n  constructor(private elementRef: ElementRef) {}\n  @Input('clrDirection') direction = ClrFocusDirection.VERTICAL;\n  @Input('clrFocusOnLoad') focusOnLoad = false;\n  @Output('clrFocusChange') private focusChange: EventEmitter<number> = new EventEmitter<number>();\n  @ContentChildren(ClrKeyFocusItem, { descendants: true })\n  protected clrKeyFocusItems: QueryList<ClrKeyFocusItem>;\n\n  private _focusableItems: Array<FocusableItem>;\n  @Input('clrKeyFocus')\n  set focusableItems(elements: Array<FocusableItem>) {\n    // We accept a list of focusable elements (HTMLElements or existing Directives) or auto query for clrKeyFocusItem\n    // We accept a list reference in the cases where we cannot use ContentChildren to query\n    // ContentChildren can be unavailable if content is projected outside the scope of the component (see tabs).\n    if (elements && elements.length) {\n      this._focusableItems = elements;\n      this.initializeFocus();\n    }\n  }\n  get focusableItems() {\n    if (this._focusableItems) {\n      return this._focusableItems;\n    } else if (this.clrKeyFocusItems) {\n      return this.clrKeyFocusItems.toArray();\n    }\n    return [];\n  }\n\n  get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  private _current = 0;\n\n  get current() {\n    return this._current;\n  }\n\n  set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n    }\n  }\n\n  get currentItem() {\n    return this.focusableItems[this._current];\n  }\n\n  get currentItemElement(): HTMLElement {\n    return this.currentItem.nativeElement ? this.currentItem.nativeElement : (this.currentItem as HTMLElement);\n  }\n\n  focusCurrent() {\n    this.currentItem.focus();\n    this.focusChange.next(this._current);\n  }\n\n  moveTo(position: number) {\n    if (this.positionInRange(position)) {\n      this.current = position;\n      this.focusCurrent();\n    }\n  }\n\n  protected subscriptions: Subscription[] = [];\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForItemUpdates());\n    this.initializeFocus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // Make sure event was originated on the current item's element\n    if (this.currentItemElement !== event.target) {\n      const position = this.getItemPosition(event.target as HTMLElement);\n      if (this.positionInRange(position)) {\n        this.current = position;\n      }\n    }\n\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.moveTo(this.current - 1);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.moveTo(this.current + 1);\n    } else if (event.code === KeyCodes.Home) {\n      this.moveTo(0);\n    } else if (event.code === KeyCodes.End) {\n      this.moveTo(this.focusableItems.length - 1);\n    }\n\n    preventArrowKeyScroll(event);\n  }\n\n  @HostListener('click', ['$event'])\n  setClickedItemCurrent(event: any) {\n    const position = this.getItemPosition(event.target);\n\n    if (position > -1) {\n      this.moveTo(position);\n    }\n  }\n\n  private getItemPosition(item: HTMLElement) {\n    if (this._focusableItems) {\n      return this.focusableItems.indexOf(item);\n    } else {\n      return this.focusableItems.map(_item => _item.nativeElement).indexOf(item);\n    }\n  }\n\n  protected positionInRange(position: number) {\n    return position >= 0 && position < this.focusableItems.length;\n  }\n\n  protected currentFocusIsNotFirstItem() {\n    return this._current - 1 >= 0;\n  }\n\n  protected currentFocusIsNotLastItem() {\n    return this._current + 1 < this.focusableItems.length;\n  }\n\n  protected initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      // It is possible that the focus was on an element, whose index is no longer available.\n      // This can happen when some of the focusable elements are being removed.\n      // In such cases, the new focus is initialized on the last focusable element.\n      if (this._current >= this.focusableItems.length) {\n        this._current = this.focusableItems.length - 1;\n      }\n\n      if (this.focusOnLoad) {\n        this.currentItem.focus();\n        this.focusChange.next();\n      }\n    }\n  }\n\n  private listenForItemUpdates() {\n    return this.clrKeyFocusItems.changes.subscribe(() => {\n      this.initializeFocus();\n    });\n  }\n\n  protected nextKeyPressed(event: KeyboardEvent) {\n    const key = keyValidator(event.key);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return key === KeyCodes.ArrowDown;\n      case ClrFocusDirection.HORIZONTAL:\n        return key === KeyCodes.ArrowRight;\n      case ClrFocusDirection.BOTH:\n        return key === KeyCodes.ArrowDown || key === KeyCodes.ArrowRight;\n      default:\n        return false;\n    }\n  }\n\n  protected prevKeyPressed(event: KeyboardEvent) {\n    const key = keyValidator(event.key);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return key === KeyCodes.ArrowUp;\n      case ClrFocusDirection.HORIZONTAL:\n        return key === KeyCodes.ArrowLeft;\n      case ClrFocusDirection.BOTH:\n        return key === KeyCodes.ArrowUp || key === KeyCodes.ArrowLeft;\n      default:\n        return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, Renderer2, Input } from '@angular/core';\n\nimport { KeyCodes } from '../../../utils/enums/key-codes.enum';\nimport { ClrKeyFocus } from './key-focus';\nimport { FocusableItem } from './interfaces';\n\n@Component({\n  selector: '[clrRovingTabindex]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrRovingTabindex extends ClrKeyFocus {\n  constructor(elementRef: ElementRef, private renderer: Renderer2) {\n    super(elementRef);\n  }\n\n  // Proxy the input, as the selector name from parent class will still be \"clrKeyFocus\".\n  @Input('clrRovingTabindex')\n  set rovingIndexItems(elements: Array<FocusableItem>) {\n    this.focusableItems = elements;\n  }\n\n  get rovingIndexItems(): Array<FocusableItem> {\n    return this.focusableItems;\n  }\n\n  private disabled = false;\n\n  @Input('clrRovingTabindexDisabled')\n  set rovingTabindexDisabled(disabled: boolean) {\n    this.disabled = disabled;\n    if (this.currentItem) {\n      this.setTabindex(this.currentItem, disabled ? -1 : 0);\n    }\n  }\n\n  handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.updateTabindex(this.current - 1);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.updateTabindex(this.current + 1);\n    } else if (event.code === KeyCodes.Home) {\n      this.updateTabindex(0);\n    } else if (event.code === KeyCodes.End) {\n      this.updateTabindex(this.focusableItems.length - 1);\n    }\n    super.handleKeyboardEvent(event);\n  }\n\n  setClickedItemCurrent(event: any) {\n    let position: number;\n\n    if (this.focusableItems[0].nativeElement) {\n      position = this.focusableItems.map(item => item.nativeElement).indexOf(event.target);\n    } else {\n      position = this.focusableItems.indexOf(event.target);\n    }\n\n    if (position > -1) {\n      this.updateTabindex(position);\n    }\n    super.setClickedItemCurrent(event);\n  }\n\n  protected initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      this.focusableItems.forEach(item => {\n        this.setTabindex(item, -1);\n      });\n\n      // It is possible that the focus was on an element, whose index is no longer available.\n      // This can happen when some of the focusable elements are being removed.\n      // In such cases, the new focus is initialized on the last focusable element.\n      if (this.current >= this.focusableItems.length) {\n        this.current = this.focusableItems.length - 1;\n      }\n      if (!this.disabled && this.currentItem) {\n        this.setTabindex(this.currentItem, 0);\n      }\n    }\n    super.initializeFocus();\n  }\n\n  private updateTabindex(newIndex: number) {\n    this.setTabindex(this.currentItem, -1);\n    this.setTabindex(this.focusableItems[newIndex], 0);\n  }\n\n  private setTabindex(item: FocusableItem, value: number) {\n    if (item instanceof HTMLElement) {\n      this.renderer.setAttribute(item, 'tabindex', value.toString());\n    } else {\n      this.renderer.setAttribute(item.nativeElement, 'tabindex', value.toString());\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrKeyFocus } from './key-focus';\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { ClrRovingTabindex } from './roving-tabindex';\n\nconst KEY_FOCUS_DIRECTIVES: Type<any>[] = [ClrKeyFocus, ClrRovingTabindex, ClrKeyFocusItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [KEY_FOCUS_DIRECTIVES],\n  exports: [KEY_FOCUS_DIRECTIVES],\n})\nexport class ClrKeyFocusModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrOption } from './option';\nimport { ClrOptions } from './options';\nimport { ClrCombobox } from './combobox';\nimport { ClrComboboxContainer } from './combobox-container';\nimport { ClrOptionSelected } from './option-selected.directive';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrOptionItems } from './option-items.directive';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\nimport { angleIcon, checkCircleIcon, ClarityIcons, exclamationCircleIcon, windowCloseIcon } from '@cds/core/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ClrIconModule,\n    ClrKeyFocusModule,\n    ClrCommonFormsModule,\n    ClrConditionalModule,\n    ClrPopoverModuleNext,\n    ClrSpinnerModule,\n  ],\n  declarations: [ClrCombobox, ClrComboboxContainer, ClrOptions, ClrOption, ClrOptionSelected, ClrOptionItems],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCombobox,\n    ClrComboboxContainer,\n    ClrOptions,\n    ClrOption,\n    ClrOptionSelected,\n    ClrConditionalModule,\n    ClrOptionItems,\n  ],\n})\nexport class ClrComboboxModule {\n  constructor() {\n    ClarityIcons.addIcons(exclamationCircleIcon, checkCircleIcon, angleIcon, windowCloseIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrCheckboxModule } from './checkbox/checkbox.module';\nimport { ClrCommonFormsModule } from './common/common.module';\nimport { ClrDatepickerModule } from './datepicker/datepicker.module';\nimport { ClrInputModule } from './input/input.module';\nimport { ClrPasswordModule } from './password/password.module';\nimport { ClrRadioModule } from './radio/radio.module';\nimport { ClrSelectModule } from './select/select.module';\nimport { ClrTextareaModule } from './textarea/textarea.module';\nimport { ClrRangeModule } from './range/range.module';\nimport { ClrDatalistModule } from './datalist/datalist.module';\nimport { ClrComboboxModule } from './combobox/combobox.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCheckboxModule,\n    ClrComboboxModule,\n    ClrDatepickerModule,\n    ClrInputModule,\n    ClrPasswordModule,\n    ClrRadioModule,\n    ClrSelectModule,\n    ClrTextareaModule,\n    ClrRangeModule,\n    ClrDatalistModule,\n  ],\n})\nexport class ClrFormsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoading } from './loading';\n\nexport const CLR_LOADING_DIRECTIVES: Type<any>[] = [ClrLoading];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_LOADING_DIRECTIVES], exports: [CLR_LOADING_DIRECTIVES] })\nexport class ClrLoadingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({ selector: '[clrOutsideClick]' })\nexport class OutsideClick {\n  constructor(private el: ElementRef) {}\n\n  @Input('clrStrict') strict = false;\n\n  @Output('clrOutsideClick') outsideClick = new EventEmitter<any>(false);\n\n  @HostListener('document:click', ['$event'])\n  documentClick(event: MouseEvent) {\n    const target = event.target; // Get the element in the DOM on which the mouse was clicked\n    const host = this.el.nativeElement; // Get the current actionMenu native HTML element\n\n    if (target === host) {\n      return;\n    }\n    if (!this.strict && host.contains(target)) {\n      return;\n    }\n    this.outsideClick.emit(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { OutsideClick } from './outside-click';\n\nexport * from './outside-click';\n\nexport const OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OUSTIDE_CLICK_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES] })\nexport class ClrOutsideClickModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomAdapter {\n  userDefinedWidth(element: HTMLElement): number {\n    element.classList.add('datagrid-cell-width-zero');\n    const userDefinedWidth = this.clientRect(element).width;\n    element.classList.remove('datagrid-cell-width-zero');\n    return userDefinedWidth;\n  }\n\n  scrollBarWidth(element: any) {\n    return element.offsetWidth - element.clientWidth;\n  }\n\n  scrollWidth(element: any) {\n    return element.scrollWidth || 0;\n  }\n\n  computedHeight(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('height'), 10);\n  }\n\n  clientRect(element: any): ClientRect {\n    const elementClientRect = element.getBoundingClientRect();\n    return {\n      top: parseInt(elementClientRect.top, 10),\n      bottom: parseInt(elementClientRect.bottom, 10),\n      left: parseInt(elementClientRect.left, 10),\n      right: parseInt(elementClientRect.right, 10),\n      width: parseInt(elementClientRect.width, 10),\n      height: parseInt(elementClientRect.height, 10),\n    };\n  }\n\n  minWidth(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('min-width'), 10);\n  }\n\n  focus(element: any): void {\n    element.focus();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport enum DragEventType {\n  DRAG_START,\n  DRAG_MOVE,\n  DRAG_END,\n  DRAG_ENTER,\n  DRAG_LEAVE,\n  DROP,\n}\n\nexport interface DragPointPosition {\n  pageX: number;\n  pageY: number;\n  moveX?: number;\n  moveY?: number;\n}\n\nexport interface DragEventInterface<T> {\n  type: DragEventType;\n  group?: string | string[];\n  ghostElement?: any;\n  dragPosition: DragPointPosition;\n  dragDataTransfer?: T;\n  // For default ghosts, this dropPointPosition denotes the center point of the ghost element.\n  // This center point is used to determine whether the ghost is over droppable elements or not.\n  dropPointPosition?: DragPointPosition;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DragEventInterface, DragPointPosition } from './interfaces/drag-event.interface';\n\n// This class is used to convert an internal event\n// to an external event to be emitted.\nexport class ClrDragEvent<T> {\n  public dragPosition: DragPointPosition;\n  public group: string | string[];\n  public dragDataTransfer: T;\n  public dropPointPosition: DragPointPosition;\n\n  constructor(dragEvent: DragEventInterface<T>) {\n    this.dragPosition = dragEvent.dragPosition;\n    this.group = dragEvent.group;\n    this.dragDataTransfer = dragEvent.dragDataTransfer;\n    this.dropPointPosition = dragEvent.dropPointPosition;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class DragAndDropEventBusService<T> {\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private drop: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dropped(): Observable<DragEventInterface<T>> {\n    return this.drop.asObservable();\n  }\n\n  broadcast(event: DragEventInterface<T>): void {\n    switch (event.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(event);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(event);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(event);\n        break;\n      case DragEventType.DROP:\n        this.drop.next(event);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType, DragPointPosition } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\n\n@Injectable()\nexport class DragEventListenerService<T> {\n  private draggableEl: any;\n\n  // contains listeners for the starting events such as mousedown and touchstart\n  private listeners: (() => void)[] = [];\n  // contains listeners for nested events that happens after/inside the starting events\n  // such as selectstart, mousemove/touchmove, mouseup/touchend\n  private nestedListeners: (() => void)[];\n\n  // contains listener for mousemove/touchmove before delay\n  private checkDragStartBoundaryListener: () => void;\n\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  private hasDragStarted = false;\n\n  private dragStartDelayTimeout: ReturnType<typeof setTimeout>;\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dragStartPosition(): DragPointPosition {\n    return this.initialPosition;\n  }\n\n  constructor(private ngZone: NgZone, private renderer: Renderer2, private eventBus: DragAndDropEventBusService<T>) {}\n\n  private initialPosition: DragPointPosition;\n\n  // Draggable component sets these properties:\n  public dragDataTransfer?: T;\n  public group?: string | string[];\n  public dragStartDelay = 0;\n\n  // DraggableGhost component sets these properties:\n  public ghostElement?: any;\n  public dropPointPosition?: DragPointPosition;\n\n  public attachDragListeners(draggableEl: Node) {\n    this.draggableEl = draggableEl;\n    this.listeners.push(this.customDragEvent(this.draggableEl, 'mousedown', 'mousemove', 'mouseup'));\n    this.listeners.push(this.customDragEvent(this.draggableEl, 'touchstart', 'touchmove', 'touchend'));\n  }\n\n  public detachDragListeners() {\n    if (this.listeners) {\n      this.listeners.map(event => event());\n    }\n\n    // In most cases, once users start dragging with mousedown/touchstart events,\n    // they will end dragging at one point with mouseup/touchend.\n    // However, there might be a few cases where mousedown/touchstart events get registered,\n    // but the draggable element gets removed before user ends dragging.\n    // In that case, we need to remove the attached listeners that happened during the mousedown/touchstart events.\n    if (this.nestedListeners) {\n      this.nestedListeners.map(event => event());\n    }\n\n    if (this.checkDragStartBoundaryListener) {\n      this.checkDragStartBoundaryListener();\n    }\n  }\n\n  private getNativeEventObject(event: MouseEvent | TouchEvent): any {\n    if ((event as TouchEvent).hasOwnProperty('changedTouches')) {\n      return (event as TouchEvent).changedTouches[0];\n    } else {\n      return event;\n    }\n  }\n\n  private customDragEvent(element: Node, startOnEvent: string, moveOnEvent: string, endOnEvent: string): () => void {\n    return this.renderer.listen(element, startOnEvent, (startEvent: MouseEvent | TouchEvent) => {\n      // save the initial point to initialPosition\n      // this will be used to calculate how far the draggable has been dragged from its initial position\n      this.initialPosition = {\n        pageX: this.getNativeEventObject(startEvent).pageX,\n        pageY: this.getNativeEventObject(startEvent).pageY,\n      };\n\n      // Initialize nested listeners' property with a new empty array;\n      this.nestedListeners = [];\n\n      // This is needed to disable selection during dragging (especially in EDGE/IE11).\n      this.nestedListeners.push(\n        this.renderer.listen('document', 'selectstart', (selectEvent: Event) => {\n          selectEvent.preventDefault();\n          selectEvent.stopImmediatePropagation();\n        })\n      );\n\n      // Listen to mousemove/touchmove events outside of angular zone.\n      this.ngZone.runOutsideAngular(() => {\n        // During the drag start delay, pointer should stay within the boundary.\n        this.checkDragStartBoundary(moveOnEvent);\n\n        this.dragStartDelayTimeout = setTimeout(() => {\n          if (this.checkDragStartBoundaryListener) {\n            this.checkDragStartBoundaryListener();\n          }\n\n          this.hasDragStarted = true;\n          // Fire \"dragstart\"\n          this.broadcast(startEvent, DragEventType.DRAG_START);\n\n          this.nestedListeners.push(\n            this.renderer.listen('document', moveOnEvent, (moveEvent: MouseEvent | TouchEvent) => {\n              // Event.stopImmediatePropagation() is needed here to prevent nested draggables from getting dragged\n              // altogether. We shouldn't use Event.stopPropagation() here as we are listening to the events\n              // on the global element level.\n\n              // With Event.stopImmediatePropagation(), it registers the events sent from the inner most draggable\n              // first. Then immediately after that, it stops listening to the same type of events on the same\n              // element. So this will help us to not register the same events that would come from the parent\n              // level draggables eventually.\n\n              moveEvent.stopImmediatePropagation();\n\n              if (this.hasDragStarted) {\n                // Fire \"dragmove\"\n                this.broadcast(moveEvent, DragEventType.DRAG_MOVE);\n              }\n            })\n          );\n        }, this.dragStartDelay);\n      });\n\n      // Listen to mouseup/touchend events.\n      this.nestedListeners.push(\n        this.renderer.listen('document', endOnEvent, (endEvent: MouseEvent | TouchEvent) => {\n          if (this.hasDragStarted) {\n            // Fire \"dragend\" only if dragstart is registered\n            this.hasDragStarted = false;\n            this.broadcast(endEvent, DragEventType.DRAG_END);\n          }\n\n          clearTimeout(this.dragStartDelayTimeout);\n\n          // We must remove the the nested listeners every time drag completes.\n          this.nestedListeners.map(event => event());\n\n          // We must remove the event listener from checkDragStartBoundary\n          if (this.checkDragStartBoundaryListener) {\n            this.checkDragStartBoundaryListener();\n          }\n        })\n      );\n    });\n  }\n\n  private checkDragStartBoundary(eventType: string): void {\n    this.checkDragStartBoundaryListener = this.renderer.listen(\n      'document',\n      eventType,\n      (moveEvent: MouseEvent | TouchEvent) => {\n        const deltaX = Math.abs(this.getNativeEventObject(moveEvent).pageX - this.initialPosition.pageX);\n        const deltaY = Math.abs(this.getNativeEventObject(moveEvent).pageY - this.initialPosition.pageY);\n\n        // If pointer move delta exceeds horizontal or vertical threshold,\n        // we should cancel drag initiation.\n        if (deltaX > 1 || deltaY > 1) {\n          clearTimeout(this.dragStartDelayTimeout);\n          if (this.checkDragStartBoundaryListener) {\n            this.checkDragStartBoundaryListener();\n          }\n        }\n      }\n    );\n  }\n\n  private broadcast(event: MouseEvent | TouchEvent, eventType: DragEventType): void {\n    const dragEvent: DragEventInterface<T> = this.generateDragEvent(event, eventType);\n\n    switch (dragEvent.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(dragEvent);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(dragEvent);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(dragEvent);\n        break;\n      default:\n        break;\n    }\n\n    // The following properties are set after they are broadcasted to the DraggableGhost component.\n    dragEvent.ghostElement = this.ghostElement;\n    dragEvent.dropPointPosition = this.dropPointPosition;\n\n    this.eventBus.broadcast(dragEvent);\n  }\n\n  private generateDragEvent(event: MouseEvent | TouchEvent, eventType: DragEventType): DragEventInterface<T> {\n    const nativeEvent: any = this.getNativeEventObject(event);\n\n    return {\n      type: eventType,\n      dragPosition: {\n        pageX: nativeEvent.pageX,\n        pageY: nativeEvent.pageY,\n        moveX: nativeEvent.pageX - this.initialPosition.pageX,\n        moveY: nativeEvent.pageY - this.initialPosition.pageY,\n      },\n      group: this.group,\n      dragDataTransfer: this.dragDataTransfer,\n      ghostElement: this.ghostElement,\n    };\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\n\n// This service is used to capture the state of clrDraggable element\n// at a certain event and passes it to clrDraggableGhost component.\n@Injectable()\nexport class DraggableSnapshotService<T> {\n  constructor(private domAdapter: DomAdapter) {}\n\n  private draggableElClientRect: ClientRect;\n  private snapshotDragEvent: DragEventInterface<T>;\n\n  public capture(el: Node, event: DragEventInterface<T>): void {\n    this.draggableElClientRect = this.domAdapter.clientRect(el);\n    this.snapshotDragEvent = event;\n  }\n  public discard(): void {\n    delete this.draggableElClientRect;\n    delete this.snapshotDragEvent;\n  }\n  get hasDraggableState(): boolean {\n    return !!this.snapshotDragEvent && !!this.draggableElClientRect;\n  }\n  get clientRect(): ClientRect {\n    return this.draggableElClientRect;\n  }\n  get dragEvent(): DragEventInterface<T> {\n    return this.snapshotDragEvent;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, HostBinding, NgZone, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\nimport { DraggableSnapshotService } from './providers/draggable-snapshot.service';\n\ntype PagePosition = {\n  pageX: number;\n  pageY: number;\n};\ntype OffsetPosition = {\n  top: number;\n  left: number;\n};\n\n@Component({\n  selector: 'clr-draggable-ghost',\n  template: `<ng-content></ng-content>`,\n  animations: [\n    trigger('leaveAnimation', [\n      transition(':leave', [\n        style({ left: '*', top: '*' }),\n        animate('0.2s ease-in-out', style({ top: '{{top}}', left: '{{left}}' })),\n      ]),\n    ]),\n  ],\n})\nexport class ClrDraggableGhost<T> implements OnDestroy {\n  private draggableGhostEl: any;\n\n  private subscriptions: Subscription[] = [];\n\n  @HostBinding('@leaveAnimation') leaveAnimConfig = { value: 0, params: { top: '0px', left: '0px' } };\n\n  constructor(\n    private el: ElementRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>,\n    @Optional() private draggableSnapshot: DraggableSnapshotService<T>,\n    private renderer: Renderer2,\n    private ngZone: NgZone\n  ) {\n    if (!this.dragEventListener || !this.draggableSnapshot) {\n      throw new Error('The clr-draggable-ghost component can only be used inside of a clrDraggable directive.');\n    }\n\n    this.draggableGhostEl = this.el.nativeElement;\n\n    // Need to use Renderer2 as it runs outside of NgZone\n    this.renderer.addClass(this.draggableGhostEl, 'draggable-ghost');\n\n    // Register the ghost element in DragEventListener to pass in a ClrDragEvent.\n    this.dragEventListener.ghostElement = this.draggableGhostEl;\n\n    // Default ghost size gets the size of ClrDraggable element.\n    this.setDefaultGhostSize(this.draggableGhostEl);\n\n    const offset: OffsetPosition = {\n      top: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageY - this.draggableSnapshot.clientRect.top\n        : 0,\n      left: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageX - this.draggableSnapshot.clientRect.left\n        : 0,\n    };\n\n    let isAnimationConfigured = false;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        // On the first drag move event, we configure the animation as it's dependent on the first drag event.\n        if (!isAnimationConfigured) {\n          if (this.draggableSnapshot.hasDraggableState) {\n            this.animateToOnLeave(\n              `${this.draggableSnapshot.clientRect.top}px`,\n              `${this.draggableSnapshot.clientRect.left}px`\n            );\n          } else {\n            this.animateToOnLeave(\n              `${this.dragEventListener.dragStartPosition.pageY}px`,\n              `${this.dragEventListener.dragStartPosition.pageY}px`\n            );\n          }\n          isAnimationConfigured = true;\n        }\n\n        // Position the draggable ghost.\n        const topLeftPosition: PagePosition = this.findTopLeftPosition(event.dragPosition, offset);\n        this.setPositionStyle(this.draggableGhostEl, topLeftPosition.pageX, topLeftPosition.pageY);\n        this.dragEventListener.dropPointPosition = this.findDropPointPosition(topLeftPosition);\n      })\n    );\n  }\n\n  private setDefaultGhostSize(el: Node): void {\n    if (this.draggableSnapshot.hasDraggableState) {\n      this.setSizeStyle(el, this.draggableSnapshot.clientRect.width, this.draggableSnapshot.clientRect.height);\n    }\n  }\n\n  private animateToOnLeave(top: string, left: string): void {\n    this.ngZone.run(() => {\n      this.leaveAnimConfig = { value: 0, params: { top: top, left: left } };\n    });\n  }\n\n  private findTopLeftPosition(dragPosition: PagePosition, offset: OffsetPosition): PagePosition {\n    return { pageX: dragPosition.pageX - offset.left, pageY: dragPosition.pageY - offset.top };\n  }\n\n  private findDropPointPosition(topLeftPosition: PagePosition): PagePosition {\n    if (this.draggableSnapshot.hasDraggableState) {\n      return {\n        pageX: topLeftPosition.pageX + this.draggableSnapshot.clientRect.width / 2,\n        pageY: topLeftPosition.pageY + this.draggableSnapshot.clientRect.height / 2,\n      };\n    } else {\n      return topLeftPosition;\n    }\n  }\n\n  private setSizeStyle(el: Node, width: number, height: number): void {\n    this.renderer.setStyle(el, 'width', `${width}px`);\n    this.renderer.setStyle(el, 'height', `${height}px`);\n  }\n\n  private setPositionStyle(el: Node, left: number, top: number): void {\n    this.renderer.setStyle(el, 'left', `${left}px`);\n    this.renderer.setStyle(el, 'top', `${top}px`);\n    this.renderer.setStyle(el, 'visibility', 'visible');\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy, Optional, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\n\n// This structural directive will be used mainly together with `clr-draggable-ghost` directive inside of clrDraggable\n// directive. The directive is responsible for instantiating `clr-draggable-ghost` directive only during dragging so\n// that Angular Change Detection is prevented from running if a component or directive is placed inside of the\n// `clr-draggable-ghost` directive.\n\n@Directive({ selector: '[clrIfDragged]' })\nexport class ClrIfDragged<T> implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private template: TemplateRef<any>,\n    @Optional()\n    @SkipSelf()\n    private container: ViewContainerRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>\n  ) {\n    if (!this.dragEventListener || !this.container) {\n      throw new Error('The *clrIfDragged directive can only be used inside of a clrDraggable directive.');\n    }\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe(() => {\n        this.container.createEmbeddedView(this.template);\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe(() => {\n        this.container.clear();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\nimport { DragEventListenerService } from './drag-event-listener.service';\n\n// This provider registers the drag handle element.\n// When it registers a element as a drag handle, it attaches that element to the listeners from ClrDragEventListener.\n// Also, it adds the \"drag-handle\" css class to the registered element through Renderer.\n@Injectable()\nexport class DragHandleRegistrarService<T> {\n  private _customHandleEl: any;\n  private _defaultHandleEl: any;\n\n  get defaultHandleEl() {\n    return this._defaultHandleEl;\n  }\n\n  set defaultHandleEl(el: Node) {\n    this._defaultHandleEl = el; // defaultHandleEl will be usually the clrDraggable element.\n\n    // If the customHandleEl has been registered,\n    // don't make the defaultHandleEl the drag handle yet until the customHandleEl is unregistered.\n    if (!this._customHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n\n  constructor(private dragEventListener: DragEventListenerService<T>, private renderer: Renderer2) {}\n\n  private makeElementHandle(el: Node) {\n    if (this._defaultHandleEl && this._defaultHandleEl !== el) {\n      // Before making an element the custom handle element,\n      // we should remove the existing drag-handle class from the draggable element.\n      this.renderer.removeClass(this._defaultHandleEl, 'drag-handle');\n    }\n    this.dragEventListener.attachDragListeners(el);\n    this.renderer.addClass(el, 'drag-handle');\n  }\n\n  get customHandleEl() {\n    return this._customHandleEl;\n  }\n\n  public registerCustomHandle(el: Node) {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this._customHandleEl = el;\n    this.makeElementHandle(this._customHandleEl);\n  }\n\n  public unregisterCustomHandle() {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this.renderer.removeClass(this._customHandleEl, 'drag-handle');\n    delete this._customHandleEl;\n    // if default handle is set, make that handle\n    if (this._defaultHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\n// This service class adds and removes the \"in-drag\" class to the document body element\n// through its public enter() and exit() methods.\n@Injectable()\nexport class GlobalDragModeService {\n  constructor(private renderer: Renderer2) {}\n\n  enter(): void {\n    this.renderer.addClass(document.body, 'in-drag');\n  }\n\n  exit(): void {\n    this.renderer.removeClass(document.body, 'in-drag');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDraggableGhost } from '../draggable-ghost';\nimport { ClrIfDragged } from '../if-dragged';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\nimport { DragEventListenerService } from '../providers/drag-event-listener.service';\nimport { DragHandleRegistrarService } from '../providers/drag-handle-registrar.service';\nimport { DraggableSnapshotService } from '../providers/draggable-snapshot.service';\nimport { GlobalDragModeService } from '../providers/global-drag-mode.service';\n\n@Directive({\n  selector: '[clrDraggable]',\n  providers: [\n    DragEventListenerService,\n    DragHandleRegistrarService,\n    DraggableSnapshotService,\n    GlobalDragModeService,\n    DomAdapter,\n  ],\n  host: { '[class.draggable]': 'true', '[class.being-dragged]': 'dragOn' },\n})\nexport class ClrDraggable<T> implements AfterContentInit, OnDestroy {\n  private draggableEl: any;\n  private subscriptions: Subscription[] = [];\n  private componentFactory: ComponentFactory<ClrDraggableGhost<T>>;\n  public dragOn = false;\n\n  constructor(\n    private el: ElementRef,\n    private dragEventListener: DragEventListenerService<T>,\n    private dragHandleRegistrar: DragHandleRegistrarService<T>,\n    private viewContainerRef: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private draggableSnapshot: DraggableSnapshotService<T>,\n    private globalDragMode: GlobalDragModeService\n  ) {\n    this.draggableEl = this.el.nativeElement;\n    this.componentFactory = this.cfr.resolveComponentFactory<ClrDraggableGhost<T>>(ClrDraggableGhost);\n  }\n\n  @ContentChild(ClrIfDragged) customGhost: ClrIfDragged<T>;\n\n  @Input('clrDraggable')\n  set dataTransfer(value: T) {\n    this.dragEventListener.dragDataTransfer = value;\n  }\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this.dragEventListener.group = value;\n  }\n\n  @Input('clrDragStartDelay')\n  set dragStartDelay(value: number) {\n    if (typeof value === 'number') {\n      this.dragEventListener.dragStartDelay = value;\n    } else if (typeof value === 'string') {\n      this.dragEventListener.dragStartDelay = parseInt(value, 10) || 0;\n    }\n  }\n\n  private createDefaultGhost(event: DragEventInterface<T>) {\n    this.draggableSnapshot.capture(this.draggableEl, event);\n    // NOTE: The default ghost element will appear\n    // next to the clrDraggable in the DOM as a sibling element.\n    this.viewContainerRef.createComponent(this.componentFactory, 0, this.injector, [\n      [this.draggableEl.cloneNode(true)],\n    ]);\n  }\n\n  private destroyDefaultGhost() {\n    this.viewContainerRef.clear();\n    this.draggableSnapshot.discard();\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this.dragHandleRegistrar.defaultHandleEl = this.draggableEl;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.enter();\n        this.dragOn = true;\n        if (!this.customGhost) {\n          this.createDefaultGhost(event);\n        }\n\n        this.dragStartEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        this.dragMoveEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.exit();\n        this.dragOn = false;\n        if (!this.customGhost) {\n          this.destroyDefaultGhost();\n        }\n        this.dragEndEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.dragEventListener.detachDragListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { DragEventInterface, DragEventType, DragPointPosition } from '../interfaces/drag-event.interface';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\n\n@Directive({\n  selector: '[clrDroppable]',\n  providers: [DomAdapter],\n  host: { '[class.droppable]': 'true', '[class.draggable-match]': 'isDraggableMatch' },\n})\nexport class ClrDroppable<T> implements OnInit, OnDestroy {\n  private dragStartSubscription: Subscription;\n  private dragMoveSubscription: Subscription;\n  private dragEndSubscription: Subscription;\n\n  private droppableEl: any;\n  private clientRect: ClientRect;\n\n  constructor(\n    private el: ElementRef,\n    private eventBus: DragAndDropEventBusService<T>,\n    private domAdapter: DomAdapter,\n    private renderer: Renderer2\n  ) {\n    this.droppableEl = this.el.nativeElement;\n  }\n\n  isDraggableMatch = false;\n  private _isDraggableOver = false;\n\n  set isDraggableOver(value: boolean) {\n    // We need to add/remove this draggable-over class via Renderer2\n    // because isDraggableOver is set outside of NgZone.\n    if (value) {\n      this.renderer.addClass(this.droppableEl, 'draggable-over');\n    } else {\n      this.renderer.removeClass(this.droppableEl, 'draggable-over');\n    }\n    this._isDraggableOver = value;\n  }\n\n  private _group: string | string[];\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this._group = value;\n  }\n\n  private _dropTolerance: ClrDropToleranceInterface = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  private dropToleranceGenerator(top = 0, right = top, bottom = top, left = right): ClrDropToleranceInterface {\n    return { top, right, bottom, left };\n  }\n\n  @Input('clrDropTolerance')\n  set dropTolerance(value: number | string | ClrDropToleranceInterface) {\n    // If user provides an object here and wants to manipulate/update properties individually,\n    // the object must be immutable as we generate new object based user's given object.\n    if (typeof value === 'number') {\n      this._dropTolerance = this.dropToleranceGenerator(value);\n    } else if (typeof value === 'string') {\n      const toleranceValues = value\n        .trim()\n        .split(/\\s+/)\n        .map(tolerance => parseInt(tolerance, 10));\n      this._dropTolerance = this.dropToleranceGenerator(...toleranceValues);\n    } else if (value) {\n      // The value could be passed in as {left: 20, top: 30 }\n      // In this case, the rest of the direction properties should be 0.\n      // That's why we initialize properties with 0 first, then override with user's given value.\n      this._dropTolerance = { ...this.dropToleranceGenerator(0), ...value };\n    }\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragLeave') dragLeaveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnter') dragEnterEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDrop') dropEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  private unsubscribeFrom(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private checkGroupMatch(draggableGroup: string | string[]): boolean {\n    // Both Draggable and Droppable have clrGroup input.\n    // The clrGroup input can be both a string key or array of string keys in Draggable and Droppable.\n\n    // It's not match if Draggable has no defined value assigned to clrGroup, but Droppable has a defined clrGroup.\n    if (!draggableGroup && this._group) {\n      return false;\n    }\n    // The same is true the other way round.\n    if (!this._group && draggableGroup) {\n      return false;\n    }\n\n    // It's match if both Draggable and Droppable have no assigned value for clrGroup.\n    if (!this._group && !draggableGroup) {\n      return true;\n    }\n\n    // It's match if both Draggable and Droppable have simple string keys that are matching.\n    // It's match if Draggable's simple clrGroup key is matching with one of the clrGroup keys of Droppable. The\n    // same is true the other way round.\n    // it's match if one of the clrGroup keys of Droppable is matching with one of the clrGroup keys of Draggable.\n    if (typeof draggableGroup === 'string') {\n      if (typeof this._group === 'string') {\n        return this._group === draggableGroup;\n      } else {\n        return this._group.indexOf(draggableGroup) > -1;\n      }\n    } else {\n      if (typeof this._group === 'string') {\n        return draggableGroup.indexOf(this._group) > -1;\n      } else {\n        return (this._group as string[]).some(groupKey => draggableGroup.indexOf(groupKey) > -1);\n      }\n    }\n  }\n\n  private isInDropArea(point: DragPointPosition): boolean {\n    if (!point) {\n      return false;\n    }\n\n    if (!this.clientRect) {\n      this.clientRect = this.domAdapter.clientRect(this.droppableEl);\n    }\n\n    if (\n      point.pageX >= this.clientRect.left - this._dropTolerance.left &&\n      point.pageX <= this.clientRect.right + this._dropTolerance.right &&\n      point.pageY >= this.clientRect.top - this._dropTolerance.top &&\n      point.pageY <= this.clientRect.bottom + this._dropTolerance.bottom\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private onDragStart(dragStartEvent: DragEventInterface<T>): void {\n    // Check draggable and droppable have a matching group key.\n    this.isDraggableMatch = this.checkGroupMatch(dragStartEvent.group);\n\n    // Subscribe to dragMoved and dragEnded only if draggable and droppable have a matching group key.\n    if (this.isDraggableMatch) {\n      this.dragStartEmitter.emit(new ClrDragEvent(dragStartEvent));\n      this.dragMoveSubscription = this.eventBus.dragMoved.subscribe((dragMoveEvent: DragEventInterface<T>) => {\n        this.onDragMove(dragMoveEvent);\n      });\n      this.dragEndSubscription = this.eventBus.dragEnded.subscribe((dragEndEvent: DragEventInterface<T>) => {\n        this.onDragEnd(dragEndEvent);\n      });\n    }\n  }\n\n  private onDragMove(dragMoveEvent: DragEventInterface<T>): void {\n    const isInDropArea = this.isInDropArea(dragMoveEvent.dropPointPosition);\n    if (!this._isDraggableOver && isInDropArea) {\n      this.isDraggableOver = true;\n      const dragEnterEvent = { ...dragMoveEvent, type: DragEventType.DRAG_ENTER };\n      this.eventBus.broadcast(dragEnterEvent);\n      this.dragEnterEmitter.emit(new ClrDragEvent(dragEnterEvent));\n    } else if (this._isDraggableOver && !isInDropArea) {\n      this.isDraggableOver = false;\n      const dragLeaveEvent = { ...dragMoveEvent, type: DragEventType.DRAG_LEAVE };\n      this.eventBus.broadcast(dragLeaveEvent);\n      this.dragLeaveEmitter.emit(new ClrDragEvent(dragLeaveEvent));\n    }\n\n    this.dragMoveEmitter.emit(new ClrDragEvent(dragMoveEvent));\n  }\n\n  private onDragEnd(dragEndEvent: DragEventInterface<T>): void {\n    if (this._isDraggableOver) {\n      if (dragEndEvent.ghostElement) {\n        // By this point, the draggable ghost component is destroyed,\n        // but the element would be active until its animation completes.\n        // As such, once the ghost is dropped over, we will give it \"dropped\" class.\n\n        // This process cannot be done in the ghost component\n        // because any subscription to the drop event is ineffective or invalid\n        // as the component had been already destroyed.\n        this.renderer.addClass(dragEndEvent.ghostElement, 'dropped');\n      }\n\n      const dropEvent = { ...dragEndEvent, type: DragEventType.DROP };\n      this.eventBus.broadcast(dropEvent);\n      this.dropEmitter.emit(new ClrDragEvent(dropEvent));\n      this.isDraggableOver = false;\n    }\n    this.dragEndEmitter.emit(new ClrDragEvent(dragEndEvent));\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n    this.isDraggableMatch = false;\n    delete this.clientRect;\n  }\n\n  ngOnInit() {\n    this.dragStartSubscription = this.eventBus.dragStarted.subscribe((dragStartEvent: DragEventInterface<T>) => {\n      this.onDragStart(dragStartEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeFrom(this.dragStartSubscription);\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, OnDestroy, Optional } from '@angular/core';\nimport { DragHandleRegistrarService } from './providers/drag-handle-registrar.service';\n\n@Directive({ selector: '[clrDragHandle]', host: { '[class.drag-handle]': 'true' } })\nexport class ClrDragHandle<T> implements OnDestroy {\n  constructor(private el: ElementRef, @Optional() private dragHandleRegistrar: DragHandleRegistrarService<T>) {\n    if (!this.dragHandleRegistrar) {\n      // ClrDragHandleRegistrar is provided in ClrDraggable so we expect it to be present here\n      // as clrDragHandle is required to be used only inside of a clrDraggable directive.\n      throw new Error('The clrDragHandle directive can only be used inside of a clrDraggable directive.');\n    }\n    this.dragHandleRegistrar.registerCustomHandle(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.dragHandleRegistrar.unregisterCustomHandle();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrDraggable } from './draggable/draggable';\nimport { ClrDroppable } from './droppable/droppable';\nimport { ClrIfDragged } from './if-dragged';\nimport { ClrDragHandle } from './drag-handle';\nimport { ClrDraggableGhost } from './draggable-ghost';\n\nexport const CLR_DRAG_AND_DROP_DIRECTIVES: Type<any>[] = [\n  ClrDraggable,\n  ClrDroppable,\n  ClrIfDragged,\n  ClrDragHandle,\n  ClrDraggableGhost,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],\n  entryComponents: [ClrDraggableGhost],\n  exports: [CLR_DRAG_AND_DROP_DIRECTIVES],\n})\nexport class ClrDragAndDropModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\n\n@Component({\n  selector: 'clr-expandable-animation',\n  template: ` <ng-content></ng-content> `,\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  animations: [\n    trigger('expandAnimation', [\n      transition('true <=> false', [\n        style({ height: '{{startHeight}}px', overflow: 'hidden' }),\n        animate('0.2s ease-in-out', style({ height: '*' })),\n      ]),\n    ]),\n  ],\n  providers: [DomAdapter],\n})\nexport class ClrExpandableAnimation {\n  @Input() clrExpandTrigger: any;\n\n  startHeight = 0;\n\n  constructor(private element: ElementRef, private domAdapter: DomAdapter) {}\n\n  @HostBinding('@expandAnimation')\n  get expandAnimation() {\n    return { value: this.clrExpandTrigger, params: { startHeight: this.startHeight } };\n  }\n\n  @HostListener('@expandAnimation.done')\n  animationDone() {\n    // A \"safe\" auto-update of the height ensuring basic OOTB user experience .\n    // Prone to small jumps in initial animation height if data was changed in the meantime, window was resized, etc.\n    // For optimal behavior call manually updateStartHeight() from the parent component before initiating the update.\n    this.updateStartHeight();\n  }\n\n  updateStartHeight() {\n    this.startHeight = this.domAdapter.computedHeight(this.element.nativeElement) || 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\n\nimport { ClrExpandableAnimation } from './expandable-animation';\n\nexport * from './expandable-animation';\n\nexport const EXPANDABLE_ANIMATION_DIRECTIVES: Type<any>[] = [ClrExpandableAnimation];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EXPANDABLE_ANIMATION_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EXPANDABLE_ANIMATION_DIRECTIVES],\n  exports: [EXPANDABLE_ANIMATION_DIRECTIVES],\n})\nexport class ClrExpandableAnimationModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const FOCUS_ON_VIEW_INIT = new InjectionToken<boolean>('FOCUS_ON_VIEW_INIT');\n\n// This provider holds the default value for clrFocusOnViewInit directive's isEnabled property.\n// So users can interject this provider and set their own value for this provider.\nexport const FOCUS_ON_VIEW_INIT_PROVIDER = {\n  provide: FOCUS_ON_VIEW_INIT,\n  useValue: true,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_ON_VIEW_INIT } from './focus-on-view-init.provider';\n\n/*  This directive is for guiding the document focus to the newly added content when its view is initialized\n    so that assistive technologies can read its content. */\n@Directive({\n  selector: '[clrFocusOnViewInit]',\n})\nexport class ClrFocusOnViewInit implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(FOCUS_ON_VIEW_INIT) private focusOnViewInit: boolean,\n    @Inject(DOCUMENT) document: any,\n    private renderer: Renderer2\n  ) {\n    this._isEnabled = this.focusOnViewInit;\n\n    // Angular compiler doesn't understand the type Document\n    // when working out the metadata for injectable parameters,\n    // even though it understands the injection token DOCUMENT\n    // https://github.com/angular/angular/issues/20351\n    this.document = document;\n  }\n\n  private document: Document;\n  private directFocus = true; // true if the element gets focused without need to set tabindex;\n\n  @HostListener('focusout')\n  onFocusout() {\n    if (!this.directFocus) {\n      // manually set attributes and styles should be removed\n      this.renderer.removeAttribute(this.el.nativeElement, 'tabindex');\n      this.renderer.setStyle(this.el.nativeElement, 'outline', null);\n    }\n  }\n\n  private _isEnabled: boolean;\n  @Input('clrFocusOnViewInit')\n  set isEnabled(value: boolean) {\n    if (this.focusOnViewInit && typeof value === 'boolean') {\n      this._isEnabled = value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focus();\n  }\n\n  private focus() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this.document && this.document.activeElement !== this.el.nativeElement) {\n      this.el.nativeElement.focus();\n      if (this.document.activeElement !== this.el.nativeElement) {\n        // if it's not directly focused now, it means it was a non-interactive element\n        // so we need to give it a tabindex.\n        this.directFocus = false;\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n        this.renderer.setStyle(this.el.nativeElement, 'outline', 'none');\n        this.el.nativeElement.focus();\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrFocusOnViewInit } from './focus-on-view-init';\nimport { FOCUS_ON_VIEW_INIT_PROVIDER } from './focus-on-view-init.provider';\n\nexport const FOCUS_ON_VIEW_INIT_DIRECTIVES: Type<any>[] = [ClrFocusOnViewInit];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n  providers: [FOCUS_ON_VIEW_INIT_PROVIDER],\n  exports: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n})\nexport class ClrFocusOnViewInitModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport abstract class CustomFilter {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * This provider implements some form of synchronous debouncing through a lock pattern\n * to avoid emitting multiple state changes for a single user action.\n */\n@Injectable()\nexport class StateDebouncer {\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  private _change = new Subject<void>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<void> {\n    return this._change.asObservable();\n  }\n\n  /*\n   * This is the lock, to only emit once all the changes have finished processing\n   */\n  private nbChanges = 0;\n\n  public changeStart() {\n    this.nbChanges++;\n  }\n\n  public changeDone() {\n    if (--this.nbChanges === 0) {\n      this._change.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Page {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  private preventEmit = false;\n  public activated = false;\n\n  /**\n   * Page size, a value of 0 means no pagination\n   */\n  private _size = 0;\n  public get size(): number {\n    return this._size;\n  }\n  public set size(size: number) {\n    const oldSize = this._size;\n    if (size !== oldSize) {\n      if (!this.preventEmit) {\n        this.stateDebouncer.changeStart();\n      }\n      this._size = size;\n      if (size === 0) {\n        this._current = 1;\n      } else {\n        // Yeap. That's the formula to keep the first item from the old page still\n        // displayed in the new one.\n        this._current = Math.floor((oldSize / size) * (this._current - 1)) + 1;\n      }\n      // We always emit an event even if the current page index didn't change, because\n      // the size changing means the items inside the page are different\n      if (!this.preventEmit) {\n        this._change.next(this._current);\n        this._sizeChange.next(this._size);\n        this.stateDebouncer.changeDone();\n      }\n    }\n    this.preventEmit = false;\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  private _totalItems?: number;\n  public get totalItems(): number {\n    return this._totalItems || 0; // remains 0 if not set to avoid breaking change\n  }\n  public set totalItems(total: number) {\n    this._totalItems = total;\n    // If we have less items than before, we might need to change the current page\n    if (this.current > this.last) {\n      this.current = this.last;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  private _last: number;\n  public get last(): number {\n    if (this._last) {\n      return this._last;\n    }\n    // If the last page isn't known, we compute it from the last item's index\n    if (this.size > 0 && this.totalItems) {\n      return Math.ceil(this.totalItems / this.size);\n    }\n    return 1;\n  }\n  public set last(page: number) {\n    this._last = page;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to page changes\n   */\n  private _change = new Subject<number>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _sizeChange = new Subject<number>();\n\n  public get sizeChange(): Observable<number> {\n    return this._sizeChange.asObservable();\n  }\n\n  /**\n   * Current page\n   */\n  private _current = 1;\n  public get current(): number {\n    return this._current;\n  }\n  public set current(page: number) {\n    if (page !== this._current) {\n      this.stateDebouncer.changeStart();\n      this._current = page;\n      this._change.next(page);\n      this.stateDebouncer.changeDone();\n    }\n  }\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    if (this.current > 1) {\n      this.current--;\n    }\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    if (this.current < this.last) {\n      this.current++;\n    }\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return 0;\n    }\n    return (this.current - 1) * this.size;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return this.totalItems - 1;\n    }\n    let lastInPage = this.current * this.size - 1;\n    if (this.totalItems) {\n      lastInPage = Math.min(lastInPage, this.totalItems - 1);\n    }\n    return lastInPage;\n  }\n\n  /**\n   * Resets the page size to 0\n   */\n  public resetPageSize(preventEmit = false): void {\n    this.preventEmit = preventEmit;\n    this.size = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { Page } from './page';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class FiltersProvider<T = any> {\n  constructor(private _page: Page, private stateDebouncer: StateDebouncer) {}\n  /**\n   * This subject is the list of filters that changed last, not the whole list.\n   * We emit a list rather than just one filter to allow batch changes to several at once.\n   */\n  private _change = new Subject<ClrDatagridFilterInterface<T>[]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<ClrDatagridFilterInterface<T>[]> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * List of all filters, whether they're active or not\n   */\n  private _all: RegisteredFilter<T, ClrDatagridFilterInterface<T>>[] = [];\n\n  /**\n   * Tests if at least one filter is currently active\n   */\n  public hasActiveFilters(): boolean {\n    // We do not use getActiveFilters() because this function will be called much more often\n    // and stopping the loop early might be relevant.\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a list of all currently active filters\n   */\n  public getActiveFilters(): ClrDatagridFilterInterface<T>[] {\n    const ret: ClrDatagridFilterInterface<T>[] = [];\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        ret.push(filter);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Registers a filter, and returns a deregistration function\n   */\n  public add<F extends ClrDatagridFilterInterface<T>>(filter: F): RegisteredFilter<T, F> {\n    const subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n    let hasUnregistered = false;\n    const registered = new RegisteredFilter(filter, () => {\n      if (hasUnregistered) {\n        return;\n      }\n      subscription.unsubscribe();\n      const matchIndex = this._all.findIndex(item => item.filter === filter);\n      if (matchIndex >= 0) {\n        this._all.splice(matchIndex, 1);\n      }\n      if (filter.isActive()) {\n        this.resetPageAndEmitFilterChange([]);\n      }\n      hasUnregistered = true;\n    });\n    this._all.push(registered);\n    if (filter.isActive()) {\n      this.resetPageAndEmitFilterChange([filter]);\n    }\n    return registered;\n  }\n\n  /**\n   * Accepts an item if it is accepted by all currently active filters\n   */\n  public accepts(item: T): boolean {\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive() && !filter.accepts(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private resetPageAndEmitFilterChange(filters: ClrDatagridFilterInterface<T>[]) {\n    this.stateDebouncer.changeStart();\n    // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n    // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n    this._page.current = 1;\n    this._change.next(filters);\n    this.stateDebouncer.changeDone();\n  }\n}\n\nexport class RegisteredFilter<T, F extends ClrDatagridFilterInterface<T>> {\n  constructor(public filter: F, public unregister: () => void) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { FiltersProvider, RegisteredFilter } from '../providers/filters';\n\n@Directive()\nexport abstract class DatagridFilterRegistrar<T, F extends ClrDatagridFilterInterface<T>> implements OnDestroy {\n  constructor(private filters: FiltersProvider<T>) {}\n\n  public registered: RegisteredFilter<T, F>;\n\n  public get filter(): F {\n    return this.registered && this.registered.filter;\n  }\n\n  public setFilter(filter: F | RegisteredFilter<T, F>) {\n    // If we previously had another filter, we unregister it\n    this.deleteFilter();\n    if (filter instanceof RegisteredFilter) {\n      this.registered = filter;\n    } else if (filter) {\n      this.registered = this.filters.add(filter);\n    }\n  }\n\n  public deleteFilter() {\n    if (this.registered) {\n      this.registered.unregister();\n      delete this.registered;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.deleteFilter();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Inject,\n  OnDestroy,\n  PLATFORM_ID,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\n\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\n@Component({\n  selector: 'clr-dg-filter',\n  // We register this component as a CustomFilter, for the parent column to detect it.\n  providers: [{ provide: CustomFilter, useExisting: ClrDatagridFilter }, UNIQUE_ID_PROVIDER],\n  template: `\n    <button\n      class=\"datagrid-filter-toggle\"\n      type=\"button\"\n      #anchor\n      [attr.aria-label]=\"commonStrings.keys.datagridFilterAriaLabel\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.aria-controls]=\"popoverId\"\n      clrPopoverAnchor\n      clrPopoverOpenCloseButton\n      [class.datagrid-filter-open]=\"open\"\n      [class.datagrid-filtered]=\"active\"\n    >\n      <cds-icon\n        [attr.status]=\"active ? 'info' : null\"\n        [attr.shape]=\"active ? 'filter-grid-circle' : 'filter-grid'\"\n        solid\n      ></cds-icon>\n    </button>\n\n    <div\n      class=\"datagrid-filter\"\n      [id]=\"popoverId\"\n      clrFocusTrap\n      *clrPopoverContent=\"open; at: smartPosition; outsideClickToClose: true; scrollToClose: true\"\n    >\n      <div class=\"datagrid-filter-close-wrapper\">\n        <button type=\"button\" class=\"close\" clrPopoverCloseButton>\n          <cds-icon shape=\"window-close\" [attr.title]=\"commonStrings.keys.close\"></cds-icon>\n        </button>\n      </div>\n\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements CustomFilter, OnDestroy {\n  private subs: Subscription[] = [];\n  public ariaExpanded = false;\n\n  constructor(\n    _filters: FiltersProvider<T>,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    super(_filters);\n    this.subs.push(\n      smartToggleService.openChange.subscribe(change => {\n        this.open = change;\n        this.ariaExpanded = change;\n      })\n    );\n  }\n\n  @ViewChild('anchor', { read: ElementRef })\n  anchor: ElementRef;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  private _open = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgFilterOpen')\n  public set open(open: boolean) {\n    open = !!open;\n    if (this.open !== open) {\n      this.smartToggleService.open = open;\n      this.openChange.emit(open);\n      if (!open && isPlatformBrowser(this.platformId)) {\n        this.anchor.nativeElement.focus();\n      }\n      // keep track of the state\n      this._open = open;\n    }\n  }\n\n  @Output('clrDgFilterOpenChange') public openChange = new EventEmitter<boolean>(false);\n\n  @Input('clrDgFilter')\n  public set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>) {\n    this.setFilter(filter);\n  }\n\n  /**\n   * Indicates if the filter is currently active\n   */\n  public get active() {\n    return !!this.filter && this.filter.isActive();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty<T = any> {\n  private splitProp: string[];\n\n  constructor(private prop: string) {\n    if (prop.indexOf('.') >= 0) {\n      this.splitProp = prop.split('.');\n    }\n  }\n\n  // Safe getter for a deep object property, will not throw an error but return\n  // undefined if one of the intermediate properties is null or undefined.\n  public getPropValue(item: T): any {\n    if (this.splitProp) {\n      let value = item;\n      for (const nestedProp of this.splitProp) {\n        if (\n          value === null ||\n          typeof value === 'undefined' ||\n          typeof (value as Record<string, any>)[nestedProp] === 'undefined'\n        ) {\n          return undefined;\n        }\n        value = (value as Record<string, any>)[nestedProp];\n      }\n      return value;\n    } else {\n      return (item as Record<string, any>)[this.prop];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyStringFilter<T = any> implements ClrDatagridStringFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, search: string): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (typeof propValue === 'undefined') {\n      return false;\n    } else if (this.exact) {\n      return ('' + propValue).toLowerCase() === search;\n    } else {\n      return ('' + propValue).toLowerCase().indexOf(search) >= 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { DatagridPropertyStringFilter } from './datagrid-property-string-filter';\n\nexport class DatagridStringFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridStringFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<string>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<string> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Input value converted to lowercase\n   */\n  private _lowerCaseValue = '';\n  public get lowerCaseValue() {\n    return this._lowerCaseValue;\n  }\n\n  /**\n   * Raw input value\n   */\n  private _rawValue = '';\n  public get value(): string {\n    return this._rawValue;\n  }\n  /**\n   * Common setter for the input value\n   */\n  public set value(value: string) {\n    if (!value) {\n      value = '';\n    }\n    if (value !== this._rawValue) {\n      this._rawValue = value;\n      this._lowerCaseValue = value.toLowerCase().trim();\n      this._changes.next(value);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, meaning the input is not empty\n   */\n  public isActive(): boolean {\n    return !!this.value;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We always test with the lowercase value of the input, to stay case insensitive\n    return this.filterFn.accepts(item, this.lowerCaseValue);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyStringFilter) {\n      return {\n        property: this.filterFn.prop,\n        value: this.value,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridStringFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyStringFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyStringFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.value === this.value\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\n\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-string-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridStringFilter }],\n  template: `\n    <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n      <input\n        #input\n        type=\"text\"\n        name=\"search\"\n        [(ngModel)]=\"value\"\n        class=\"clr-input\"\n        [attr.aria-label]=\"commonStrings.keys.filterItems\"\n      />\n    </clr-dg-filter>\n  `,\n})\nexport class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>>\n  implements CustomFilter, AfterViewInit, OnDestroy {\n  private subs: Subscription[] = [];\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  /**\n   * Customizable filter logic based on a search text\n   */\n  @Input('clrDgStringFilter')\n  set customStringFilter(\n    value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridStringFilterImpl(value));\n    }\n    if (this.initFilterValue) {\n      this.value = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subs.push(\n      this.smartToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  private initFilterValue: string;\n\n  /**\n   * Common setter for the input value\n   */\n  public get value() {\n    return this.filter.value;\n  }\n  @Input('clrFilterValue')\n  public set value(value: string) {\n    if (this.filter) {\n      if (!value) {\n        value = '';\n      }\n      if (value !== this.filter.value) {\n        this.filter.value = value;\n        this.filterValueChange.emit(value);\n      }\n    } else {\n      this.initFilterValue = value;\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyNumericFilter<T = any> implements ClrDatagridNumericFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, low: number, high: number): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (low !== null && propValue < low) {\n      return false;\n    }\n    if (high !== null && propValue > high) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { DatagridPropertyNumericFilter } from './datagrid-property-numeric-filter';\n\nexport class DatagridNumericFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridNumericFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<[number, number]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<[number, number]> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Internal values and accessor\n   */\n  private _low: number | null = null;\n  private _high: number | null = null;\n\n  /**\n   * Common setters for the input values, including individual limits and\n   * both at the same time.  Value is singular to make the interface similar\n   * to the built-in string filter.\n   */\n\n  public get value(): [number, number] {\n    return [this._low, this._high];\n  }\n\n  public set value(vals: [number, number]) {\n    const low = vals[0];\n    const high = vals[1];\n    if (low !== this._low || high !== this._high) {\n      this._low = low;\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get low() {\n    return this._low;\n  }\n  public set low(low: number) {\n    if (low !== this._low) {\n      this._low = low;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get high() {\n    return this._high;\n  }\n  public set high(high: number) {\n    if (high !== this._high) {\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, (at least one input is set)\n   */\n  public isActive(): boolean {\n    return this._low !== null || this.high !== null;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We have a filter function in case someone wants to implement a numeric\n    // filter that always passes nulls or similar\n    return this.filterFn.accepts(item, this._low, this._high);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyNumericFilter) {\n      return {\n        property: this.filterFn.prop,\n        low: this._low,\n        high: this._high,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridNumericFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyNumericFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyNumericFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.low === this._low &&\n          other.high === this._high\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-numeric-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridNumericFilter }],\n  template: `\n    <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n      <input\n        class=\"datagrid-numeric-filter-input\"\n        #input_low\n        type=\"number\"\n        name=\"low\"\n        [(ngModel)]=\"low\"\n        [placeholder]=\"commonStrings.keys.minValue\"\n        [attr.aria-label]=\"commonStrings.keys.minValue\"\n      />\n      <span class=\"datagrid-filter-input-spacer\"></span>\n      <input\n        class=\"datagrid-numeric-filter-input\"\n        #input_high\n        type=\"number\"\n        name=\"high\"\n        [(ngModel)]=\"high\"\n        [placeholder]=\"commonStrings.keys.maxValue\"\n        [attr.aria-label]=\"commonStrings.keys.maxValue\"\n      />\n    </clr-dg-filter>\n  `,\n})\nexport class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>>\n  implements CustomFilter, AfterViewInit {\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private popoverToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Customizable filter logic based on high and low values\n   */\n  @Input('clrDgNumericFilter')\n  set customNumericFilter(\n    value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridNumericFilterImpl(value));\n    }\n    if (this.initFilterValues) {\n      this.value = this.initFilterValues;\n      // This initFilterValues should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValues;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input_low') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.popoverToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  private initFilterValues: [number, number];\n  /**\n   * Common setter for the input values\n   */\n  public get value() {\n    return [this.filter.low, this.filter.high];\n  }\n\n  @Input('clrFilterValue')\n  public set value(values: [number, number]) {\n    if (this.filter) {\n      if (values && (values[0] !== this.filter.low || values[1] !== this.filter.high)) {\n        if (typeof values[0] === 'number') {\n          this.filter.low = values[0];\n        } else {\n          this.filter.low = null;\n        }\n        if (typeof values[1] === 'number') {\n          this.filter.high = values[1];\n        } else {\n          this.filter.high = null;\n        }\n        this.filterValueChange.emit(values);\n      }\n    } else {\n      this.initFilterValues = values;\n    }\n  }\n\n  public get low() {\n    if (typeof this.filter.low === 'number' && isFinite(this.filter.low)) {\n      return this.filter.low;\n    } else {\n      // There's not a low limit\n      return null;\n    }\n  }\n\n  public set low(low: number | string) {\n    if (typeof low === 'number' && low !== this.filter.low) {\n      this.filter.low = low;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof low !== 'number') {\n      this.filter.low = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  public get high() {\n    if (typeof this.filter.high === 'number' && isFinite(this.filter.high)) {\n      return this.filter.high;\n    } else {\n      // There's not a high limit\n      return null;\n    }\n  }\n\n  public set high(high: number | string) {\n    if (typeof high === 'number' && high !== this.filter.high) {\n      this.filter.high = high;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof high !== 'number') {\n      this.filter.high = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewChecked, Directive } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * After a conversation with the Angular core team, it turns out we don't have much of a choice for our\n * declarative API, we need to fight against change detection and its one-way flow. This is\n * currently the least dirty solution to do what we want.\n *\n * Do not modify or even use this class unless you know exactly what you're doing.\n * It has the potential to trigger change detection loops or kill app performances.\n */\n@Directive()\nexport class WillyWonka implements AfterViewChecked {\n  private _chocolate = new Subject<string>();\n\n  public get chocolate(): Observable<string> {\n    return this._chocolate.asObservable();\n  }\n\n  disableChocolateCheck = false;\n\n  ngAfterViewChecked() {\n    if (!this.disableChocolateCheck) {\n      this._chocolate.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentChecked, ChangeDetectorRef, OnDestroy, Directive } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { WillyWonka } from './willy-wonka';\n\n@Directive()\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n  // FIXME: Request Injector once we move to Angular 4.2+, it'll allow easier refactors\n  constructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n    this.subscription = willyWonka.chocolate.subscribe(() => {\n      if (this.latestFlavor !== this.flavor) {\n        willyWonka.disableChocolateCheck = true;\n        cdr.detectChanges();\n        willyWonka.disableChocolateCheck = false;\n      }\n    });\n  }\n\n  private subscription: Subscription;\n\n  private latestFlavor: any;\n\n  abstract get flavor(): any;\n\n  ngAfterContentChecked() {\n    this.latestFlavor = this.flavor;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RowActionService {\n  private actionableCount = 0;\n\n  public register() {\n    this.actionableCount++;\n  }\n\n  public unregister() {\n    this.actionableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasActionableRow(): boolean {\n    return this.actionableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-datagrid' })\nexport class DatagridWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { RowActionService } from '../providers/row-action-service';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ActionableOompaLoompa extends OompaLoompa {\n  private rowActions: RowActionService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.rowActions = rowActions;\n  }\n\n  get flavor() {\n    return this.rowActions.hasActionableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class DetailService {\n  private toggleState = false;\n  private _state: BehaviorSubject<boolean | null> = new BehaviorSubject<boolean>(this.toggleState);\n  private cache: any;\n  private _enabled = false;\n  private button: HTMLButtonElement;\n  public id: string;\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(state: boolean) {\n    this._enabled = state;\n  }\n\n  public get stateChange(): Observable<boolean | null> {\n    return this._state.asObservable();\n  }\n\n  close() {\n    this.toggleState = false;\n    this._state.next(this.toggleState);\n    if (this.button) {\n      this.button.focus();\n      this.button = null;\n    }\n  }\n\n  open(item: any, button?: HTMLButtonElement) {\n    this.cache = item;\n    this.button = button;\n    this.toggleState = true;\n    this._state.next(this.toggleState);\n  }\n\n  toggle(item: any, button?: HTMLButtonElement) {\n    if (this.isRowOpen(item) || !item) {\n      this.close();\n    } else {\n      this.open(item, button);\n    }\n  }\n\n  get state() {\n    return this.cache;\n  }\n\n  isRowOpen(item: any) {\n    return !!(this.toggleState && this.cache === item);\n  }\n\n  get isOpen() {\n    return this.toggleState === true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DetailService } from './detail.service';\n\n@Injectable()\nexport class ExpandableRowsCount {\n  constructor(private detailService: DetailService) {}\n\n  private expandableCount = 0;\n\n  public register() {\n    this.expandableCount++;\n  }\n\n  public unregister() {\n    this.expandableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   * check if details are on, and disable rows entirely\n   */\n  public get hasExpandableRow(): boolean {\n    return !this.detailService.enabled && this.expandableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ExpandableRowsCount } from '../providers/global-expandable-rows';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ExpandableOompaLoompa extends OompaLoompa {\n  private expandableCount: ExpandableRowsCount;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: DatagridWillyWonka,\n    expandableCount: ExpandableRowsCount\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.expandableCount = expandableCount;\n  }\n\n  get flavor() {\n    return this.expandableCount.hasExpandableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Enumeration representing the sorting order of a datagrid column. It is a constant Enum,\n * i.e. each value needs to be treated as a `number`, starting at index 0.\n *\n * @export\n * @enum {number}\n */\nexport enum ClrDatagridSortOrder {\n  UNSORTED = 0,\n  ASC = 1,\n  DESC = -1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridComparatorInterface } from '../../interfaces/comparator.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyComparator<T = any> implements ClrDatagridComparatorInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  public compare(a: T, b: T): number {\n    let propA = this.nestedProp.getPropValue(a);\n    let propB = this.nestedProp.getPropValue(b);\n\n    if (typeof propA === 'string') {\n      propA = propA.toLowerCase();\n    }\n\n    if (typeof propB === 'string') {\n      propB = propB.toLowerCase();\n    }\n\n    if (typeof propA === 'undefined' || propA === null) {\n      if (typeof propB === 'undefined' || propB === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      if (typeof propB === 'undefined' || propB === null) {\n        return -1;\n      } else if (propA < propB) {\n        return -1;\n      } else if (propA > propB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridComparatorInterface } from '../interfaces/comparator.interface';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Sort<T = any> {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  /**\n   * Currently active comparator\n   */\n  private _comparator: ClrDatagridComparatorInterface<T>;\n  public get comparator(): ClrDatagridComparatorInterface<T> {\n    return this._comparator;\n  }\n  public set comparator(value: ClrDatagridComparatorInterface<T>) {\n    this.stateDebouncer.changeStart();\n    this._comparator = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Ascending order if false, descending if true\n   */\n  private _reverse = false;\n  public get reverse(): boolean {\n    return this._reverse;\n  }\n  public set reverse(value: boolean) {\n    this.stateDebouncer.changeStart();\n    this._reverse = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to sort changes\n   */\n  private _change = new Subject<Sort<T>>();\n  private emitChange() {\n    this._change.next(this);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<Sort<T>> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n   * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n   * reverse order if `true`.\n   *\n   * @memberof Sort\n   */\n  public toggle(sortBy: ClrDatagridComparatorInterface<T>, forceReverse?: boolean) {\n    this.stateDebouncer.changeStart();\n    // We modify private properties directly, to batch the change event\n    if (this.comparator === sortBy) {\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse || !this._reverse : !this._reverse;\n    } else {\n      this._comparator = sortBy;\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse : false;\n    }\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Clears the current sorting order\n   */\n  public clear() {\n    this.comparator = null;\n  }\n\n  /**\n   * Compares two objects according to the current comparator\n   */\n  public compare(a: T, b: T): number {\n    return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-column',\n  template: `\n    <ng-template #columnPortal>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class WrappedColumn implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('columnPortal') templateRef: TemplateRef<void>;\n  columnView: EmbeddedViewRef<void>; // the columns projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.columnView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.columnView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DatagridPropertyComparator } from './built-in/comparators/datagrid-property-comparator';\nimport { DatagridPropertyStringFilter } from './built-in/filters/datagrid-property-string-filter';\nimport { DatagridPropertyNumericFilter } from './built-in/filters/datagrid-property-numeric-filter';\nimport { DatagridStringFilterImpl } from './built-in/filters/datagrid-string-filter-impl';\nimport { DatagridNumericFilterImpl } from './built-in/filters/datagrid-numeric-filter-impl';\nimport { ClrDatagridSortOrder } from './enums/sort-order.enum';\nimport { ClrDatagridComparatorInterface } from './interfaces/comparator.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider } from './providers/filters';\nimport { Sort } from './providers/sort';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { WrappedColumn } from './wrapped-column';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-column',\n  template: `\n    <div class=\"datagrid-column-flex\">\n      <button class=\"datagrid-column-title\" *ngIf=\"sortable\" (click)=\"sort()\" type=\"button\">\n        <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n        <cds-icon\n          *ngIf=\"sortDirection\"\n          shape=\"arrow\"\n          [attr.direction]=\"sortDirection\"\n          aria-hidden=\"true\"\n          class=\"sort-icon\"\n        ></cds-icon>\n      </button>\n      <!-- I'm really not happy with that select since it's not very scalable -->\n      <ng-content select=\"clr-dg-filter, clr-dg-string-filter, clr-dg-numeric-filter\"></ng-content>\n\n      <clr-dg-string-filter\n        *ngIf=\"field && !customFilter && colType == 'string'\"\n        [clrDgStringFilter]=\"registered\"\n        [(clrFilterValue)]=\"filterValue\"\n      ></clr-dg-string-filter>\n\n      <clr-dg-numeric-filter\n        *ngIf=\"field && !customFilter && colType == 'number'\"\n        [clrDgNumericFilter]=\"registered\"\n        [(clrFilterValue)]=\"filterValue\"\n      ></clr-dg-numeric-filter>\n\n      <ng-template #columnTitle>\n        <ng-content></ng-content>\n      </ng-template>\n\n      <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n        <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n      </span>\n\n      <clr-dg-column-separator *ngIf=\"showSeparator\"></clr-dg-column-separator>\n    </div>\n  `,\n  providers: [ClrPopoverPositionService, ClrPopoverEventsService, ClrPopoverToggleService],\n  host: {\n    '[class.datagrid-column]': 'true',\n    '[attr.aria-sort]': 'ariaSort',\n    role: 'columnheader',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrDatagridColumn<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements OnDestroy, OnInit, OnChanges {\n  constructor(\n    private _sort: Sort<T>,\n    filters: FiltersProvider<T>,\n    private vcr: ViewContainerRef,\n    private detailService: DetailService,\n    private changeDetectorRef: ChangeDetectorRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(filters);\n    this.subscriptions.push(this.listenForSortingChanges());\n    this.subscriptions.push(this.listenForDetailPaneChanges());\n  }\n\n  public showSeparator = true;\n\n  /**\n   * Subscription to the sort service changes\n   */\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForDetailPaneChanges() {\n    return this.detailService.stateChange.subscribe(state => {\n      if (this.showSeparator !== !state) {\n        this.showSeparator = !state;\n        // Have to manually change because of OnPush\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  private listenForSortingChanges() {\n    return this._sort.change.subscribe(sort => {\n      // Need to manually mark the component to be checked\n      // for both activating and deactivating sorting\n      this.changeDetectorRef.markForCheck();\n      // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n      if (this.sortOrder !== ClrDatagridSortOrder.UNSORTED && sort.comparator !== this._sortBy) {\n        this._sortOrder = ClrDatagridSortOrder.UNSORTED;\n        this.sortOrderChange.emit(this._sortOrder);\n        // removes the sortIcon when column becomes unsorted\n        this.sortIcon = null;\n        this._sortDirection = null;\n      }\n      // deprecated: to be removed - START\n      if (this.sorted && sort.comparator !== this._sortBy) {\n        this._sorted = false;\n        this.sortedChange.emit(false);\n      }\n      // deprecated: to be removed - END\n    });\n  }\n\n  /*\n   * What type is this column?  This defaults to STRING, but can also be\n   * set to NUMBER.  Unsupported types default to STRING. Users can set it\n   * via the [clrDgColType] input by setting it to 'string' or 'number'.\n   */\n\n  private _colType: 'string' | 'number' = 'string';\n\n  get colType() {\n    return this._colType;\n  }\n\n  // TODO: We might want to make this an enum in the future\n  @Input('clrDgColType')\n  set colType(value: 'string' | 'number') {\n    this._colType = value;\n  }\n\n  /*\n   * Simple object property shortcut, activates both sorting and filtering\n   * based on native comparison of the specified property on the items.\n   */\n  private _field: string;\n  public get field() {\n    return this._field;\n  }\n\n  @Input('clrDgField')\n  public set field(field: string) {\n    if (typeof field === 'string') {\n      this._field = field;\n\n      if (!this._sortBy) {\n        this._sortBy = new DatagridPropertyComparator(field);\n      }\n    }\n  }\n\n  private setupDefaultFilter(field: string, colType: 'string' | 'number') {\n    if (colType === 'number') {\n      this.setFilter(new DatagridNumericFilterImpl(new DatagridPropertyNumericFilter(field)));\n    } else if (colType === 'string') {\n      this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n    }\n    if (this.filter && this.initFilterValue) {\n      this.updateFilterValue = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this field property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.colType &&\n      changes.colType.currentValue &&\n      changes.colType.currentValue !== changes.colType.previousValue\n    ) {\n      if (!this.customFilter && !this.filter && this.colType && this.field) {\n        this.setupDefaultFilter(this.field, this.colType);\n      }\n    }\n    if (changes.field && changes.field.currentValue && changes.field.currentValue !== changes.field.previousValue) {\n      if (!this.customFilter && this.colType) {\n        this.setupDefaultFilter(this.field, this.colType);\n      }\n    }\n  }\n\n  /**\n   * ClrDatagridComparatorInterface to use when sorting the column\n   */\n\n  private _sortBy: ClrDatagridComparatorInterface<T>;\n\n  public get sortBy() {\n    return this._sortBy;\n  }\n\n  @Input('clrDgSortBy')\n  public set sortBy(comparator: ClrDatagridComparatorInterface<T> | string) {\n    if (typeof comparator === 'string') {\n      this._sortBy = new DatagridPropertyComparator(comparator);\n    } else {\n      if (comparator) {\n        this._sortBy = comparator;\n      } else {\n        if (this.field) {\n          this._sortBy = new DatagridPropertyComparator(this.field);\n        } else {\n          delete this._sortBy;\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicates if the column is sortable\n   */\n  public get sortable(): boolean {\n    return !!this._sortBy;\n  }\n\n  // deprecated: to be removed - START\n  /**\n   * Indicates if the column is currently sorted\n   *\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  private _sorted = false;\n  public get sorted() {\n    return this._sorted;\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Input('clrDgSorted')\n  public set sorted(value: boolean) {\n    if (!value && this.sorted) {\n      this._sorted = false;\n      this._sort.clear();\n    } else if (value && !this.sorted) {\n      this.sort();\n    }\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Output('clrDgSortedChange') public sortedChange = new EventEmitter<boolean>();\n\n  // deprecated: to be removed - END\n\n  /**\n   * Indicates how the column is currently sorted\n   */\n  private _sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.UNSORTED;\n  public get sortOrder() {\n    return this._sortOrder;\n  }\n\n  @Input('clrDgSortOrder')\n  public set sortOrder(value: ClrDatagridSortOrder) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n\n    // only if the incoming order is different from the current one\n    if (this._sortOrder === value) {\n      return;\n    }\n\n    switch (value) {\n      // the Unsorted case happens when the current state is either Asc or Desc\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        this._sort.clear();\n        break;\n      case ClrDatagridSortOrder.ASC:\n        this.sort(false);\n        break;\n      case ClrDatagridSortOrder.DESC:\n        this.sort(true);\n        break;\n    }\n  }\n\n  public get ariaSort() {\n    switch (this._sortOrder) {\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        return 'none';\n      case ClrDatagridSortOrder.ASC:\n        return 'ascending';\n      case ClrDatagridSortOrder.DESC:\n        return 'descending';\n    }\n  }\n\n  @Output('clrDgSortOrderChange') public sortOrderChange = new EventEmitter<ClrDatagridSortOrder>();\n\n  /**\n   * @deprecated\n   *\n   * Use `sortDirection` to indentify the sort direction\n   */\n  public sortIcon: string | null;\n\n  private _sortDirection: 'up' | 'down' | null;\n\n  public get sortDirection(): 'up' | 'down' | null {\n    return this._sortDirection;\n  }\n\n  /**\n   * Sorts the datagrid based on this column\n   */\n  public sort(reverse?: boolean) {\n    if (!this.sortable) {\n      return;\n    }\n\n    this._sort.toggle(this._sortBy, reverse);\n\n    // setting the private variable to not retrigger the setter logic\n    this._sortOrder = this._sort.reverse ? ClrDatagridSortOrder.DESC : ClrDatagridSortOrder.ASC;\n    // Sets the correct icon for current sort order\n    this._sortDirection = this._sortOrder === ClrDatagridSortOrder.DESC ? 'down' : 'up';\n    this.sortIcon = this._sortOrder === ClrDatagridSortOrder.DESC ? 'arrow down' : 'arrow'; // Backward compatibility\n    this.sortOrderChange.emit(this._sortOrder);\n\n    // deprecated: to be removed - START\n    this._sorted = true;\n    this.sortedChange.emit(true);\n    // deprecated: to be removed - END\n  }\n\n  /**\n   * A custom filter for this column that can be provided in the projected content\n   */\n  public customFilter = false;\n\n  @ContentChild(CustomFilter)\n  public set projectedFilter(custom: any) {\n    if (custom) {\n      this.deleteFilter();\n      this.customFilter = true;\n    }\n  }\n\n  @Input('clrFilterValue')\n  public set updateFilterValue(newValue: string | [number, number]) {\n    if (this.filter) {\n      if (this.filter instanceof DatagridStringFilterImpl) {\n        if (!newValue || typeof newValue !== 'string') {\n          newValue = '';\n        }\n        if (newValue !== this.filter.value) {\n          this.filter.value = newValue;\n        }\n      } else if (this.filter instanceof DatagridNumericFilterImpl) {\n        if (!newValue || !(newValue instanceof Array)) {\n          newValue = [null, null];\n        }\n        if (newValue.length === 2 && (newValue[0] !== this.filter.value[0] || newValue[1] !== this.filter.value[1])) {\n          this.filter.value = newValue;\n        }\n      }\n    } else {\n      this.initFilterValue = newValue;\n    }\n  }\n\n  // This property holds filter value temporarily while this.filter property is not yet registered\n  // When this.filter is registered, this property value would be used update this.filter.value\n  private initFilterValue: string | [number, number];\n\n  public get filterValue() {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      return this.filter.value;\n    }\n    return null;\n  }\n\n  public set filterValue(newValue: string | [number, number]) {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      this.updateFilterValue = newValue;\n      this.filterValueChange.emit(this.filter.value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedColumn, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedColumn, this.vcr).columnView;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\n\n@Injectable()\nexport class Items<T = any> {\n  constructor(private _filters: FiltersProvider<T>, private _sort: Sort<T>, private _page: Page) {}\n\n  /**\n   * Indicates if the data is currently loading\n   */\n  public loading = false;\n\n  // TODO: Verify that trackBy is registered for the *ngFor case too\n  /**\n   * Tracking function to identify objects. Default is reference equality.\n   */\n  public trackBy: TrackByFunction<T> = (_index: number, item: T) => item;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private _filtersSub: Subscription;\n  private _sortSub: Subscription;\n  private _pageSub: Subscription;\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    if (this._filtersSub) {\n      this._filtersSub.unsubscribe();\n    }\n    if (this._sortSub) {\n      this._sortSub.unsubscribe();\n    }\n    if (this._pageSub) {\n      this._pageSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Whether we should use smart items for this datagrid or let the user handle\n   * everything.\n   */\n  private _smart = false;\n  public get smart(): boolean {\n    return this._smart;\n  }\n  public smartenUp() {\n    this._smart = true;\n    /*\n     * These observers trigger a chain of function: filter -> sort -> paginate\n     * An observer up the chain re-triggers all the operations that follow it.\n     */\n    this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n    this._sortSub = this._sort.change.subscribe(() => {\n      // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n      // to get the original order back\n      if (!this._sort.comparator) {\n        this._filterItems();\n      } else {\n        this._sortItems();\n      }\n    });\n    this._pageSub = this._page.change.subscribe(() => this._changePage());\n  }\n\n  /**\n   * List of all items in the datagrid\n   */\n  private _all: T[];\n  public get all() {\n    return this._all;\n  }\n  public set all(items: T[]) {\n    this._all = items;\n    this.emitAllChanges(items);\n    if (this.smart) {\n      this._filterItems();\n    } else {\n      this._displayed = items;\n      this.emitChange();\n    }\n  }\n\n  /**\n   * Manually recompute the list of displayed items\n   */\n  public refresh() {\n    if (this.smart) {\n      this._filterItems();\n    }\n  }\n\n  /**\n   * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n   */\n  private _filtered: T[];\n\n  /**\n   * List of items currently displayed\n   */\n  private _displayed: T[] = [];\n  public get displayed(): T[] {\n    // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n    return this._displayed;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to items changes\n   */\n  private _change = new Subject<T[]>();\n  private emitChange() {\n    this._change.next(this.displayed);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[]> {\n    return this._change.asObservable();\n  }\n\n  private _allChanges = new Subject<T[]>();\n  private emitAllChanges(items: T[]): void {\n    this._allChanges.next(items);\n  }\n\n  public get allChanges(): Observable<T[]> {\n    return this._allChanges.asObservable();\n  }\n\n  /**\n   * Checks if we don't have data to process yet, to abort early operations\n   */\n  private get uninitialized() {\n    return !this._all;\n  }\n\n  /**\n   * FiltersProvider items from the raw list\n   */\n  private _filterItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._filters.hasActiveFilters()) {\n      this._filtered = this._all.filter(item => this._filters.accepts(item));\n    } else {\n      // Work on a shallow copy of the array, to not modify the user's model\n      this._filtered = this._all.slice();\n    }\n    this._page.totalItems = this._filtered.length;\n    this._sortItems();\n  }\n\n  /**\n   * Sorts items in the filtered list\n   */\n  private _sortItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._sort.comparator) {\n      this._filtered.sort((a, b) => this._sort.compare(a, b));\n    }\n    this._changePage();\n  }\n\n  /**\n   * Extracts the current page from the sorted list\n   */\n  private _changePage() {\n    // If we know we have pagination but the page size hasn't been set yet, we wait for it.\n    if (this.uninitialized || (this._page.activated && this._page.size === 0)) {\n      return;\n    }\n    if (this._page.size > 0) {\n      this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n    } else {\n      this._displayed = this._filtered;\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Items } from './providers/items';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrDgItems][clrDgItemsOf]',\n})\nexport class ClrDatagridItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private differ: IterableDiffer<T> | null = null;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrDgItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : []; // local copy for ngOnChange diffing\n  }\n\n  @Input('clrDgItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.items.trackBy = value;\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private items: Items,\n    private vcr: ViewContainerRef\n  ) {\n    items.smartenUp();\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      items.change.subscribe(newItems => {\n        this.iterableProxy.ngForOf = newItems;\n        this.iterableProxy.ngDoCheck();\n      })\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this._rawItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this._rawItems);\n      if (changes) {\n        // TODO: not very efficient right now,\n        // but premature optimization is the root of all evil.\n        this.items.all = this._rawItems;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { Items } from './providers/items';\n\n@Component({\n  selector: 'clr-dg-placeholder',\n  template: `\n    <div class=\"datagrid-placeholder\" [class.datagrid-empty]=\"emptyDatagrid\" role=\"row\">\n      <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n      <span role=\"gridcell\"><ng-content *ngIf=\"emptyDatagrid\"></ng-content></span>\n    </div>\n  `,\n  host: { '[class.datagrid-placeholder-container]': 'true' },\n})\nexport class ClrDatagridPlaceholder<T = any> {\n  constructor(private items: Items<T>) {}\n\n  /**\n   * Tests if the datagrid is empty, meaning it doesn't contain any items\n   */\n  public get emptyDatagrid() {\n    return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SignpostFocusManager {\n  private _triggerEl: HTMLElement;\n\n  set triggerEl(value: HTMLElement) {\n    this._triggerEl = value;\n  }\n\n  focusTrigger() {\n    if (this._triggerEl) {\n      this._triggerEl.focus();\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SignpostIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  setId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, HostListener, Inject, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\n\n@Directive({\n  selector: '[clrSignpostTrigger]',\n  host: {\n    class: 'signpost-trigger',\n    '[attr.aria-label]': 'commonStrings.keys.signpostToggle',\n    '[attr.aria-expanded]': 'ariaExpanded',\n    '[attr.aria-controls]': 'ariaControl',\n    '[class.active]': 'isOpen',\n  },\n})\n\n/*********\n *\n * @description\n * A Directive added to the ClrSignpost Trigger button that will call the ClrSignpost.toggle() function to hide/show the\n * ClrSignpostContent.\n *\n */\nexport class ClrSignpostTrigger implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  public ariaExpanded: boolean;\n  public ariaControl: string;\n  public isOpen: boolean;\n\n  private document: Document;\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit() {\n    this.signpostFocusManager.triggerEl = this.el.nativeElement;\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe((isOpen: boolean) => {\n        this.ariaExpanded = isOpen;\n\n        const prevIsOpen = this.isOpen;\n        this.isOpen = isOpen;\n\n        // openChange fires false on initialization because signpost starts as closed by default\n        // but we shouldn't focus on that initial false value\n        // we should focus back only if it's closed after being opened\n        if (!this.isOpen && prevIsOpen) {\n          this.focusOnClose();\n        }\n      }),\n      this.signpostIdService.id.subscribe(idChange => (this.ariaControl = idChange))\n    );\n  }\n\n  private focusOnClose() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    // we have to set the focus back on the trigger only if the focus is reset back to the body element\n    // if the focus is on another element, we are not allowed to move that focus back to this trigger again.\n    if (!this.isOpen && this.document.activeElement === this.document.body) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  /**********\n   *\n   * @description\n   * click handler for the ClrSignpost trigger button used to hide/show ClrSignpostContent.\n   */\n  @HostListener('click', ['$event'])\n  onSignpostTriggerClick(event: Event): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, ElementRef } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { ClrSignpostTrigger } from './signpost-trigger';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\n\n@Component({\n  selector: 'clr-signpost',\n  template: `\n    <ng-container *ngIf=\"!useCustomTrigger\">\n      <button type=\"button\" class=\"signpost-action btn btn-small btn-link\" clrSignpostTrigger>\n        <cds-icon shape=\"info-circle\" [attr.title]=\"commonStrings.keys.info\"></cds-icon>\n      </button>\n    </ng-container>\n\n    <ng-content></ng-content>\n  `,\n  host: { '[class.signpost]': 'true' },\n  providers: [\n    ClrPopoverToggleService,\n    SignpostFocusManager,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    SignpostIdService,\n  ],\n})\n\n/*********\n *\n * @class ClrSignpost\n *\n * @description\n * Class used to configure and control the state of a ClrSignpost and its associated ClrSignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n *\n */\nexport class ClrSignpost {\n  constructor(public commonStrings: ClrCommonStringsService) {}\n\n  /**********\n   * @property useCustomTrigger\n   *\n   * @description\n   * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n   *\n   */\n  public useCustomTrigger = false;\n\n  /**********\n   * @property signPostTrigger\n   *\n   * @description\n   * Uses ContentChild to check for a user supplied element with the ClrSignpostTrigger on it.\n   *\n   */\n  @ContentChild(ClrSignpostTrigger)\n  set customTrigger(trigger: ClrSignpostTrigger) {\n    this.useCustomTrigger = !!trigger;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-cell',\n  template: `\n    <ng-template #cellPortal>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class WrappedCell implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n  @ViewChild('cellPortal') templateRef: TemplateRef<void>;\n  cellView: EmbeddedViewRef<void>; // the cells projected view\n\n  ngAfterViewInit() {\n    this.cellView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.cellView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridDisplayMode {\n  DISPLAY,\n  CALCULATE,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridRenderStep {\n  ALIGN_COLUMNS,\n  CALCULATE_MODE_ON,\n  CALCULATE_MODE_OFF,\n  CLEAR_WIDTHS, // Note this is listened to by both cells and columns\n  COMPUTE_COLUMN_WIDTHS,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChildren, Injector, OnInit, QueryList, ViewContainerRef } from '@angular/core';\n\nimport { ClrSignpost } from '../../popover/signpost/signpost';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { WrappedCell } from './wrapped-cell';\n\n@Component({\n  selector: 'clr-dg-cell',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.datagrid-cell]': 'true',\n    '[class.datagrid-signpost-trigger]': 'signpost.length > 0',\n    role: 'gridcell',\n  },\n})\nexport class ClrDatagridCell implements OnInit {\n  /*********\n   * @property signpost\n   *\n   * @description\n   * @ContentChild is used to detect the presence of a Signpost in the projected content.\n   * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n   *\n   */\n  @ContentChildren(ClrSignpost) signpost: QueryList<ClrSignpost>;\n\n  constructor(private vcr: ViewContainerRef) {}\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedCell, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedCell, this.vcr).cellView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\n@Injectable()\nexport class DatagridRenderOrganizer {\n  protected _renderStep: Subject<DatagridRenderStep> = new Subject<DatagridRenderStep>();\n  public get renderStep(): Observable<DatagridRenderStep> {\n    return this._renderStep.asObservable();\n  }\n\n  public filterRenderSteps(step: DatagridRenderStep) {\n    return this.renderStep.pipe(filter(testStep => step === testStep));\n  }\n\n  private alreadySized = false;\n\n  public resize() {\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_ON);\n    if (this.alreadySized) {\n      this._renderStep.next(DatagridRenderStep.CLEAR_WIDTHS);\n    }\n    this._renderStep.next(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS);\n    this._renderStep.next(DatagridRenderStep.ALIGN_COLUMNS);\n    this.alreadySized = true;\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_OFF);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum SelectionType {\n  None,\n  Single,\n  Multi,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridDisplayMode } from '../enums/display-mode.enum';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\n@Injectable()\nexport class DisplayModeService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  protected _view: BehaviorSubject<DatagridDisplayMode> = new BehaviorSubject<DatagridDisplayMode>(\n    DatagridDisplayMode.DISPLAY\n  );\n\n  constructor(renderOrganizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_ON)\n        .subscribe(() => this._view.next(DatagridDisplayMode.CALCULATE))\n    );\n\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_OFF)\n        .subscribe(() => this._view.next(DatagridDisplayMode.DISPLAY))\n    );\n  }\n\n  public get view(): Observable<DatagridDisplayMode> {\n    return this._view.asObservable();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction, NgZone } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Items } from './items';\nimport { SelectionType } from '../enums/selection-type';\nimport { debounceTime } from 'rxjs/operators';\n\nlet nbSelection = 0;\n\n@Injectable()\nexport class Selection<T = any> {\n  public id: string;\n  public preserveSelection = false;\n  private prevSelectionRefs: T[] = []; // Refs of selected items\n  private prevSingleSelectionRef: T; // Ref of single selected item\n  private lockedRefs: T[] = []; // Ref of locked items\n\n  constructor(private _items: Items<T>, private _filters: FiltersProvider<T>, private _zone: NgZone) {\n    this.id = 'clr-dg-selection' + nbSelection++;\n\n    this.subscriptions.push(\n      this._filters.change.subscribe(() => {\n        if (!this._selectable || this.preserveSelection) {\n          return;\n        }\n        this.clearSelection();\n      })\n    );\n\n    this.subscriptions.push(\n      this._items.allChanges.subscribe(updatedItems => {\n        // Reset the lockedRefs;\n        const updateLockedRef: T[] = [];\n\n        switch (this.selectionType) {\n          case SelectionType.None: {\n            break;\n          }\n\n          case SelectionType.Single: {\n            let newSingle: any;\n            const trackBy: TrackByFunction<T> = this._items.trackBy;\n            let selectionUpdated = false;\n\n            // if the currentSingle has been set before data was loaded, we look up and save the ref from current data set\n            if (this.currentSingle && !this.prevSingleSelectionRef) {\n              if (this._items.all && this._items.trackBy) {\n                const lookup = this._items.all.findIndex(maybe => maybe === this.currentSingle);\n                this.prevSingleSelectionRef = this._items.trackBy(lookup, this.currentSingle);\n              }\n            }\n\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              // If one of the updated items is the previously selectedSingle, set it as the new one\n              if (this.prevSingleSelectionRef === ref) {\n                newSingle = item;\n                selectionUpdated = true;\n              }\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // If we're using smart datagrids, we expect all items to be present in the updatedItems array.\n            // Therefore, we should delete the currentSingle if it used to be defined but doesn't exist anymore.\n            // No explicit \"delete\" is required, since newSingle would be undefined at this point.\n            // Marking it as selectionUpdated here will set currentSingle to undefined below in the setTimeout.\n            if (this._items.smart && !newSingle) {\n              selectionUpdated = true;\n            }\n\n            // TODO: Discussed this with Eudes and this is fine for now.\n            // But we need to figure out a different pattern for the\n            // child triggering the parent change detection problem.\n            // Using setTimeout for now to fix this.\n            setTimeout(() => {\n              if (selectionUpdated) {\n                this.currentSingle = newSingle;\n              }\n            }, 0);\n            break;\n          }\n\n          case SelectionType.Multi: {\n            let leftOver: any[] = this.current.slice();\n            const trackBy: TrackByFunction<any> = this._items.trackBy;\n            let selectionUpdated = false;\n\n            // if the current has been set before data was loaded, we look up and save the ref from current data set\n            if (this.current.length > 0 && this.prevSelectionRefs.length !== this.current.length) {\n              if (this._items.all && this._items.trackBy) {\n                this.prevSelectionRefs = [];\n                this.current.forEach(item => {\n                  const lookup = this._items.all.findIndex(maybe => maybe === item);\n                  this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n                });\n              }\n            }\n\n            // Duplicate loop, when the issue is issue#2342 is revisited keep in mind that\n            // we need to go over every updated item and check to see if there are valid to be\n            // locked or not and update it. When only add items that are found in the lockedRefs back.\n            //\n            // The both loops below that goes over updatedItems could be combined into one.\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // TODO: revisit this when we work on https://github.com/vmware/clarity/issues/2342\n            // currently, the selection is cleared when filter is applied, so the logic inside\n            // the if statement below results in broken behavior.\n            if (leftOver.length > 0) {\n              updatedItems.forEach((item, index) => {\n                const ref = trackBy(index, item);\n                // Look in current selected refs array if item is selected, and update actual value\n                const selectedIndex = this.prevSelectionRefs.indexOf(ref);\n                if (selectedIndex > -1) {\n                  leftOver[selectedIndex] = item;\n                  selectionUpdated = true;\n                }\n              });\n\n              // Filter out any unmatched items if we're using smart datagrids where we expect all items to be\n              // present\n              if (this._items.smart) {\n                leftOver = leftOver.filter(selected => updatedItems.indexOf(selected) > -1);\n                if (this.current.length !== leftOver.length) {\n                  selectionUpdated = true;\n                }\n              }\n\n              // TODO: Discussed this with Eudes and this is fine for now.\n              // But we need to figure out a different pattern for the\n              // child triggering the parent change detection problem.\n              // Using setTimeout for now to fix this.\n              setTimeout(() => {\n                if (selectionUpdated) {\n                  this.current = leftOver;\n                }\n              }, 0);\n            }\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n        // Sync locked items\n        this.lockedRefs = updateLockedRef;\n      })\n    );\n\n    this.subscriptions.push(this.valueCollector.pipe(debounceTime(0)).subscribe(() => this.emitChange()));\n  }\n\n  public clearSelection(): void {\n    this._current = [];\n    this.prevSelectionRefs = [];\n    this.prevSingleSelectionRef = null;\n    this._currentSingle = null;\n    this.emitChange();\n  }\n\n  private _selectionType: SelectionType = SelectionType.None;\n  public get selectionType(): SelectionType {\n    return this._selectionType;\n  }\n  public set selectionType(value: SelectionType) {\n    if (value === this.selectionType) {\n      return;\n    }\n    this._selectionType = value;\n    if (value === SelectionType.None) {\n      delete this.current;\n    } else {\n      this.updateCurrent([], false);\n    }\n  }\n\n  /** @deprecated since 2.0, remove in 3.0 */\n  public rowSelectionMode = false;\n\n  private get _selectable(): boolean {\n    return this._selectionType === SelectionType.Multi || this._selectionType === SelectionType.Single;\n  }\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * The current selection in single selection type\n   */\n  private _currentSingle: T;\n  public get currentSingle(): T {\n    return this._currentSingle;\n  }\n  public set currentSingle(value: T) {\n    if (value === this._currentSingle) {\n      return;\n    }\n\n    this._currentSingle = value;\n    if (this._items.all && this._items.trackBy && value) {\n      const lookup = this._items.all.findIndex(maybe => maybe === value);\n      this.prevSingleSelectionRef = this._items.trackBy(lookup, value);\n    }\n    this.emitChange();\n  }\n\n  /**\n   * The current selection\n   */\n  private _current: T[];\n  public get current(): T[] {\n    return this._current;\n  }\n  public set current(value: T[]) {\n    this.updateCurrent(value, true);\n  }\n\n  private valueCollector: Subject<T[]> = new Subject<T[]>();\n  public updateCurrent(value: T[], emit: boolean) {\n    this._current = value;\n\n    if (emit) {\n      this.valueCollector.next(value);\n    }\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to selection changes\n   */\n  private _change = new Subject<T[] | T>();\n  private emitChange() {\n    if (this._selectionType === SelectionType.Single) {\n      this._change.next(this.currentSingle);\n    } else if (this._selectionType === SelectionType.Multi) {\n      this._change.next(this.current);\n    }\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[] | T> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Checks if an item is currently selected\n   */\n  public isSelected(item: T): boolean {\n    if (this._selectionType === SelectionType.Single) {\n      return this.currentSingle === item;\n    } else if (this._selectionType === SelectionType.Multi) {\n      return this.current.indexOf(item) >= 0;\n    }\n    return false;\n  }\n\n  /**\n   * Selects an item\n   */\n  private selectItem(item: T): void {\n    this.current = this.current.concat(item);\n    if (this._items.trackBy && this._items.all) {\n      // Push selected ref onto array\n      const lookup = this._items.all.findIndex(maybe => maybe === item);\n      this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n    }\n  }\n\n  /**\n   * Deselects an item\n   */\n  private deselectItem(indexOfItem: number): void {\n    this.current = this.current.slice(0, indexOfItem).concat(this.current.slice(indexOfItem + 1));\n    if (this._items.trackBy && indexOfItem < this.prevSelectionRefs.length) {\n      // Keep selected refs array in sync\n      const removedItems = this.prevSelectionRefs.splice(indexOfItem, 1);\n      // locked reference is no longer needed (if any)\n      this.lockedRefs = this.lockedRefs.filter(locked => locked !== removedItems[0]);\n    }\n  }\n\n  /**\n   * Selects or deselects an item\n   */\n  public setSelected(item: T, selected: boolean) {\n    const index = this.current ? this.current.indexOf(item) : -1;\n\n    switch (this._selectionType) {\n      case SelectionType.None:\n        break;\n      case SelectionType.Single:\n        // in single selection, set currentSingle method should be used\n        break;\n      case SelectionType.Multi:\n        if (index >= 0 && !selected) {\n          this.deselectItem(index);\n        } else if (index < 0 && selected) {\n          this.selectItem(item);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Checks if all currently displayed items are selected\n   */\n  public isAllSelected(): boolean {\n    if (this._selectionType !== SelectionType.Multi || !this._items.displayed) {\n      return false;\n    }\n    // make sure to exclude the locked items from the list when counting\n    const displayedItems: T[] = this._items.displayed.filter(item => {\n      return this.isLocked(item) === false;\n    });\n\n    const nbDisplayed = displayedItems.length;\n    if (nbDisplayed < 1) {\n      return false;\n    }\n    const temp: T[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n    return temp.length === displayedItems.length;\n  }\n\n  /**\n   * Make sure that it could be locked\n   *\n   * @remark\n   * Check also is items.all an array, if not there is no nothing to lock or compare to\n   *\n   */\n  private canItBeLocked(): boolean {\n    // We depend on the trackBy and all so there are part of the requirment of is item could be locked\n    return this._selectionType !== SelectionType.None && Array.isArray(this._items.all);\n  }\n\n  /**\n   * Lock and unlock item\n   */\n  public lockItem(item: T, lock: boolean) {\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(\n        this._items.all.findIndex(maybe => maybe === item),\n        item\n      );\n      if (lock === true) {\n        // Add to lockedRef\n        this.lockedRefs.push(ref);\n      } else {\n        // Remove from lockedRef\n        this.lockedRefs = this.lockedRefs.filter(lockedItem => ref !== lockedItem);\n      }\n    }\n  }\n\n  /**\n   * Check is item locked or not by searcing into lockedRefs for entry\n   */\n  public isLocked(item: T): boolean {\n    /**\n     * The check for selectionType will boost the performence by NOT searching\n     * into the array when there is no need for that.\n     */\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(\n        this._items.all.findIndex(maybe => maybe === item),\n        item\n      );\n      return this.lockedRefs.indexOf(ref) > -1;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects or deselects all currently displayed items\n   */\n  public toggleAll() {\n    if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n      return;\n    }\n    /**\n     * If every currently displayed item is already selected, we clear them.\n     * If at least one item isn't selected, we select every currently displayed item.\n     */\n    if (this.isAllSelected()) {\n      this._items.displayed.forEach(item => {\n        const currentIndex = this.current.indexOf(item);\n        if (currentIndex > -1 && this.isLocked(item) === false) {\n          this.deselectItem(currentIndex);\n        }\n      });\n    } else {\n      this._items.displayed.forEach(item => {\n        if (this.current.indexOf(item) < 0 && this.isLocked(item) === false) {\n          this.selectItem(item);\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-row',\n  template: `\n    <ng-template #rowPortal>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class WrappedRow implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('rowPortal') templateRef: TemplateRef<void>;\n  rowView: EmbeddedViewRef<void>; // the rows projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.rowView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.rowView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrLoadingState } from '../../utils/loading/loading';\n\nlet nbRow = 0;\n\n@Injectable()\nexport class DatagridIfExpandService extends IfExpandService {\n  expandableId = '';\n\n  constructor() {\n    super();\n    nbRow++;\n    this.expandableId = 'clr-dg-expandable-row-' + nbRow;\n  }\n  // due to the es5 spec if the set is overridden on base class the getter must also be overridden\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._animate.next();\n      this._expandChange.next(value);\n    }\n  }\n\n  loadingStateChange(state: ClrLoadingState) {\n    super.loadingStateChange(state);\n    if (state !== ClrLoadingState.LOADING) {\n      this._animate.next();\n    }\n  }\n\n  private _replace: BehaviorSubject<boolean> = new BehaviorSubject(false as boolean);\n  get replace(): Observable<boolean> {\n    return this._replace.asObservable();\n  }\n\n  setReplace(replaceValue: boolean) {\n    this._replace.next(replaceValue);\n  }\n\n  private _animate: Subject<boolean> = new Subject<boolean>();\n  get animate(): Observable<boolean> {\n    return this._animate.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrExpandableAnimation } from '../../utils/animations/expandable-animation/expandable-animation';\nimport { DetailService } from './providers/detail.service';\n\nlet nbRow = 0;\n\n@Component({\n  selector: 'clr-dg-row',\n  templateUrl: './datagrid-row.html',\n  host: {\n    '[class.datagrid-row]': 'true',\n    '[class.datagrid-selected]': 'selected',\n    '[attr.aria-owns]': 'id',\n    role: 'rowgroup',\n  },\n  providers: [\n    DatagridIfExpandService,\n    { provide: IfExpandService, useExisting: DatagridIfExpandService },\n    { provide: LoadingListener, useExisting: DatagridIfExpandService },\n  ],\n})\nexport class ClrDatagridRow<T = any> implements AfterContentInit, AfterViewInit {\n  public id: string;\n  public radioId: string;\n  public checkboxId: string;\n  public expandableId: string;\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ViewChild(ClrExpandableAnimation) expandAnimation: ClrExpandableAnimation;\n\n  /**\n   * Model of the row, to use for selection\n   */\n  @Input('clrDgItem') item: T;\n\n  public replaced: boolean;\n\n  public expandAnimationTrigger = false;\n\n  constructor(\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    public globalExpandable: ExpandableRowsCount,\n    public expand: DatagridIfExpandService,\n    public detailService: DetailService,\n    private displayMode: DisplayModeService,\n    private vcr: ViewContainerRef,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    nbRow++;\n    this.id = 'clr-dg-row' + nbRow;\n    this.radioId = 'clr-dg-row-rd' + nbRow;\n    this.checkboxId = 'clr-dg-row-cb' + nbRow;\n    this.expandableId = expand.expandableId;\n\n    this.subscriptions.push(\n      combineLatest(this.expand.replace, this.expand.expandChange).subscribe(\n        ([expandReplaceValue, expandChangeValue]) => {\n          if (expandReplaceValue && expandChangeValue) {\n            // replaced and expanding\n            this.replaced = true;\n            this.renderer.addClass(this.el.nativeElement, 'datagrid-row-replaced');\n          } else {\n            this.replaced = false;\n            // Handles these cases: not replaced and collapsing & replaced and\n            // collapsing and not replaced and expanding.\n            this.renderer.removeClass(this.el.nativeElement, 'datagrid-row-replaced');\n          }\n        }\n      )\n    );\n  }\n\n  private _selected = false;\n  /**\n   * Indicates if the row is selected\n   */\n  public get selected() {\n    if (this.selection.selectionType === SelectionType.None) {\n      return this._selected;\n    } else {\n      return this.selection.isSelected(this.item);\n    }\n  }\n\n  @Input('clrDgSelected')\n  public set selected(value: boolean) {\n    if (this.selection.selectionType === SelectionType.None) {\n      this._selected = value;\n    } else {\n      this.selection.setSelected(this.item, value);\n    }\n  }\n\n  // By default every item is selectable; it becomes not selectable only if it's explicitly set to false\n  @Input('clrDgSelectable')\n  public set clrDgSelectable(value: boolean) {\n    this.selection.lockItem(this.item, value === false);\n  }\n\n  public get clrDgSelectable() {\n    return !this.selection.isLocked(this.item);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<boolean>(false);\n\n  public toggle(selected = !this.selected) {\n    if (selected !== this.selected) {\n      this.selected = selected;\n      this.selectedChanged.emit(selected);\n    }\n  }\n\n  public get expanded() {\n    return this.expand.expanded;\n  }\n\n  @Input('clrDgExpanded')\n  public set expanded(value: boolean) {\n    this.expand.expanded = value;\n  }\n\n  @Output('clrDgExpandedChange') expandedChange = new EventEmitter<boolean>(false);\n\n  public toggleExpand() {\n    if (this.expand.expandable) {\n      this.expandAnimation.updateStartHeight();\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  @ViewChild('detailButton') detailButton: HTMLButtonElement;\n\n  private _detailOpenLabel = '';\n  @Input()\n  set clrDgDetailOpenLabel(label: string) {\n    this._detailOpenLabel = label;\n  }\n  get clrDgDetailOpenLabel(): string {\n    return this._detailOpenLabel ? this._detailOpenLabel : this.commonStrings.keys.open;\n  }\n  private _detailCloseLabel = '';\n  @Input()\n  set clrDgDetailCloseLabel(label: string) {\n    this._detailCloseLabel = label;\n  }\n  get clrDgDetailCloseLabel(): string {\n    return this._detailCloseLabel ? this._detailCloseLabel : this.commonStrings.keys.close;\n  }\n\n  /*****\n   * property dgCells\n   *\n   * @description\n   * A Query List of the ClrDatagrid cells in this row.\n   *\n   */\n  @ContentChildren(ClrDatagridCell) dgCells: QueryList<ClrDatagridCell>;\n\n  ngAfterContentInit() {\n    this.dgCells.changes.subscribe(() => {\n      this.dgCells.forEach(cell => {\n        if (!cell._view.destroyed) {\n          this._scrollableCells.insert(cell._view);\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.displayMode.view.subscribe(viewChange => {\n        // Listen for view changes and move cells around depending on the current displayType\n        // remove cell views from display view\n        for (let i = this._scrollableCells.length; i > 0; i--) {\n          this._scrollableCells.detach();\n        }\n        // remove cell views from calculated view\n        for (let i = this._calculatedCells.length; i > 0; i--) {\n          this._calculatedCells.detach();\n        }\n        if (viewChange === DatagridDisplayMode.CALCULATE) {\n          this.displayCells = false;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._calculatedCells.insert(cell._view);\n            }\n          });\n        } else {\n          this.displayCells = true;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._scrollableCells.insert(cell._view);\n            }\n          });\n        }\n      }),\n      this.expand.animate.subscribe(() => {\n        this.expandAnimationTrigger = !this.expandAnimationTrigger;\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  public displayCells = false;\n\n  @ViewChild('stickyCells', { read: ViewContainerRef })\n  _stickyCells: ViewContainerRef;\n  @ViewChild('scrollableCells', { read: ViewContainerRef })\n  _scrollableCells: ViewContainerRef;\n  @ViewChild('calculatedCells', { read: ViewContainerRef })\n  _calculatedCells: ViewContainerRef;\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedRow, this.vcr);\n    this.selection.lockItem(this.item, this.clrDgSelectable === false);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedRow, this.vcr).rowView;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DatagridPropertyComparator } from '../built-in/comparators/datagrid-property-comparator';\nimport { ClrDatagridStateInterface } from '../interfaces/state.interface';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\n@Injectable()\nexport class StateProvider<T> {\n  constructor(\n    private filters: FiltersProvider<T>,\n    private sort: Sort<T>,\n    private page: Page,\n    private debouncer: StateDebouncer\n  ) {}\n\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  change: Observable<ClrDatagridStateInterface<T>> = this.debouncer.change.pipe(map(() => this.state));\n\n  /*\n   * By making this a getter, we open the possibility for a setter in the future.\n   * It's been requested a couple times.\n   */\n  get state(): ClrDatagridStateInterface<T> {\n    const state: ClrDatagridStateInterface<T> = {};\n    if (this.page.size > 0) {\n      state.page = {\n        from: this.page.firstItem,\n        to: this.page.lastItem,\n        size: this.page.size,\n        current: this.page.current,\n      };\n    }\n    if (this.sort.comparator) {\n      if (this.sort.comparator instanceof DatagridPropertyComparator) {\n        /*\n         * Special case for the default object property comparator,\n         * we give the property name instead of the actual comparator.\n         */\n        state.sort = { by: (this.sort.comparator as DatagridPropertyComparator<T>).prop, reverse: this.sort.reverse };\n      } else {\n        state.sort = { by: this.sort.comparator, reverse: this.sort.reverse };\n      }\n    }\n\n    const activeFilters = this.filters.getActiveFilters();\n    if (activeFilters.length > 0) {\n      state.filters = [];\n      for (const filter of activeFilters) {\n        if (filter.state) {\n          state.filters.push(filter.state);\n        } else {\n          state.filters.push(filter);\n        }\n      }\n    }\n    return state;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridColumnChanges {\n  WIDTH,\n  HIDDEN,\n}\n\nexport const ALL_COLUMN_CHANGES: DatagridColumnChanges[] = Object.keys(DatagridColumnChanges)\n  .map(key => (DatagridColumnChanges as Record<string, any>)[key])\n  .filter(key => key === parseInt(key, 10)); // extracts only integer keys\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n/**\n * @description\n * Internal datagrid service that holds a reference to the clr-dg-table element and exposes a method to get height.\n */\n@Injectable()\nexport class TableSizeService {\n  private _tableRef: HTMLElement;\n\n  public get tableRef(): HTMLElement {\n    return this._tableRef;\n  }\n\n  public set tableRef(element: HTMLElement) {\n    this._tableRef = element;\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {}\n  public set table(table: ElementRef) {\n    if (isPlatformBrowser(this.platformId) && table.nativeElement) {\n      this.tableRef = table.nativeElement.querySelector('.datagrid-table');\n    }\n  }\n\n  // Used when resizing columns to show the column border being dragged.\n  getColumnDragHeight(): string {\n    if (!this.tableRef) {\n      return null;\n    }\n    return `${this.tableRef.clientHeight}px`;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnStateDiff, ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES } from '../enums/column-changes.enum';\n\n@Injectable()\nexport class ColumnsService {\n  columns: BehaviorSubject<ColumnState>[] = [];\n  private _cache: ColumnState[] = [];\n\n  cache() {\n    this._cache = this.columns.map(subject => {\n      const value = { ...subject.value };\n      delete value.changes;\n      return value;\n    });\n  }\n\n  hasCache() {\n    return !!this._cache.length;\n  }\n\n  resetToLastCache() {\n    this._cache.forEach((state, index) => {\n      // Just emit the exact value from the cache\n      this.columns[index].next({ ...state, changes: ALL_COLUMN_CHANGES });\n    });\n    this._cache = [];\n  }\n\n  get columnStates(): ColumnState[] {\n    return this.columns.map(column => column.value);\n  }\n\n  get hasHideableColumns(): boolean {\n    return this.columnStates.filter(state => state.hideable).length > 0;\n  }\n\n  // Helper method to emit a change to a column only when there is an actual diff to process for that column\n  emitStateChangeAt(columnIndex: number, diff: ColumnStateDiff) {\n    if (!this.columns[columnIndex]) {\n      return;\n    }\n    this.emitStateChange(this.columns[columnIndex], diff);\n  }\n\n  emitStateChange(column: BehaviorSubject<ColumnState>, diff: ColumnStateDiff) {\n    column.next({ ...column.value, ...diff });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { ClrDatagridStateInterface } from './interfaces/state.interface';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { FiltersProvider } from './providers/filters';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { Items } from './providers/items';\nimport { Page } from './providers/page';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { Sort } from './providers/sort';\nimport { StateDebouncer } from './providers/state-debouncer.provider';\nimport { StateProvider } from './providers/state.provider';\nimport { TableSizeService } from './providers/table-size.service';\nimport { DatagridRenderOrganizer } from './render/render-organizer';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-datagrid',\n  templateUrl: './datagrid.html',\n  providers: [\n    Selection,\n    Sort,\n    FiltersProvider,\n    Page,\n    Items,\n    DatagridRenderOrganizer,\n    RowActionService,\n    ExpandableRowsCount,\n    StateDebouncer,\n    DetailService,\n    UNIQUE_ID_PROVIDER,\n    StateProvider,\n    TableSizeService,\n    ColumnsService,\n    DisplayModeService,\n  ],\n  host: {\n    '[class.datagrid-host]': 'true',\n    '[class.datagrid-detail-open]': 'detailService.isOpen',\n  },\n})\nexport class ClrDatagrid<T = any> implements AfterContentInit, AfterViewInit, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    public items: Items<T>,\n    public expandableRows: ExpandableRowsCount,\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    private stateProvider: StateProvider<T>,\n    private displayMode: DisplayModeService,\n    private renderer: Renderer2,\n    public detailService: DetailService,\n    @Inject(UNIQUE_ID) datagridId: string,\n    private el: ElementRef,\n    private page: Page,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.detailService.id = datagridId;\n  }\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  /**\n   * Freezes the datagrid while data is loading\n   */\n  public get loading(): boolean {\n    return this.items.loading;\n  }\n\n  @Input('clrDgLoading')\n  public set loading(value: boolean) {\n    this.items.loading = value;\n  }\n\n  /**\n   * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n   */\n  @Output('clrDgRefresh') public refresh = new EventEmitter<ClrDatagridStateInterface<T>>(false);\n\n  /**\n   * Public method to re-trigger the computation of displayed items manually\n   */\n  public dataChanged() {\n    this.items.refresh();\n  }\n\n  /**\n   * We grab the smart iterator from projected content\n   */\n  @ContentChild(ClrDatagridItems) public iterator: ClrDatagridItems<T>;\n\n  /**\n   * Array of all selected items\n   */\n  @Input('clrDgSelected')\n  set selected(value: T[]) {\n    if (value) {\n      this.selection.selectionType = SelectionType.Multi;\n    } else {\n      this.selection.selectionType = SelectionType.None;\n    }\n    this.selection.updateCurrent(value, false);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<T[]>(false);\n\n  /**\n   * Selected item in single-select mode\n   */\n  @Input('clrDgSingleSelected')\n  set singleSelected(value: T) {\n    this.selection.selectionType = SelectionType.Single;\n    // the clrDgSingleSelected is updated in one of two cases:\n    // 1. an explicit value is passed\n    // 2. is being set to null or undefined, where previously it had a value\n    if (value) {\n      this.selection.currentSingle = value;\n    } else if (this.selection.currentSingle) {\n      this.selection.currentSingle = null;\n    }\n  }\n\n  @Output('clrDgSingleSelectedChange') singleSelectedChanged = new EventEmitter<T>(false);\n\n  @Input() clrDgSingleSelectionAriaLabel: string = this.commonStrings.keys.singleSelectionAriaLabel;\n  @Input() clrDgSingleActionableAriaLabel: string = this.commonStrings.keys.singleActionableAriaLabel;\n  @Input() clrDetailExpandableAriaLabel: string = this.commonStrings.keys.detailExpandableAriaLabel;\n  // Allows disabling of the auto focus on page/state changes (excludes focus management inside of popups)\n  @Input() clrDgDisablePageFocus = false;\n\n  @Input()\n  set clrDgPreserveSelection(state: boolean) {\n    this.selection.preserveSelection = state;\n  }\n  /**\n   * @deprecated since 2.0, remove in 3.0\n   *\n   * Selection/Deselection on row click mode\n   */\n  @Input('clrDgRowSelection')\n  set rowSelectionMode(value: boolean) {\n    this.selection.rowSelectionMode = value;\n  }\n\n  /**\n   * Indicates if all currently displayed items are selected\n   */\n  public get allSelected() {\n    return this.selection.isAllSelected();\n  }\n\n  /**\n   * Selects/deselects all currently displayed items\n   * @param value\n   */\n  public set allSelected(_value: boolean) {\n    /**\n     * This is a setter but we ignore the value.\n     * It's strange, but it lets us have an indeterminate state where only\n     * some of the items are selected.\n     */\n    this.selection.toggleAll();\n  }\n\n  /**\n   * Custom placeholder detection\n   */\n  @ContentChild(ClrDatagridPlaceholder) public placeholder: ClrDatagridPlaceholder<T>;\n\n  /**\n   * Hideable Column data source / detection.\n   */\n  @ContentChildren(ClrDatagridColumn) public columns: QueryList<ClrDatagridColumn<T>>;\n\n  /**\n   * When the datagrid is user-managed without the smart iterator, we get the items displayed\n   * by querying the projected content. This is needed to keep track of the models currently\n   * displayed, typically for selection.\n   */\n\n  @ContentChildren(ClrDatagridRow) rows: QueryList<ClrDatagridRow<T>>;\n  @ViewChild('scrollableColumns', { read: ViewContainerRef })\n  scrollableColumns: ViewContainerRef;\n\n  @ViewChild('datagridTable', { read: ElementRef })\n  datagridTable: ElementRef;\n\n  ngAfterContentInit() {\n    if (!this.items.smart) {\n      this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n    }\n\n    this._subscriptions.push(\n      this.rows.changes.subscribe(() => {\n        if (!this.items.smart) {\n          this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n        }\n        // Remove any projected rows from the displayedRows container\n        // Necessary with Ivy off. See https://github.com/vmware/clarity/issues/4692\n        for (let i = this._displayedRows.length - 1; i >= 0; i--) {\n          if (this._displayedRows.get(i).destroyed) {\n            this._displayedRows.remove(i);\n          }\n        }\n        this.rows.forEach(row => {\n          this._displayedRows.insert(row._view);\n        });\n\n        // Try to update only when there is something cached and its open.\n        if (this.detailService.state && this.detailService.isOpen) {\n          const row = this.rows.find((row, index) => {\n            return this.items.trackBy(index, row.item) === this.items.trackBy(index, this.detailService.state);\n          });\n\n          /**\n           * Reopen updated row or close it\n           */\n          row ? this.detailService.open(row.item, row.detailButton) : this.detailService.close();\n        }\n      })\n    );\n  }\n\n  /**\n   * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n   */\n  ngAfterViewInit() {\n    // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n    this.refresh.emit(this.stateProvider.state);\n    this._subscriptions.push(\n      this.stateProvider.change.subscribe(state => this.refresh.emit(state)),\n      this.selection.change.subscribe(s => {\n        if (this.selection.selectionType === SelectionType.Single) {\n          this.singleSelectedChanged.emit(s as T);\n        } else if (this.selection.selectionType === SelectionType.Multi) {\n          this.selectedChanged.emit(s as T[]);\n        }\n      }),\n      this.page.change.subscribe(() => {\n        if (!this.clrDgDisablePageFocus) {\n          this.datagridTable.nativeElement.focus();\n        }\n      }),\n      // A subscription that listens for displayMode changes on the datagrid\n      this.displayMode.view.subscribe(viewChange => {\n        // Remove any projected columns from the projectedDisplayColumns container\n        for (let i = this._projectedDisplayColumns.length; i > 0; i--) {\n          this._projectedDisplayColumns.detach();\n        }\n        // Remove any projected columns from the projectedCalculationColumns container\n        for (let i = this._projectedCalculationColumns.length; i > 0; i--) {\n          this._projectedCalculationColumns.detach();\n        }\n        // Remove any projected rows from the calculationRows container\n        for (let i = this._calculationRows.length; i > 0; i--) {\n          this._calculationRows.detach();\n        }\n        // Remove any projected rows from the displayedRows container\n        for (let i = this._displayedRows.length; i > 0; i--) {\n          this._displayedRows.detach();\n        }\n        if (viewChange === DatagridDisplayMode.DISPLAY) {\n          // Set state, style for the datagrid to DISPLAY and insert row & columns into containers\n          this.renderer.removeClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedDisplayColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._displayedRows.insert(row._view);\n          });\n        } else {\n          // Set state, style for the datagrid to CALCULATE and insert row & columns into containers\n          this.renderer.addClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedCalculationColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._calculationRows.insert(row._view);\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  resize(): void {\n    this.organizer.resize();\n  }\n\n  @ViewChild('projectedDisplayColumns', { read: ViewContainerRef })\n  _projectedDisplayColumns: ViewContainerRef;\n  @ViewChild('projectedCalculationColumns', { read: ViewContainerRef })\n  _projectedCalculationColumns: ViewContainerRef;\n  @ViewChild('displayedRows', { read: ViewContainerRef })\n  _displayedRows: ViewContainerRef;\n  @ViewChild('calculationRows', { read: ViewContainerRef })\n  _calculationRows: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-action-bar',\n  template: ` <ng-content></ng-content> `,\n  host: { '[class.datagrid-action-bar]': 'true' },\n})\nexport class ClrDatagridActionBar {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Inject, Input, OnDestroy, Output, NgZone, PLATFORM_ID } from '@angular/core';\n\nimport { RowActionService } from './providers/row-action-service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { Subscription } from 'rxjs';\n\nlet clrDgActionId = 0;\n\n@Component({\n  selector: 'clr-dg-action-overflow',\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverToggleService, ClrPopoverEventsService, ClrPopoverPositionService],\n  template: `\n    <button\n      class=\"datagrid-action-toggle\"\n      type=\"button\"\n      role=\"button\"\n      aria-haspopup=\"true\"\n      #anchor\n      [attr.aria-controls]=\"popoverId\"\n      [attr.aria-expanded]=\"open\"\n      [attr.aria-label]=\"commonStrings.keys.rowActions\"\n      clrPopoverAnchor\n      clrPopoverOpenCloseButton\n    >\n      <cds-icon shape=\"ellipsis-vertical\" [attr.title]=\"commonStrings.keys.rowActions\"></cds-icon>\n    </button>\n\n    <div\n      class=\"datagrid-action-overflow\"\n      role=\"menu\"\n      [id]=\"popoverId\"\n      [attr.aria-hidden]=\"!open\"\n      [attr.id]=\"popoverId\"\n      clrFocusTrap\n      (click)=\"closeOverflowContent($event)\"\n      *clrPopoverContent=\"open; at: smartPosition; outsideClickToClose: true; scrollToClose: true\"\n    >\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class ClrDatagridActionOverflow implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.CENTER,\n  };\n\n  constructor(\n    private rowActionService: RowActionService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private zone: NgZone,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    this.rowActionService.register();\n    this.subscriptions.push(\n      this.smartToggleService.openChange.subscribe(openState => {\n        this.open = openState;\n        if (openState) {\n          this.focusFirstButton();\n        }\n      })\n    );\n    this.popoverId = 'clr-action-menu' + clrDgActionId++;\n  }\n\n  ngOnDestroy() {\n    this.rowActionService.unregister();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  closeOverflowContent(event: Event): void {\n    this.smartToggleService.toggleWithEvent(event);\n  }\n\n  private focusFirstButton(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          const firstButton: HTMLButtonElement | null = document.querySelector('button.action-item');\n          if (firstButton) {\n            firstButton.focus();\n          }\n        });\n      });\n    }\n  }\n\n  private _open = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgActionOverflowOpen')\n  public set open(open: boolean) {\n    const openState = !!open;\n    if (!!openState !== this.open) {\n      // prevents chocolate mess\n      this.smartToggleService.open = openState;\n      this.openChange.emit(openState);\n      this._open = openState;\n    }\n  }\n\n  @Output('clrDgActionOverflowOpenChange') public openChange = new EventEmitter<boolean>(false);\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\nconst MIN_COLUMN_WIDTH = 96;\n\n// This service allows DatagridHeaderRenderer and ClrDatagridColumnSeparator\n// to share column resize data with each other.\n\n@Injectable()\nexport class ColumnResizerService {\n  constructor(private el: ElementRef, private domAdapter: DomAdapter, private organizer: DatagridRenderOrganizer) {}\n\n  private widthBeforeResize: number;\n\n  private _resizedBy = 0;\n\n  public get resizedBy() {\n    return this._resizedBy;\n  }\n\n  // is it within the maximum resize range to the left\n  public isWithinMaxResizeRange: boolean;\n\n  public get minColumnWidth() {\n    return this.domAdapter.minWidth(this.el.nativeElement) || MIN_COLUMN_WIDTH;\n  }\n\n  public get maxResizeRange() {\n    return this.widthBeforeResize - this.minColumnWidth;\n  }\n\n  public startResize(): void {\n    this._resizedBy = 0;\n    this.isWithinMaxResizeRange = true;\n    this.widthBeforeResize = this.domAdapter.clientRect(this.el.nativeElement).width;\n  }\n\n  public endResize(): void {\n    this.organizer.resize();\n  }\n\n  public get widthAfterResize(): number {\n    return this.widthBeforeResize + this._resizedBy;\n  }\n\n  public calculateResize(resizedBy: number): void {\n    // calculates the resize amount within the allowed range\n    if (resizedBy < -this.maxResizeRange) {\n      this._resizedBy = -this.maxResizeRange;\n      this.isWithinMaxResizeRange = false;\n    } else {\n      this._resizedBy = resizedBy;\n      this.isWithinMaxResizeRange = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Inject, NgZone, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { KeyCodes, IEKeyCodes } from '../../utils/enums/key-codes.enum';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ColumnResizerService } from './providers/column-resizer.service';\nimport { TableSizeService } from './providers/table-size.service';\n\n// Default resize length on each keyboard move event\nconst KEYBOARD_RESIZE_LENGTH = 12;\n\n@Component({\n  selector: 'clr-dg-column-separator',\n  template: `\n    <button\n      type=\"button\"\n      class=\"datagrid-column-handle\"\n      [attr.aria-label]=\"commonString.keys.columnSeparatorAriaLabel\"\n      [attr.aria-describedby]=\"descriptionId\"\n      clrDraggable\n      [clrGroup]=\"columnSeparatorId\"\n      (clrDragStart)=\"showTracker()\"\n      (clrDragMove)=\"moveTracker($event.dragPosition.moveX)\"\n      (clrDragEnd)=\"hideTracker()\"\n      #columnHandle\n    ></button>\n    <span class=\"clr-sr-only\" [attr.id]=\"descriptionId\">\n      {{ commonString.keys.columnSeparatorDescription }}\n    </span>\n    <div class=\"datagrid-column-resize-tracker\" #resizeTracker></div>\n  `,\n  host: {\n    '[class.datagrid-column-separator]': 'true',\n  },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrDatagridColumnSeparator implements AfterViewInit, OnDestroy {\n  @ViewChild('resizeTracker') private resizeTrackerRef: ElementRef;\n\n  private get resizeTrackerEl() {\n    return this.resizeTrackerRef.nativeElement;\n  }\n\n  @ViewChild('columnHandle') private columnHandleRef: ElementRef;\n\n  private get columnHandleEl() {\n    return this.columnHandleRef.nativeElement;\n  }\n\n  private resizeStartedOnKeyDown = false;\n\n  private isWithinMaxResizeRange: boolean;\n\n  private unlisteners: (() => void)[] = [];\n\n  // Every column draggable separator should have its own unique ID\n  // in order to not conflict with other draggables/droppables.\n  constructor(\n    private columnResizerService: ColumnResizerService,\n    private renderer: Renderer2,\n    private ngZone: NgZone,\n    private tableSizeService: TableSizeService,\n    public commonString: ClrCommonStringsService,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(UNIQUE_ID) public columnSeparatorId: string\n  ) {}\n\n  ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this.unlisteners.push(\n        this.renderer.listen(this.columnHandleEl, 'keydown', event => {\n          this.showTrackerOnFirstKeyDown(event);\n          this.moveTrackerOnKeyDown(event);\n        })\n      );\n      this.unlisteners.push(\n        this.renderer.listen(this.columnHandleEl, 'keyup', event => {\n          this.hideTrackerOnKeyUp(event);\n        })\n      );\n    });\n  }\n\n  get descriptionId(): string {\n    return `${this.columnSeparatorId}-aria-describedby`;\n  }\n\n  public showTracker(): void {\n    this.columnResizerService.startResize();\n    const tableHeight = this.tableSizeService.getColumnDragHeight();\n    this.renderer.setStyle(this.resizeTrackerEl, 'height', tableHeight);\n    this.renderer.setStyle(this.resizeTrackerEl, 'display', 'block');\n  }\n\n  public moveTracker(movedBy: number): void {\n    this.columnResizerService.calculateResize(movedBy);\n    this.renderer.setStyle(this.resizeTrackerEl, 'transform', `translateX(${this.columnResizerService.resizedBy}px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'col-resize');\n    this.redFlagTracker();\n  }\n\n  public hideTracker(): void {\n    this.columnResizerService.endResize();\n    this.renderer.setStyle(this.resizeTrackerEl, 'display', 'none');\n    this.renderer.setStyle(this.resizeTrackerEl, 'transform', `translateX(0px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'auto');\n  }\n\n  private showTrackerOnFirstKeyDown(event: KeyboardEvent): void {\n    if (!this.resizeStartedOnKeyDown && (this.isArrowLeftKeyEvent(event) || this.isArrowRightKeyEvent(event))) {\n      this.resizeStartedOnKeyDown = true;\n      this.renderer.addClass(this.resizeTrackerEl, 'on-arrow-key-resize');\n      this.showTracker();\n    }\n  }\n\n  private moveTrackerOnKeyDown(event: KeyboardEvent): void {\n    if (this.isArrowLeftKeyEvent(event)) {\n      this.moveTracker(this.columnResizerService.resizedBy - KEYBOARD_RESIZE_LENGTH);\n    } else if (this.isArrowRightKeyEvent(event)) {\n      this.moveTracker(this.columnResizerService.resizedBy + KEYBOARD_RESIZE_LENGTH);\n    }\n  }\n\n  private hideTrackerOnKeyUp(event: KeyboardEvent): void {\n    if (this.resizeStartedOnKeyDown && (this.isArrowLeftKeyEvent(event) || this.isArrowRightKeyEvent(event))) {\n      this.resizeStartedOnKeyDown = false;\n      this.renderer.removeClass(this.resizeTrackerEl, 'on-arrow-key-resize');\n      this.hideTracker();\n      this.columnHandleEl.focus();\n    }\n  }\n\n  private redFlagTracker(): void {\n    if (this.isWithinMaxResizeRange !== this.columnResizerService.isWithinMaxResizeRange) {\n      this.isWithinMaxResizeRange = this.columnResizerService.isWithinMaxResizeRange;\n      if (!this.isWithinMaxResizeRange) {\n        this.renderer.addClass(this.resizeTrackerEl, 'exceeded-max');\n      } else {\n        this.renderer.removeClass(this.resizeTrackerEl, 'exceeded-max');\n      }\n    }\n  }\n\n  private isArrowLeftKeyEvent(event: KeyboardEvent) {\n    return event.key === KeyCodes.ArrowLeft || event.key === IEKeyCodes.ArrowLeft;\n  }\n\n  private isArrowRightKeyEvent(event: KeyboardEvent) {\n    return event.key === KeyCodes.ArrowRight || event.key === IEKeyCodes.ArrowRight;\n  }\n\n  ngOnDestroy() {\n    this.unlisteners.forEach(unlistener => unlistener());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-column-toggle-title',\n  template: `<ng-content></ng-content>`,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleTitle {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\n\n@Component({\n  selector: 'clr-dg-column-toggle-button',\n  template: `\n    <button\n      class=\"btn btn-sm btn-link switch-button\"\n      (click)=\"selectAll()\"\n      [disabled]=\"allHideablesVisible\"\n      type=\"button\"\n    >\n      <ng-content></ng-content>\n    </button>\n  `,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleButton {\n  constructor(private columnsService: ColumnsService) {}\n\n  private allSelected: Subject<boolean> = new EventEmitter();\n\n  @Output('clrAllSelected')\n  get clrAllSelected(): Observable<boolean> {\n    return this.allSelected.asObservable();\n  }\n\n  private hideableColumns(): BehaviorSubject<ColumnState>[] {\n    return this.columnsService.columns.filter(column => column.value.hideable);\n  }\n\n  get allHideablesVisible() {\n    return this.hideableColumns().filter(column => column.value.hidden).length === 0;\n  }\n\n  selectAll() {\n    this.hideableColumns().forEach(hideableColumn =>\n      this.columnsService.emitStateChange(hideableColumn, {\n        hidden: false,\n        changes: [DatagridColumnChanges.HIDDEN],\n      })\n    );\n    this.allSelected.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Inject, ContentChild, ElementRef, NgZone, PLATFORM_ID, ViewChild } from '@angular/core';\n\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\n\n@Component({\n  selector: 'clr-dg-column-toggle',\n  template: `\n    <button\n      role=\"button\"\n      type=\"button\"\n      class=\"btn btn-sm btn-link column-toggle--action\"\n      clrPopoverAnchor\n      clrPopoverOpenCloseButton\n      [attr.aria-controls]=\"popoverId\"\n      [attr.aria-owns]=\"popoverId\"\n      [attr.title]=\"commonStrings.keys.pickColumns\"\n    >\n      <cds-icon shape=\"view-columns\" aria-hidden=\"true\" [attr.title]=\"commonStrings.keys.pickColumns\"></cds-icon>\n    </button>\n    <div\n      class=\"column-switch\"\n      role=\"dialog\"\n      [attr.aria-label]=\"commonStrings.keys.showColumnsMenuDescription\"\n      [id]=\"popoverId\"\n      clrFocusTrap\n      *clrPopoverContent=\"openState; at: smartPosition; outsideClickToClose: true; scrollToClose: true\"\n    >\n      <div class=\"switch-header\">\n        <div class=\"clr-sr-only\" tabindex=\"-1\" #allSelected>{{ commonStrings.keys.allColumnsSelected }}</div>\n        <ng-container *ngIf=\"!customToggleTitle\">{{ commonStrings.keys.showColumns }}</ng-container>\n        <ng-content select=\"clr-dg-column-toggle-title\"></ng-content>\n        <button\n          class=\"btn btn-sm btn-link toggle-switch-close-button\"\n          clrPopoverCloseButton\n          type=\"button\"\n          [attr.aria-label]=\"commonStrings.keys.close\"\n          [attr.title]=\"commonStrings.keys.close\"\n        >\n          <cds-icon shape=\"window-close\" aria-hidden=\"true\" [attr.title]=\"commonStrings.keys.close\"></cds-icon>\n        </button>\n      </div>\n      <ul class=\"switch-content list-unstyled\">\n        <li *ngFor=\"let columnState of hideableColumnStates; trackBy: trackByFn\">\n          <clr-checkbox-wrapper>\n            <input\n              clrCheckbox\n              type=\"checkbox\"\n              [disabled]=\"hasOnlyOneVisibleColumn && !columnState.hidden\"\n              [ngModel]=\"!columnState.hidden\"\n              (ngModelChange)=\"toggleColumnState(columnState, !$event)\"\n            />\n            <label>\n              <ng-template [ngTemplateOutlet]=\"columnState.titleTemplateRef\"></ng-template>\n            </label>\n          </clr-checkbox-wrapper>\n        </li>\n      </ul>\n      <div class=\"switch-footer\">\n        <ng-content select=\"clr-dg-column-toggle-button\"></ng-content>\n        <clr-dg-column-toggle-button *ngIf=\"!customToggleButton\" (clrAllSelected)=\"allColumnsSelected()\">\n          {{ commonStrings.keys.selectAll }}\n        </clr-dg-column-toggle-button>\n      </div>\n    </div>\n  `,\n  host: { '[class.column-switch-wrapper]': 'true', '[class.active]': 'openState' },\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverEventsService, ClrPopoverPositionService, ClrPopoverToggleService],\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggle {\n  private _allColumnsVisible: boolean;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n  public openState: boolean;\n\n  @ContentChild(ClrDatagridColumnToggleTitle) customToggleTitle: ClrDatagridColumnToggleTitle;\n  @ContentChild(ClrDatagridColumnToggleButton) customToggleButton: ClrDatagridColumnToggleButton;\n  @ViewChild('allSelected', { read: ElementRef })\n  private allSelectedElement: ElementRef<HTMLElement>;\n\n  public get allColumnsVisible(): boolean {\n    return this._allColumnsVisible;\n  }\n\n  public set allColumnsVisible(value: boolean) {\n    this._allColumnsVisible = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private columnsService: ColumnsService,\n    @Inject(UNIQUE_ID) public columnSwitchId: string,\n    @Inject(PLATFORM_ID) private platformId: any,\n    private zone: NgZone,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {}\n\n  get hideableColumnStates(): ColumnState[] {\n    const hideables = this.columnsService.columns.filter(column => column.value.hideable);\n    return hideables.map(column => column.value);\n  }\n\n  get hasOnlyOneVisibleColumn(): boolean {\n    const nbNonHideableColumns = this.columnsService.columns.length - this.hideableColumnStates.length;\n    // this should only return true when there is no non-hideable columns.\n    return (\n      nbNonHideableColumns === 0 && this.hideableColumnStates.filter(columnState => !columnState.hidden).length === 1\n    );\n  }\n\n  toggleColumnState(columnState: ColumnState, event: boolean) {\n    const columnToToggle = this.columnsService.columns.filter(column => column.value === columnState)[0];\n    this.columnsService.emitStateChange(columnToToggle, {\n      hidden: event,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  toggleSwitchPanel() {\n    this.openState = !this.openState;\n  }\n\n  allColumnsSelected() {\n    this.allSelectedElement.nativeElement.focus();\n  }\n\n  // Without tracking the checkboxes get rerendered on model update, which leads\n  // to loss of focus after checkbox toggle.\n  trackByFn(index: number) {\n    return index;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\n\n/*\n * I don't think this deserves to be in IfExpanded itself,\n * so I'm adding a second directive on the same selector for now just for the datagrid\n */\n@Directive({ selector: '[clrIfExpanded]' })\nexport class DatagridDetailRegisterer {\n  constructor(@Optional() private expandableRowsCount: ExpandableRowsCount) {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.register();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.unregister();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-dg-detail-header',\n  host: {\n    '[class.datagrid-detail-header]': 'true',\n  },\n  template: `\n    <div class=\"datagrid-detail-header-title\" clrFocusOnViewInit [id]=\"titleId\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"datagrid-detail-pane-close\">\n      <button\n        type=\"button\"\n        class=\"btn btn-link\"\n        (click)=\"detailService.close()\"\n        [attr.aria-label]=\"commonStrings.keys.close\"\n      >\n        <cds-icon size=\"24\" shape=\"times\"></cds-icon>\n      </button>\n    </div>\n  `,\n})\nexport class ClrDatagridDetailHeader {\n  get titleId() {\n    return `${this.detailService.id}-title`;\n  }\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, HostListener } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\n\n@Component({\n  selector: 'clr-dg-detail',\n  host: {\n    '[class.datagrid-detail-pane]': 'true',\n  },\n  // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page\n  // have to test for presence of header for aria-describedby because it was causing unit tests to crash\n  template: `\n    <div\n      [clrFocusTrap]=\"{ strict: false }\"\n      class=\"datagrid-detail-pane-content\"\n      *ngIf=\"detailService.isOpen\"\n      role=\"dialog\"\n      [id]=\"detailService.id\"\n      aria-modal=\"true\"\n      [attr.aria-describedby]=\"header ? header.titleId : ''\"\n    >\n      <div class=\"clr-sr-only\">{{ commonStrings.keys.detailPaneStart }}</div>\n      <ng-content></ng-content>\n      <div class=\"clr-sr-only\">{{ commonStrings.keys.detailPaneEnd }}</div>\n    </div>\n  `,\n})\nexport class ClrDatagridDetail {\n  @ContentChild(ClrDatagridDetailHeader) public header: ClrDatagridDetailHeader;\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n\n  @HostListener('document:keyup.esc')\n  closeCheck(): void {\n    this.detailService.close();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DetailService } from './providers/detail.service';\n\n@Directive({\n  selector: '[clrIfDetail]',\n})\nexport class ClrIfDetail implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private skip = false; // This keeps us from resetting the input and calling the toggle twice\n\n  @Input('clrIfDetail')\n  set state(model: any) {\n    if (!this.skip) {\n      this.detailService.toggle(model);\n    }\n    this.skip = false;\n  }\n\n  @Output('clrIfDetailChange') public stateChange = new EventEmitter<any>(null);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private detailService: DetailService\n  ) {\n    this.detailService.enabled = true;\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.detailService.stateChange.subscribe(state => {\n        if (state === true) {\n          this.togglePanel(true);\n        } else {\n          this.togglePanel(false);\n        }\n      })\n    );\n  }\n\n  private togglePanel(showPanel: boolean) {\n    let stateChangeParams = null;\n    this.viewContainer.clear();\n    if (showPanel === true) {\n      this.viewContainer.createEmbeddedView(this.templateRef, { $implicit: this.detailService.state });\n      this.skip = true;\n      stateChangeParams = this.detailService.state;\n    }\n\n    this.stateChange.emit(stateChangeParams);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-detail-body',\n  template: `\n    <div class=\"clr-dg-detail-body-wrapper\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.datagrid-detail-body]': 'true',\n  },\n})\nexport class ClrDatagridDetailBody {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild } from '@angular/core';\n\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-footer',\n  template: `\n    <ng-container *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi && selection.current.length > 0\">\n      <div class=\"clr-form-control-disabled\">\n        <clr-checkbox-wrapper class=\"datagrid-footer-select\">\n          <input clrCheckbox type=\"checkbox\" checked=\"checked\" disabled />\n          <label>{{ selection.current.length }}</label>\n        </clr-checkbox-wrapper>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"!detailService.isOpen\">\n      <ng-content select=\"clr-dg-column-toggle\"></ng-content>\n      <clr-dg-column-toggle *ngIf=\"hasHideableColumns && !toggle\"></clr-dg-column-toggle>\n      <div class=\"datagrid-footer-description\">\n        <ng-content></ng-content>\n      </div>\n    </ng-container>\n    <ng-content select=\"clr-dg-pagination\"></ng-content>\n  `,\n  host: {\n    '[class.datagrid-footer]': 'true',\n  },\n})\nexport class ClrDatagridFooter<T = any> {\n  constructor(\n    public selection: Selection<T>,\n    public detailService: DetailService,\n    private columnsService: ColumnsService\n  ) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ContentChild(ClrDatagridColumnToggle) toggle: ClrDatagridColumnToggle;\n\n  get hasHideableColumns(): boolean {\n    return this.columnsService.hasHideableColumns;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnState } from '../interfaces/column-state.interface';\n\nexport const COLUMN_STATE = new InjectionToken<ColumnState>('COLUMN_STATE');\n\nexport function columnStateFactory() {\n  return new BehaviorSubject<ColumnState>({\n    changes: [],\n  });\n}\n\nexport const COLUMN_STATE_PROVIDER = {\n  provide: COLUMN_STATE,\n  useFactory: columnStateFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { COLUMN_STATE } from './providers/column-state.provider';\n\n@Directive({ selector: '[clrDgHideableColumn]' })\n\n/**\n *\n * @description\n * A structural directive meant to be used inside a clr-dg-column component.\n *\n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n *\n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n *\n */\nexport class ClrDatagridHideableColumn implements OnDestroy {\n  /**\n   *\n   * @description\n   * Used to initialize the column with either hidden or visible state.\n   *\n   */\n  private _hidden: boolean;\n\n  /**\n   *\n   * @description\n   * Setter fn for the @Input with the same name as this structural directive.\n   * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n   * It's more verbose but has more Clarity.\n   *\n   *\n   * @example\n   * *clrDgHideableColumn\n   * *clrDgHideableColumn={hidden: false}\n   * *clrDgHideableColumn={hidden: true}\n   *\n   */\n  @Input('clrDgHideableColumn')\n  set clrDgHideableColumn(value: { hidden: boolean }) {\n    this.clrDgHidden = value && value.hidden ? value.hidden : false;\n  }\n\n  @Input('clrDgHidden')\n  set clrDgHidden(hidden: boolean) {\n    this._hidden = hidden ? hidden : false;\n    this.columnsService.emitStateChange(this.columnState, {\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  @Output('clrDgHiddenChange') public hiddenChange = new EventEmitter<boolean>();\n\n  constructor(\n    private titleTemplateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private columnsService: ColumnsService,\n    @Optional()\n    @Inject(COLUMN_STATE)\n    private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.viewContainerRef.createEmbeddedView(this.titleTemplateRef);\n\n    if (!this.columnState) {\n      throw new Error('The *clrDgHideableColumn directive can only be used inside of a clr-dg-column component.');\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.columnsService.emitStateChange(this.columnState, {\n      hideable: true,\n      titleTemplateRef: this.titleTemplateRef,\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n\n    this.subscriptions.push(\n      this.columnState.subscribe((state: ColumnState) => {\n        if (state.changes && state.changes.indexOf(DatagridColumnChanges.HIDDEN) > -1) {\n          this.hiddenChange.emit(state.hidden); // Can emit through @Output when desugared syntax is used\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TrackByFunction } from '@angular/core';\n\nimport { Items } from './providers/items';\n\n@Directive({\n  selector: '[ngForTrackBy]',\n})\nexport class ClrDatagridItemsTrackBy<T = any> {\n  constructor(@Optional() private _items: Items<T>) {}\n\n  @Input('ngForTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    if (this._items) {\n      this._items.trackBy = value;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input } from '@angular/core';\nimport { Page } from './providers/page';\n\n@Component({\n  selector: 'clr-dg-page-size',\n  template: `\n    <ng-content></ng-content>\n    <div class=\"clr-select-wrapper\">\n      <select [class.clr-page-size-select]=\"true\" [(ngModel)]=\"page.size\">\n        <option *ngFor=\"let option of pageSizeOptions\" [ngValue]=\"option\">{{ option }}</option>\n      </select>\n    </div>\n  `,\n})\nexport class ClrDatagridPageSize {\n  @Input('clrPageSizeOptions') pageSizeOptions: number[];\n\n  constructor(public page: Page) {}\n\n  ngOnInit() {\n    if (!this.pageSizeOptions || this.pageSizeOptions.length === 0) {\n      this.pageSizeOptions = [this.page.size];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Page } from './providers/page';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-pagination',\n  template: `\n    <ng-container *ngIf=\"!detailService.isOpen\">\n      <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n        <ng-content select=\"clr-dg-page-size\"></ng-content>\n      </div>\n      <div class=\"pagination-description\">\n        <ng-content></ng-content>\n      </div>\n      <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n        <button\n          type=\"button\"\n          class=\"pagination-first\"\n          [disabled]=\"page.current <= 1\"\n          (click)=\"page.current = 1\"\n          [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n          <cds-icon shape=\"step-forward-2\" direction=\"down\"></cds-icon>\n        </button>\n        <button\n          type=\"button\"\n          class=\"pagination-previous\"\n          [disabled]=\"page.current <= 1\"\n          (click)=\"page.current = page.current - 1\"\n          [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n          <cds-icon shape=\"angle\" direction=\"left\"></cds-icon>\n        </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput\n          type=\"text\"\n          class=\"pagination-current clr-input\"\n          [size]=\"page.last.toString().length\"\n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\"\n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n        />\n        <ng-template #readOnly>\n          <span>{{ page.current }}</span>\n        </ng-template>\n\n        &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{ page.last }}</span>\n        <button\n          type=\"button\"\n          class=\"pagination-next\"\n          [disabled]=\"page.current >= page.last\"\n          (click)=\"page.current = page.current + 1\"\n          [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n          <cds-icon shape=\"angle\" direction=\"right\"></cds-icon>\n        </button>\n        <button\n          type=\"button\"\n          class=\"pagination-last\"\n          [disabled]=\"page.current >= page.last\"\n          (click)=\"page.current = page.last\"\n          [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n          <cds-icon shape=\"step-forward-2\" direction=\"up\"></cds-icon>\n        </button>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"detailService.isOpen\">\n      <div class=\"pagination-description-compact\">\n        {{ page.firstItem + 1 }}-{{ page.lastItem + 1 }} / {{ page.totalItems }}\n      </div>\n      <div class=\"pagination-list\">\n        <button\n          type=\"button\"\n          class=\"pagination-previous\"\n          [disabled]=\"page.current <= 1\"\n          (click)=\"page.current = page.current - 1\"\n          [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n          <cds-icon shape=\"angle\" direction=\"left\"></cds-icon>\n        </button>\n        <span>{{ page.current }}</span>\n        <button\n          type=\"button\"\n          class=\"pagination-next\"\n          [disabled]=\"page.current >= page.last\"\n          (click)=\"page.current = page.current + 1\"\n          [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n          <cds-icon shape=\"angle\" direction=\"right\"></cds-icon>\n        </button>\n      </div>\n    </ng-container>\n  `,\n  host: { '[class.pagination]': 'true' },\n})\nexport class ClrDatagridPagination implements OnDestroy, OnInit {\n  @ContentChild(ClrDatagridPageSize) _pageSizeComponent: ClrDatagridPageSize;\n  @ViewChild('currentPageInput') currentPageInputRef: ElementRef;\n\n  constructor(public page: Page, public commonStrings: ClrCommonStringsService, public detailService: DetailService) {\n    this.page.activated = true;\n  }\n\n  /**********\n   * Subscription to the Page service for page changes.\n   * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n   */\n  ngOnInit() {\n    /*\n     * Default page size is 10.\n     * The reason we set it here and not in the provider itself is because\n     * we don't want pagination if this component isn't present in the datagrid.\n     */\n    if (!this.page.size) {\n      this.page.size = 10;\n    }\n    this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n  }\n\n  /**\n   * Subscription to the page service changes\n   */\n  private _pageSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.page.resetPageSize(true);\n    if (this._pageSubscription) {\n      this._pageSubscription.unsubscribe();\n    }\n  }\n\n  @Input('clrDgPageInputDisabled') public disableCurrentPageInput: boolean;\n\n  /**\n   * Page size\n   */\n  public get pageSize(): number {\n    return this.page.size;\n  }\n\n  @Input('clrDgPageSize')\n  public set pageSize(size: number) {\n    if (typeof size === 'number') {\n      this.page.size = size;\n    }\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  public get totalItems(): number {\n    return this.page.totalItems;\n  }\n\n  @Input('clrDgTotalItems')\n  public set totalItems(total: number) {\n    if (typeof total === 'number') {\n      this.page.totalItems = total;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  public get lastPage(): number {\n    return this.page.last;\n  }\n\n  @Input('clrDgLastPage')\n  public set lastPage(last: number) {\n    if (typeof last === 'number') {\n      this.page.last = last;\n    }\n  }\n\n  /**\n   * Current page\n   */\n  public get currentPage(): number {\n    return this.page.current;\n  }\n\n  @Input('clrDgPage')\n  public set currentPage(page: number) {\n    if (typeof page === 'number') {\n      this.page.current = page;\n    }\n  }\n\n  @Output('clrDgPageChange') currentChanged = new EventEmitter<number>(false);\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    this.page.previous();\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    this.page.next();\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    return this.page.firstItem;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    return this.page.lastItem;\n  }\n\n  /**\n   * Conditionally adds page numbers before and after the current page\n   */\n  public get middlePages(): number[] {\n    const middlePages: number[] = [];\n    if (this.page.current > 1) {\n      middlePages.push(this.page.current - 1);\n    }\n    middlePages.push(this.page.current);\n    if (this.page.current < this.page.last) {\n      middlePages.push(this.page.current + 1);\n    }\n    return middlePages;\n  }\n\n  /**\n   * We only update the pagination's current page on blur of the input field, or\n   * when they press enter.\n   */\n  public updateCurrentPage(event: any): void {\n    const parsed = parseInt(event.target.value, 10);\n\n    // if the input value, is not a number, we don't update the page\n    if (!isNaN(parsed)) {\n      if (parsed < 1) {\n        this.page.current = 1;\n      } else if (parsed > this.page.last) {\n        this.page.current = this.page.last;\n      } else {\n        this.page.current = parsed;\n      }\n    }\n\n    /**\n     * Set the input's value to the new current page. This is needed because the code\n     * above may have changed the value from what the user entered in.\n     */\n    this.currentPageInputRef.nativeElement.value = this.page.current;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\n@Component({\n  selector: 'clr-dg-row-detail',\n  template: `\n    <div class=\"clr-sr-only\">\n      {{ beginningOfExpandableContentAriaText }} {{ commonStrings.keys.dategridExpandableRowsHelperText }}\n    </div>\n    <ng-content></ng-content>\n    <div class=\"clr-sr-only\">{{ endOfExpandableContentAriaText }}</div>\n  `,\n  host: {\n    '[class.datagrid-row-flex]': 'true',\n    '[class.datagrid-row-detail]': 'true',\n    '[class.datagrid-container]': 'cells.length === 0',\n    '[attr.id]': 'expand.expandableId',\n  },\n})\nexport class ClrDatagridRowDetail implements AfterContentInit, OnDestroy {\n  /* reference to the enum so that template can access it */\n  public SELECTION_TYPE = SelectionType;\n\n  constructor(\n    public selection: Selection,\n    public rowActionService: RowActionService,\n    public expand: DatagridIfExpandService,\n    public expandableRows: ExpandableRowsCount,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  @ContentChildren(ClrDatagridCell) cells: QueryList<ClrDatagridCell>;\n\n  @Input('clrDgReplace')\n  set replace(value: boolean) {\n    this.expand.setReplace(!!value);\n  }\n  private subscriptions: Subscription[] = [];\n  public replacedRow = false;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.expand.replace.subscribe(replaceChange => {\n        this.replacedRow = replaceChange;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  @Input('clrRowDetailBeginningAriaText') _beginningOfExpandableContentAriaText: string;\n  public get beginningOfExpandableContentAriaText() {\n    return (\n      this._beginningOfExpandableContentAriaText ||\n      `${this.commonStrings.keys.dategridExpandableBeginningOf} ${this.commonStrings.keys.dategridExpandableRowContent}`\n    );\n  }\n\n  @Input('clrRowDetailEndAriaText') _endOfExpandableContentAriaText: string;\n  public get endOfExpandableContentAriaText() {\n    return (\n      this._endOfExpandableContentAriaText ||\n      `${this.commonStrings.keys.dategridExpandableEndOf} ${this.commonStrings.keys.dategridExpandableRowContent}`\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO The top two are not used now, which is probably a performance drag that was broken along the way.\n// There was a previous pattern to hide everything to do computation then display, for Firefox, needs revisiting.\nexport const NO_LAYOUT_CLASS = 'datagrid-no-layout';\nexport const COMPUTE_WIDTH_CLASS = 'datagrid-computing-columns-width';\nexport const STRICT_WIDTH_CLASS = 'datagrid-fixed-width';\nexport const HIDDEN_COLUMN_CLASS = 'datagrid-hidden-column';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES, DatagridColumnChanges } from '../enums/column-changes.enum';\n\n@Directive({ selector: 'clr-dg-cell' })\nexport class DatagridCellRenderer implements OnDestroy {\n  private stateSubscription: Subscription;\n\n  private runAllChanges: DatagridColumnChanges[];\n\n  // @TODO(JEREMY) Work out how to dedupe some of this code between header and cell renderers\n  set columnState(columnState: BehaviorSubject<ColumnState>) {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n\n    this.runAllChanges = ALL_COLUMN_CHANGES;\n    this.stateSubscription = columnState.subscribe(state => this.stateChanges(state));\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (this.runAllChanges) {\n      state.changes = this.runAllChanges;\n      delete this.runAllChanges;\n    }\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    this.renderer.setStyle(this.el.nativeElement, 'width', null);\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n    this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { COLUMN_STATE, COLUMN_STATE_PROVIDER } from '../providers/column-state.provider';\nimport { ColumnsService } from '../providers/columns.service';\n\n@Directive({ selector: 'clr-dg-column', providers: [ColumnResizerService, COLUMN_STATE_PROVIDER] })\nexport class DatagridHeaderRenderer implements OnDestroy {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private organizer: DatagridRenderOrganizer,\n    private domAdapter: DomAdapter,\n    private columnResizerService: ColumnResizerService,\n    private columnsService: ColumnsService,\n    @Inject(COLUMN_STATE) private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.subscriptions.push(\n      this.organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n\n    this.subscriptions.push(columnState.subscribe(state => this.stateChanges(state)));\n  }\n\n  @Output('clrDgColumnResize') resizeEmitter: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n   */\n  private widthSet = false;\n  private autoSet = false;\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    // remove the width only if we set it, and it is not changed by dragging.\n    if (this.widthSet && !this.columnResizerService.resizedBy) {\n      this.renderer.setStyle(this.el.nativeElement, 'width', null);\n    }\n    if (this.autoSet) {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n  }\n\n  private detectStrictWidth(): number {\n    if (this.columnResizerService.resizedBy) {\n      return this.columnResizerService.widthAfterResize;\n    } else if (this.autoSet) {\n      return 0;\n    } else {\n      return this.domAdapter.userDefinedWidth(this.el.nativeElement);\n    }\n  }\n\n  private computeWidth(strictWidth: number): number {\n    let width: number = strictWidth;\n    if (!width) {\n      width = this.domAdapter.scrollWidth(this.el.nativeElement);\n    }\n    return width;\n  }\n\n  public getColumnWidthState(): Partial<ColumnState> {\n    const strictWidth = this.detectStrictWidth();\n    return {\n      width: this.computeWidth(strictWidth),\n      strictWidth: strictWidth,\n    };\n  }\n\n  public setColumnState(index: number) {\n    this.columnsService.columns[index] = this.columnState;\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      if (this.columnResizerService.resizedBy) {\n        this.resizeEmitter.emit(state.width);\n        this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n        this.widthSet = false;\n      }\n      // Don't set width if there is a user-defined one. Just add the strict width class.\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.autoSet = false;\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n      this.widthSet = true;\n      this.autoSet = true;\n    }\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This version of the DomAdapter is for use on non-browser platforms, where there are no\n * nativeElements to use for calculations.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\n\n@Injectable()\nexport class NoopDomAdapter implements DomAdapter {\n  // @ts-ignore\n  userDefinedWidth(element: any): number {\n    return 0;\n  }\n\n  // @ts-ignore\n  scrollBarWidth(element: any) {\n    return 0;\n  }\n\n  // @ts-ignore\n  scrollWidth(element: any) {\n    return 0;\n  }\n\n  // @ts-ignore\n  computedHeight(element: any): number {\n    return 0;\n  }\n\n  // @ts-ignore\n  clientRect(element: any): ClientRect {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  // @ts-ignore\n  minWidth(element: any): number {\n    return 0;\n  }\n\n  // @ts-ignore\n  focus(element: any): void {\n    // Do nothing\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList } from '@angular/core';\n\nimport { DatagridCellRenderer } from './cell-renderer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({ selector: 'clr-dg-row, clr-dg-row-detail' })\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n  @ContentChildren(DatagridCellRenderer) private cells: QueryList<DatagridCellRenderer>;\n\n  constructor(private columnsService: ColumnsService) {}\n\n  ngAfterContentInit() {\n    this.setColumnState(); // case #3 and #4\n    this.subscriptions.push(\n      this.cells.changes.subscribe(() => {\n        this.setColumnState(); // case #2\n        // Note on case #2: In the case of dynamic columns, when one column (header/cell together) gets deleted,\n        // this.cells.changes emits before this.columnsService.columns gets updated in MainRenderer\n        // when this.headers.changes emits as well. So that means there will be n+1 column state providers\n        // when this.cells.changes emits. Hence, we should quit earlier there. But this method will be called\n        // right after again when this.headers.changes emits. By then, there will be the same number of column state\n        // providers as column headers.\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public setColumnState() {\n    // This method runs in four cases:\n    // 1. When the initial rows appear on the first page.\n    //    In this case, the method will be called in DatagridMainRenderer.\n    // 2. When columns (corresponding header/cells) get added and deleted.\n    //    In this case, the method will be called in DatagridMainRenderer. (Read the note on this case above).\n    // 3. When rows load asynchronously.\n    //    In this case, the method will be called in this class.\n    // 4. When rows load after switching pages.\n    //    In this case, the method will be called in this class (Basically, same as the case 3).\n    if (this.cells.length === this.columnsService.columns.length) {\n      this.cells.forEach((cell, index) => {\n        if (this.columnsService.columns[index]) {\n          cell.columnState = this.columnsService.columns[index];\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { Items } from '../providers/items';\nimport { Page } from '../providers/page';\nimport { TableSizeService } from '../providers/table-size.service';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridHeaderRenderer } from './header-renderer';\nimport { NoopDomAdapter } from './noop-dom-adapter';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { DatagridRowRenderer } from './row-renderer';\nimport { ColumnStateDiff } from '../interfaces/column-state.interface';\nimport { DetailService } from '../providers/detail.service';\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\nexport const domAdapterFactory = (platformId: any) => {\n  if (isPlatformBrowser(platformId)) {\n    return new DomAdapter();\n  } else {\n    return new NoopDomAdapter();\n  }\n};\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\n@Directive({\n  selector: 'clr-datagrid',\n  providers: [{ provide: DomAdapter, useFactory: domAdapterFactory, deps: [PLATFORM_ID] }],\n})\nexport class DatagridMainRenderer implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    private items: Items,\n    private page: Page,\n    private domAdapter: DomAdapter,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private detailService: DetailService,\n    private tableSizeService: TableSizeService,\n    private columnsService: ColumnsService\n  ) {\n    this.subscriptions.push(\n      this.organizer\n        .filterRenderSteps(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS)\n        .subscribe(() => this.computeHeadersWidth())\n    );\n\n    this.subscriptions.push(\n      this.page.sizeChange.subscribe(() => {\n        if (this._heightSet) {\n          this.resetDatagridHeight();\n        }\n      })\n    );\n    this.subscriptions.push(this.detailService.stateChange.subscribe(state => this.toggleDetailPane(state)));\n    this.subscriptions.push(this.items.change.subscribe(() => (this.shouldStabilizeColumns = true)));\n  }\n\n  @ContentChildren(DatagridHeaderRenderer) private headers: QueryList<DatagridHeaderRenderer>;\n  @ContentChildren(DatagridRowRenderer, { descendants: true })\n  private rows: QueryList<DatagridRowRenderer>; // if expandable row is expanded initially, query its cells too.\n\n  ngAfterContentInit() {\n    this.setupColumns();\n\n    this.subscriptions.push(\n      this.headers.changes.subscribe(() => {\n        // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n        // Need to setup columns before stabalizing them\n        this.setupColumns();\n        this.columnsSizesStable = false;\n        this.stabilizeColumns();\n      })\n    );\n  }\n\n  // Initialize and set Table width for horizontal scrolling here.\n  ngAfterViewInit() {\n    this.tableSizeService.table = this.el;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldStabilizeColumns) {\n      this.stabilizeColumns();\n    }\n    if (this.shouldComputeHeight()) {\n      setTimeout(() => {\n        this.computeDatagridHeight();\n      });\n    }\n  }\n\n  private setupColumns() {\n    this.headers.forEach((header, index) => header.setColumnState(index));\n    this.columnsService.columns.splice(this.headers.length); // Trim any old columns\n    this.rows.forEach(row => row.setColumnState());\n  }\n\n  private _heightSet = false;\n\n  private shouldComputeHeight(): boolean {\n    if (!this._heightSet && this.page.size > 0) {\n      if (this.items.displayed.length === this.page.size) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public toggleDetailPane(state: boolean) {\n    if (this.headers) {\n      if (state && !this.columnsService.hasCache()) {\n        this.columnsService.cache();\n        this.headers.forEach((_header, index) => {\n          if (index > 0) {\n            this.columnsService.emitStateChangeAt(index, {\n              changes: [DatagridColumnChanges.HIDDEN],\n              hidden: state,\n            });\n          }\n        });\n      } else if (!state) {\n        this.columnsService.resetToLastCache();\n      }\n    }\n  }\n\n  /**\n   * Computes the height of the datagrid.\n   *\n   * NOTE: We had to choose to set the height instead of the min-height because\n   * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n   * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n   * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n   *\n   * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n   */\n  private computeDatagridHeight() {\n    // IE doesn't return correct value for getComputedStyle(element).getPropertyValue(\"height\")\n    const value: number = this.domAdapter.clientRect(this.el.nativeElement).height;\n    this.renderer.setStyle(this.el.nativeElement, 'height', value + 'px');\n    this._heightSet = true;\n  }\n\n  private resetDatagridHeight() {\n    this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    this._heightSet = false;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Makes each header compute its width.\n   */\n  private computeHeadersWidth() {\n    const nbColumns: number = this.headers.length;\n    let allStrict = true;\n    this.headers.forEach((header, index) => {\n      // On the last header column check whether all columns have strict widths.\n      // If all columns have strict widths, remove the strict width from the last column and make it the column's\n      // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n      // gap in the Datagrid.\n      const state: ColumnStateDiff = {\n        changes: [DatagridColumnChanges.WIDTH],\n        ...header.getColumnWidthState(),\n      };\n\n      if (!state.strictWidth) {\n        allStrict = false;\n      }\n\n      if (nbColumns === index + 1 && allStrict) {\n        state.strictWidth = 0;\n      }\n\n      this.columnsService.emitStateChangeAt(index, state);\n    });\n  }\n\n  /**\n   * Indicates if we want to re-compute columns width. This should only happen:\n   * 1) When headers change, with columns being added or removed\n   * 2) When rows are lazily loaded for the first time\n   */\n  private columnsSizesStable = false;\n\n  private shouldStabilizeColumns = true;\n\n  /**\n   * Triggers a whole re-rendring cycle to set column sizes, if needed.\n   */\n  private stabilizeColumns() {\n    this.shouldStabilizeColumns = false;\n    if (this.columnsSizesStable) {\n      // Nothing to do.\n      return;\n    }\n    // Resize when the rows are loaded.\n    if (this.items.displayed.length > 0) {\n      this.organizer.resize();\n      this.columnsSizesStable = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrFormsModule } from '../../forms/forms.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrOutsideClickModule } from '../../utils/outside-click/outside-click.module';\nimport { ClrDragAndDropModule } from '../../utils/drag-and-drop/drag-and-drop.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { DatagridStringFilter } from './built-in/filters/datagrid-string-filter';\nimport { DatagridNumericFilter } from './built-in/filters/datagrid-numeric-filter';\nimport { ActionableOompaLoompa } from './chocolate/actionable-oompa-loompa';\nimport { DatagridWillyWonka } from './chocolate/datagrid-willy-wonka';\nimport { ExpandableOompaLoompa } from './chocolate/expandable-oompa-loompa';\nimport { ClrDatagrid } from './datagrid';\nimport { ClrDatagridActionBar } from './datagrid-action-bar';\nimport { ClrDatagridActionOverflow } from './datagrid-action-overflow';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridColumnSeparator } from './datagrid-column-separator';\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { DatagridDetailRegisterer } from './datagrid-detail-registerer';\nimport { ClrDatagridDetail } from './datagrid-detail';\nimport { ClrIfDetail } from './datagrid-if-detail';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\nimport { ClrDatagridDetailBody } from './datagrid-detail-body';\nimport { ClrDatagridFilter } from './datagrid-filter';\nimport { ClrDatagridFooter } from './datagrid-footer';\nimport { ClrDatagridHideableColumn } from './datagrid-hideable-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridItemsTrackBy } from './datagrid-items-trackby';\nimport { ClrDatagridPagination } from './datagrid-pagination';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { ClrDatagridRowDetail } from './datagrid-row-detail';\nimport { DatagridCellRenderer } from './render/cell-renderer';\nimport { DatagridHeaderRenderer } from './render/header-renderer';\nimport { DatagridMainRenderer } from './render/main-renderer';\nimport { DatagridRowRenderer } from './render/row-renderer';\nimport { WrappedCell } from './wrapped-cell';\nimport { WrappedColumn } from './wrapped-column';\nimport { WrappedRow } from './wrapped-row';\nimport {\n  angleDoubleIcon,\n  arrowIcon,\n  ClarityIcons,\n  ellipsisVerticalIcon,\n  filterGridCircleIcon,\n  filterGridIcon,\n  stepForward2Icon,\n  timesIcon,\n  viewColumnsIcon,\n  windowCloseIcon,\n} from '@cds/core/icon';\n\nexport const CLR_DATAGRID_DIRECTIVES: Type<any>[] = [\n  // Core\n  ClrDatagrid,\n  ClrDatagridActionBar,\n  ClrDatagridActionOverflow,\n  ClrDatagridColumn,\n  ClrDatagridColumnSeparator,\n  ClrDatagridColumnToggle,\n  ClrDatagridHideableColumn,\n  ClrDatagridFilter,\n  ClrDatagridItems,\n  ClrDatagridItemsTrackBy,\n  ClrDatagridRow,\n  ClrDatagridRowDetail,\n  DatagridDetailRegisterer,\n  ClrDatagridCell,\n  ClrDatagridFooter,\n  ClrDatagridPagination,\n  ClrDatagridPageSize,\n  ClrDatagridPlaceholder,\n  ClrDatagridColumnToggleButton,\n  ClrDatagridColumnToggleTitle,\n  ClrDatagridDetail,\n  ClrIfDetail,\n  ClrDatagridDetailHeader,\n  ClrDatagridDetailBody,\n  WrappedCell,\n  WrappedColumn,\n  WrappedRow,\n\n  // Renderers\n  DatagridMainRenderer,\n  DatagridHeaderRenderer,\n  DatagridRowRenderer,\n  DatagridCellRenderer,\n\n  // Chocolate\n  DatagridWillyWonka,\n  ActionableOompaLoompa,\n  ExpandableOompaLoompa,\n\n  // Built-in shortcuts\n  DatagridStringFilter,\n  DatagridNumericFilter,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrIconModule,\n    ClrFormsModule,\n    FormsModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrOutsideClickModule,\n    ClrExpandableAnimationModule,\n    ClrDragAndDropModule,\n    ClrSpinnerModule,\n    ClrPopoverModuleNext,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n  ],\n  declarations: [CLR_DATAGRID_DIRECTIVES],\n  exports: [CLR_DATAGRID_DIRECTIVES],\n  entryComponents: [WrappedCell, WrappedColumn, WrappedRow],\n})\nexport class ClrDatagridModule {\n  constructor() {\n    ClarityIcons.addIcons(\n      ellipsisVerticalIcon,\n      viewColumnsIcon,\n      windowCloseIcon,\n      arrowIcon,\n      timesIcon,\n      stepForward2Icon,\n      angleDoubleIcon,\n      filterGridCircleIcon,\n      filterGridIcon\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, HostBinding, Inject, Input, OnInit, Optional, Output, SkipSelf } from '@angular/core';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-stack-block',\n  template: `\n    <div\n      class=\"stack-block-label\"\n      (click)=\"toggleExpand()\"\n      (keyup.enter)=\"toggleExpand()\"\n      (keyup.space)=\"toggleExpand()\"\n      (focus)=\"focused = true\"\n      (blur)=\"focused = false\"\n      [id]=\"uniqueId\"\n      [attr.role]=\"role\"\n      [attr.tabindex]=\"tabIndex\"\n      [attr.aria-expanded]=\"ariaExpanded\"\n      [attr.aria-controls]=\"getStackChildrenId()\"\n      [attr.aria-posinset]=\"ariaPosinset\"\n      [attr.aria-level]=\"ariaLevel\"\n      [attr.aria-setsize]=\"ariaSetsize\"\n    >\n      <cds-icon shape=\"angle\" class=\"stack-block-caret\" *ngIf=\"expandable\" [attr.direction]=\"caretDirection\"></cds-icon>\n      <span class=\"clr-sr-only\" *ngIf=\"getChangedValue\">{{ commonStrings.keys.stackViewChanged }}</span>\n      <div class=\"stack-view-key\">\n        <!-- This structure changed to fix #3567 and the a11y request was to move away from dl's -->\n        <!-- I added the key class to update css targets for the original component style -->\n        <ng-content select=\"clr-stack-label\"></ng-content>\n      </div>\n      <div class=\"stack-block-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <clr-expandable-animation [clrExpandTrigger]=\"expanded\" class=\"stack-children\" [attr.id]=\"getStackChildrenId()\">\n      <div [style.height]=\"expanded ? 'auto' : 0\" role=\"region\" *ngIf=\"expanded\">\n        <ng-content select=\"clr-stack-block\"></ng-content>\n      </div>\n    </clr-expandable-animation>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  // Make sure the host has the proper class for styling purposes\n  host: { '[class.stack-block]': 'true' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrStackBlock implements OnInit {\n  @HostBinding('class.stack-block-expanded')\n  @Input('clrSbExpanded')\n  expanded = false;\n  @Output('clrSbExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @HostBinding('class.stack-block-expandable')\n  @Input('clrSbExpandable')\n  expandable = false;\n\n  focused = false;\n  private _changedChildren = 0;\n  private _fullyInitialized = false;\n  private _changed = false;\n\n  @HostBinding('class.stack-block-changed')\n  get getChangedValue(): boolean {\n    return this._changed || (this._changedChildren > 0 && !this.expanded);\n  }\n\n  @Input('clrSbNotifyChange')\n  set setChangedValue(value: boolean) {\n    this._changed = value;\n\n    if (this.parent && this._fullyInitialized) {\n      if (value) {\n        this.parent._changedChildren++;\n      } else {\n        this.parent._changedChildren--;\n      }\n    }\n  }\n\n  /**\n   * Depth of the stack view starting from 1 for first level\n   */\n  @Input('clrStackViewLevel') ariaLevel: number;\n\n  /**\n   * Total number of rows in a given group\n   */\n  @Input('clrStackViewSetsize') ariaSetsize: number;\n\n  /**\n   * The position of the row inside the grouped by level rows\n   */\n  @Input('clrStackViewPosinset') ariaPosinset: number;\n\n  /*\n   * This would be more efficient with @ContentChildren, with the parent ClrStackBlock\n   * querying for children StackBlocks, but this feature is not available when downgrading\n   * the component for Angular 1.\n   */\n  constructor(\n    @SkipSelf()\n    @Optional()\n    private parent: ClrStackBlock,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    if (parent) {\n      parent.addChild();\n    }\n  }\n\n  ngOnInit(): void {\n    // in order to access the parent ClrStackBlock's properties,\n    // the child ClrStackBlock has to be fully initialized at first.\n    this._fullyInitialized = true;\n  }\n\n  addChild(): void {\n    this.expandable = true;\n  }\n\n  toggleExpand(): void {\n    if (this.expandable) {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  get caretDirection(): string {\n    return this.expanded ? 'down' : 'right';\n  }\n\n  get role(): string {\n    return this.expandable ? 'button' : null;\n  }\n\n  get tabIndex(): string {\n    return this.expandable ? '0' : null;\n  }\n\n  @HostBinding('class.on-focus')\n  get onStackLabelFocus(): boolean {\n    return this.expandable && !this.expanded && this.focused;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.expandable) {\n      return null;\n    } else {\n      return this.expanded ? 'true' : 'false';\n    }\n  }\n\n  getStackChildrenId() {\n    return this.expanded ? `clr-stack-children-${this.uniqueId}` : null;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'clr-stack-view',\n  template: `\n    <ng-content select=\"clr-stack-header\"></ng-content>\n    <div class=\"stack-view\"><ng-content></ng-content></div>\n  `,\n  // Custom elements are inline by default.\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n})\nexport class ClrStackView {\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  editable = false;\n\n  @Output('clrStackSave') save: EventEmitter<void> = new EventEmitter<void>(false);\n\n  private _editMode = false;\n\n  editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  get editing(): boolean {\n    return this.editable && this._editMode;\n  }\n\n  set editing(value: boolean) {\n    if (this.editable) {\n      this._editMode = value;\n      this.editingChange.emit(value);\n      if (!value) {\n        this.save.emit(null);\n      }\n    }\n  }\n  /**\n   * End of undocumented experimental feature.\n   */\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-header',\n  template: `\n    <h4 class=\"stack-header\">\n      <span class=\"stack-title\"><ng-content></ng-content></span>\n\n      <span class=\"stack-actions\">\n        <ng-content select=\".stack-action\"></ng-content>\n        <!-- Undocumented experimental feature: inline editing. -->\n        <button\n          *ngIf=\"stackView.editable\"\n          class=\"stack-action btn btn-sm btn-link\"\n          (click)=\"stackView.editing = !stackView.editing\"\n          type=\"button\"\n        >\n          Edit\n        </button>\n        <!-- End of undocumented experimental feature. -->\n      </span>\n    </h4>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n})\nexport class ClrStackHeader {\n  constructor(public stackView: ClrStackView) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\nexport class StackControl {\n  model: any;\n  modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  constructor(protected stackView: ClrStackView) {\n    // Make the ClrStackView editable, since it contains a StackControl\n    this.stackView.editable = true;\n    this.stackView.editingChange.subscribe((editing: boolean) => {\n      // Edit mode was closed\n      if (!editing) {\n        this.modelChange.emit(this.model);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-input',\n  inputs: ['model: clrModel', 'type'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n    <span *ngIf=\"!stackView.editing\">{{ model }}</span>\n    <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\" />\n  `,\n})\nexport class ClrStackInput extends StackControl {\n  type = 'text';\n\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-select',\n  inputs: ['model: clrModel'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n    <span *ngIf=\"!stackView.editing\">{{ model }}</span>\n    <div class=\"select\" *ngIf=\"stackView.editing\">\n      <select [(ngModel)]=\"model\">\n        <ng-content></ng-content>\n      </select>\n    </div>\n  `,\n})\nexport class ClrStackSelect extends StackControl {\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-stack-label, clr-stack-content' })\nexport class ClrStackViewCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Inject } from '@angular/core';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Directive({\n  selector: '[clrStackInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.aria-labelledby]': 'uniqueId',\n  },\n})\nexport class ClrStackContentInput {\n  constructor(@Inject(UNIQUE_ID) public uniqueId: string) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: I'd like this to be a CheckedState enum for the checkboxes in the future.\nexport enum ClrSelectedState {\n  // WARNING! Unselected has the value 0,\n  // so it's actually the only one that will evaluate to false if cast to a boolean.\n  // Don't mess with the order!\n  UNSELECTED = 0,\n  SELECTED,\n  INDETERMINATE,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrStackBlock } from './stack-block';\nimport { ClrStackHeader } from './stack-header';\nimport { ClrStackInput } from './stack-input';\nimport { ClrStackSelect } from './stack-select';\nimport { ClrStackView } from './stack-view';\nimport { ClrStackViewCustomTags } from './stack-view-custom-tags';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrStackContentInput } from './stack-content-input';\nimport { angleIcon, ClarityIcons } from '@cds/core/icon';\n\nexport const CLR_STACK_VIEW_DIRECTIVES: Type<any>[] = [\n  ClrStackView,\n  ClrStackHeader,\n  ClrStackBlock,\n  ClrStackContentInput,\n  ClrStackViewCustomTags,\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  ClrStackInput,\n  ClrStackSelect,\n  /**\n   * End of undocumented experimental feature.\n   */\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrExpandableAnimationModule],\n  declarations: [CLR_STACK_VIEW_DIRECTIVES],\n  exports: [CLR_STACK_VIEW_DIRECTIVES],\n})\nexport class ClrStackViewModule {\n  constructor() {\n    ClarityIcons.addIcons(angleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrSelectedState } from './selected-state.enum';\nimport { BehaviorSubject } from 'rxjs';\n\nexport abstract class TreeNodeModel<T> {\n  nodeId: string;\n  expanded: boolean;\n  selected = new BehaviorSubject<ClrSelectedState>(ClrSelectedState.UNSELECTED);\n  model: T | null;\n  /*\n   * Ideally, I would like to use a polymorphic this type here to ensure homogeneity of the tree, something like:\n   * abstract parent: this<T> | null;\n   * abstract children: this<T>[];\n   * But I'm hitting limitations on typescript not allowing that type in constructors or static methods.\n   * So I'm resorting to forcing override with more precise types by marking these abstract.\n   */\n  abstract parent: TreeNodeModel<T> | null;\n  abstract children: TreeNodeModel<T>[];\n\n  /*\n   * Being able to push this down to the RecursiveTreeNodeModel would require too much work on the angular components\n   * right now for them to know which kind of model they are using. So I'm lifting the public properties to this\n   * abstract parent class for now and we can revisit it later, when we're not facing such a close deadline.\n   */\n  loading = false;\n\n  destroy() {\n    // Just to be safe\n    this.selected.complete();\n  }\n\n  // Propagate by default when eager, don't propagate in the lazy-loaded tree.\n  setSelected(state: ClrSelectedState, propagateUp: boolean, propagateDown: boolean) {\n    if (state === this.selected.value) {\n      return;\n    }\n    this.selected.next(state);\n    if (propagateDown && state !== ClrSelectedState.INDETERMINATE && this.children) {\n      this.children.forEach(child => child.setSelected(state, false, true));\n    }\n    if (propagateUp && this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n\n  toggleSelection(propagate: boolean) {\n    // Both unselected and indeterminate toggle to selected\n    const newState =\n      this.selected.value === ClrSelectedState.SELECTED ? ClrSelectedState.UNSELECTED : ClrSelectedState.SELECTED;\n    // NOTE: we always propagate selection up in this method because it is only called when the user takes an action.\n    // It should never be called from lifecycle hooks or app-provided inputs.\n    this.setSelected(newState, true, propagate);\n  }\n\n  private computeSelectionStateFromChildren() {\n    let oneSelected = false;\n    let oneUnselected = false;\n    // Using a good old for loop to exit as soon as we can tell, for better performance on large trees.\n    for (const child of this.children) {\n      switch (child.selected.value) {\n        case ClrSelectedState.INDETERMINATE:\n          return ClrSelectedState.INDETERMINATE;\n        case ClrSelectedState.SELECTED:\n          oneSelected = true;\n          if (oneUnselected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n        case ClrSelectedState.UNSELECTED:\n        default:\n          // Default is the same as unselected, in case an undefined somehow made it all the way here.\n          oneUnselected = true;\n          if (oneSelected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n      }\n    }\n    if (!oneSelected) {\n      return ClrSelectedState.UNSELECTED;\n    } else if (!oneUnselected) {\n      return ClrSelectedState.SELECTED;\n    } else {\n      return ClrSelectedState.UNSELECTED;\n    }\n  }\n\n  /*\n   * Internal, but needs to be called by other nodes\n   */\n  _updateSelectionFromChildren() {\n    const newState = this.computeSelectionStateFromChildren();\n    if (newState === this.selected.value) {\n      return;\n    }\n    this.selected.next(newState);\n    if (this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TreeNodeModel } from './tree-node.model';\n\n/*\n * A declarative model is built by traversing the Angular component tree.\n * Declarative = Tree node components dictate the model\n */\nexport class DeclarativeTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(parent: DeclarativeTreeNodeModel<T> | null) {\n    super();\n    this.parent = parent;\n    if (parent) {\n      parent._addChild(this);\n    }\n    this.children = [];\n  }\n\n  // Override for a more precise type\n  parent: DeclarativeTreeNodeModel<T> | null;\n  children: DeclarativeTreeNodeModel<T>[];\n\n  _addChild(child: DeclarativeTreeNodeModel<T>) {\n    this.children.push(child);\n  }\n\n  _removeChild(child: DeclarativeTreeNodeModel<T>) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      this.parent._removeChild(this);\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf, TemplateRef } from '@angular/core';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TreeFeaturesService<T> {\n  selectable = false;\n  eager = true;\n  recursion: {\n    template: TemplateRef<ClrRecursiveForOfContext<T>>;\n    root: RecursiveTreeNodeModel<T>[];\n  };\n  childrenFetched: Subject<void> = new Subject();\n}\n\nexport function treeFeaturesFactory<T>(existing: TreeFeaturesService<T>) {\n  return existing || new TreeFeaturesService();\n}\n\nexport const TREE_FEATURES_PROVIDER = {\n  provide: TreeFeaturesService,\n  useFactory: treeFeaturesFactory,\n  /*\n   * The Optional + SkipSelf pattern ensures that in case of nested components, only the root one will\n   * instantiate a new service and all its children will reuse the root's instance.\n   * If there are several roots (in this case, several independent trees on a page), each root will instantiate\n   * its own service so they won't interfere with one another.\n   *\n   * TL;DR - Optional + SkipSelf = 1 instance of TreeFeaturesService per tree.\n   */\n  deps: [[new Optional(), new SkipSelf(), TreeFeaturesService]],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TreeNodeModel } from './models/tree-node.model';\n\n@Injectable()\nexport class TreeFocusManagerService<T> {\n  public rootNodeModels: TreeNodeModel<T>[];\n\n  private focusedNodeId: string;\n\n  private _focusRequest: Subject<string> = new Subject();\n\n  private _focusChange: Subject<string> = new Subject();\n\n  get focusRequest(): Observable<string> {\n    return this._focusRequest.asObservable();\n  }\n\n  get focusChange(): Observable<string> {\n    return this._focusChange.asObservable();\n  }\n\n  private findSiblings(model: TreeNodeModel<T>): TreeNodeModel<T>[] {\n    // the method will return not only sibling models but also itself among them\n    if (model.parent) {\n      return model.parent.children;\n    } else {\n      return this.rootNodeModels;\n    }\n  }\n\n  private findLastVisibleInNode(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    // the method will traverse through until it finds the last visible node from the given node\n    if (!model) {\n      return null;\n    }\n    if (model.expanded && model.children.length > 0) {\n      const children = model.children;\n      const lastChild = children[children.length - 1];\n      return this.findLastVisibleInNode(lastChild);\n    } else {\n      return model;\n    }\n  }\n\n  private findNextFocusable(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return null;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex < siblings.length - 1) {\n      return siblings[selfIndex + 1];\n    } else if (selfIndex === siblings.length - 1) {\n      return this.findNextFocusable(model.parent);\n    }\n    return null;\n  }\n\n  private findLastVisibleInTree(): TreeNodeModel<T> {\n    const lastRootNode =\n      this.rootNodeModels && this.rootNodeModels.length && this.rootNodeModels[this.rootNodeModels.length - 1];\n    return this.findLastVisibleInNode(lastRootNode);\n  }\n\n  private findNodeAbove(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return null;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex === 0) {\n      return model.parent;\n    } else if (selfIndex > 0) {\n      return this.findLastVisibleInNode(siblings[selfIndex - 1]);\n    }\n    return null;\n  }\n\n  private findNodeBelow(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return null;\n    }\n\n    if (model.expanded && model.children.length > 0) {\n      return model.children[0];\n    } else {\n      return this.findNextFocusable(model);\n    }\n  }\n\n  focusNode(model: TreeNodeModel<T>): void {\n    if (model) {\n      this._focusRequest.next(model.nodeId);\n    }\n  }\n\n  broadcastFocusedNode(nodeId: string): void {\n    if (this.focusedNodeId !== nodeId) {\n      this.focusedNodeId = nodeId;\n      this._focusChange.next(nodeId);\n    }\n  }\n\n  focusParent(model: TreeNodeModel<T>): void {\n    if (model) {\n      this.focusNode(model.parent);\n    }\n  }\n\n  focusFirstVisibleNode(): void {\n    const focusModel = this.rootNodeModels && this.rootNodeModels[0];\n    this.focusNode(focusModel);\n  }\n\n  focusLastVisibleNode(): void {\n    this.focusNode(this.findLastVisibleInTree());\n  }\n\n  focusNodeAbove(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeAbove(model));\n  }\n\n  focusNodeBelow(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeBelow(model));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '.clr-treenode-link',\n})\nexport class ClrTreeNodeLink {\n  constructor(private el: ElementRef) {}\n\n  activate() {\n    if (this.el.nativeElement && this.el.nativeElement.click) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger, state } from '@angular/animations';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { KeyCodes } from './../../utils/enums/key-codes.enum';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { keyValidator, preventArrowKeyScroll } from '../../utils/focus/key-focus/util';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { DeclarativeTreeNodeModel } from './models/declarative-tree-node.model';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nconst LVIEW_CONTEXT_INDEX = 8;\n\n@Component({\n  selector: 'clr-tree-node',\n  templateUrl: './tree-node.html',\n  providers: [\n    UNIQUE_ID_PROVIDER,\n    TREE_FEATURES_PROVIDER,\n    IfExpandService,\n    { provide: LoadingListener, useExisting: IfExpandService },\n  ],\n  animations: [\n    trigger('toggleChildrenAnim', [\n      transition('collapsed => expanded', [style({ height: 0 }), animate(200, style({ height: '*' }))]),\n      transition('expanded => collapsed', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\n      state('expanded', style({ height: '*', 'overflow-y': 'visible' })),\n      state('collapsed', style({ height: 0 })),\n    ]),\n  ],\n  host: {\n    '[attr.role]': '\"treeitem\"',\n    '[class.clr-tree-node]': 'true',\n  },\n})\nexport class ClrTreeNode<T> implements OnInit, OnDestroy {\n  STATES = ClrSelectedState;\n  private skipEmitChange = false;\n\n  constructor(\n    @Inject(UNIQUE_ID) public nodeId: string,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Optional()\n    @SkipSelf()\n    parent: ClrTreeNode<T>,\n    public featuresService: TreeFeaturesService<T>,\n    public expandService: IfExpandService,\n    public commonStrings: ClrCommonStringsService,\n    private focusManager: TreeFocusManagerService<T>,\n    injector: Injector\n  ) {\n    if (this.featuresService.recursion) {\n      // I'm completely stuck, we have to hack into private properties until either\n      // https://github.com/angular/angular/issues/14935 or https://github.com/angular/angular/issues/15998\n      // are fixed\n      // This is for non-ivy implementations\n      if ((injector as any).view) {\n        this._model = (injector as any).view.context.clrModel;\n      } else {\n        // Ivy puts this on a specific index of a _lView property\n        this._model = (injector as any)._lView[LVIEW_CONTEXT_INDEX].clrModel;\n      }\n    } else {\n      // Force cast for now, not sure how to tie the correct type here to featuresService.recursion\n      this._model = new DeclarativeTreeNodeModel(parent ? (parent._model as DeclarativeTreeNodeModel<T>) : null);\n    }\n    this._model.nodeId = this.nodeId;\n  }\n\n  _model: TreeNodeModel<T>;\n\n  isExpandable() {\n    if (typeof this.expandable !== 'undefined') {\n      return this.expandable;\n    }\n    return !!this.expandService.expandable || (this._model.children && this._model.children.length > 0);\n  }\n\n  @Input('clrSelected')\n  get selected(): ClrSelectedState | boolean {\n    return this._model.selected.value;\n  }\n  set selected(value: ClrSelectedState | boolean) {\n    this.featuresService.selectable = true;\n    // Gracefully handle falsy states like null or undefined because it's just easier than answering questions.\n    // This shouldn't happen with strict typing on the app's side, but it's not up to us.\n    if (value === null || typeof value === 'undefined') {\n      value = ClrSelectedState.UNSELECTED;\n    }\n    // We match booleans to the corresponding ClrSelectedState\n    if (typeof value === 'boolean') {\n      value = value ? ClrSelectedState.SELECTED : ClrSelectedState.UNSELECTED;\n    }\n    // We propagate only if the tree is in smart mode, and skip emitting the output when we set the input\n    // See https://github.com/vmware/clarity/issues/3073\n    this.skipEmitChange = true;\n    this._model.setSelected(value, this.featuresService.eager, this.featuresService.eager);\n    this.skipEmitChange = false;\n  }\n\n  @Output('clrSelectedChange') selectedChange = new EventEmitter<ClrSelectedState>(false);\n\n  get ariaSelected(): boolean {\n    return this.featuresService.selectable ? this._model.selected.value === ClrSelectedState.SELECTED : null;\n  }\n\n  // Allows the consumer to override our logic deciding if a node is expandable.\n  // Useful for recursive trees that don't want to pre-load one level ahead just to know which nodes are expandable.\n  @Input('clrExpandable') expandable: boolean | undefined;\n\n  // I'm caving on this, for tree nodes I think we can tolerate having a two-way binding on the component\n  // rather than enforce the clrIfExpanded structural directive for dynamic cases. Mostly because for the smart\n  // case, you can't use a structural directive, it would need to go on an ng-container.\n  @Input('clrExpanded')\n  get expanded(): boolean {\n    return this.expandService.expanded;\n  }\n  set expanded(value: boolean) {\n    this.expandService.expanded = value;\n  }\n\n  @Output('clrExpandedChange') expandedChange = new EventEmitter<boolean>();\n\n  private subscriptions: Subscription[] = [];\n\n  contentContainerTabindex = -1;\n  @ViewChild('contentContainer', { read: ElementRef, static: true })\n  private contentContainer: ElementRef;\n\n  ngOnInit() {\n    this._model.expanded = this.expanded;\n    this.subscriptions.push(\n      this._model.selected.pipe(filter(() => !this.skipEmitChange)).subscribe(value => {\n        this.selectedChange.emit(value);\n      })\n    );\n    this.subscriptions.push(\n      this.expandService.expandChange.subscribe(value => {\n        this.expandedChange.emit(value);\n        this._model.expanded = value;\n      })\n    );\n    this.subscriptions.push(\n      this.focusManager.focusRequest.subscribe(nodeId => {\n        if (this.nodeId === nodeId) {\n          this.focusTreeNode();\n        }\n      }),\n      this.focusManager.focusChange.subscribe(nodeId => {\n        this.checkTabIndex(nodeId);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this._model.destroy();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  // @ContentChild would have been more succinct\n  // but it doesn't offer a way to query only an immediate child\n  @ContentChildren(ClrTreeNodeLink, { descendants: false })\n  private treeNodeLinkList: QueryList<ClrTreeNodeLink>;\n\n  get treeNodeLink() {\n    return this.treeNodeLinkList && this.treeNodeLinkList.first;\n  }\n\n  private setTabIndex(value: number) {\n    this.contentContainerTabindex = value;\n    this.contentContainer.nativeElement.setAttribute('tabindex', value);\n  }\n\n  private checkTabIndex(nodeId: string): void {\n    if (isPlatformBrowser(this.platformId) && this.nodeId !== nodeId && this.contentContainerTabindex !== -1) {\n      this.setTabIndex(-1);\n    }\n  }\n\n  focusTreeNode(): void {\n    if (isPlatformBrowser(this.platformId) && document.activeElement !== this.contentContainer.nativeElement) {\n      this.setTabIndex(0);\n      this.contentContainer.nativeElement.focus();\n    }\n  }\n\n  broadcastFocusOnContainer() {\n    this.focusManager.broadcastFocusedNode(this.nodeId);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // Two reasons to prevent default behavior:\n    // 1. to prevent scrolling on arrow keys\n    // 2. Assistive Technology focus differs from Keyboard focus behavior.\n    //    By default, pressing arrow key makes AT focus go into the nested content of the item.\n    preventArrowKeyScroll(event);\n\n    // https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-22\n    switch (keyValidator(event.key)) {\n      case KeyCodes.ArrowUp:\n        this.focusManager.focusNodeAbove(this._model);\n        break;\n      case KeyCodes.ArrowDown:\n        this.focusManager.focusNodeBelow(this._model);\n        break;\n      case KeyCodes.ArrowRight:\n        this.expandOrFocusFirstChild();\n        break;\n      case KeyCodes.ArrowLeft:\n        this.collapseOrFocusParent();\n        break;\n      case KeyCodes.Home:\n        this.focusManager.focusFirstVisibleNode();\n        break;\n      case KeyCodes.End:\n        this.focusManager.focusLastVisibleNode();\n        break;\n      case KeyCodes.Enter:\n        this.triggerDefaultAction();\n        break;\n      case KeyCodes.Space:\n        // to prevent scrolling on space key in this specific case\n        event.preventDefault();\n        this.triggerDefaultAction();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private expandOrFocusFirstChild() {\n    if (this.expanded) {\n      // if the node is already expanded and has children, focus its very first child\n      if (this._model.children.length > 0) {\n        this.focusManager.focusNodeBelow(this._model);\n      }\n    } else {\n      // we must check if the node is expandable, in order to set .expanded to true from false\n      // because we shouldn't set .expanded to true if it's not expandable node\n      if (this.isExpandable()) {\n        this.expandService.expanded = true;\n      }\n    }\n  }\n\n  private collapseOrFocusParent() {\n    if (this.expanded) {\n      this.expandService.expanded = false;\n    } else {\n      this.focusManager.focusParent(this._model);\n    }\n  }\n\n  private triggerDefaultAction() {\n    if (this.treeNodeLink) {\n      this.treeNodeLink.activate();\n    } else {\n      if (this.featuresService.selectable) {\n        this._model.toggleSelection(this.featuresService.eager);\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { ClrTreeNode } from './tree-node';\n\n@Component({\n  selector: 'clr-tree',\n  template: `\n    <ng-content></ng-content>\n    <clr-recursive-children\n      *ngIf=\"featuresService.recursion\"\n      [children]=\"featuresService.recursion.root\"\n    ></clr-recursive-children>\n  `,\n  providers: [TREE_FEATURES_PROVIDER, TreeFocusManagerService],\n  host: {\n    '[attr.tabindex]': 'tabindex',\n    '[attr.role]': '\"tree\"',\n    '[attr.aria-multiselectable]': 'isMultiSelectable',\n  },\n})\nexport class ClrTree<T> implements AfterContentInit, OnDestroy {\n  constructor(\n    public featuresService: TreeFeaturesService<T>,\n    private focusManagerService: TreeFocusManagerService<T>,\n    private el: ElementRef\n  ) {}\n\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrLazy')\n  set lazy(value: boolean) {\n    this.featuresService.eager = !value;\n  }\n\n  tabindex = 0;\n\n  get isMultiSelectable() {\n    return this.featuresService.selectable && this.rootNodes.length > 0;\n  }\n\n  @HostListener('focusin', ['$event'])\n  onFocusIn(event: FocusEvent) {\n    if (event.target === this.el.nativeElement) {\n      // After discussing with the team, I've made it so that when the tree receives focus, the first visible node will be focused.\n      // This will prevent from the page scrolling abruptly to the first selected node if it exist in a deeply nested tree.\n      this.focusManagerService.focusFirstVisibleNode();\n\n      // when the first child gets focus,\n      // tree should no longer have tabindex of 0;\n      delete this.tabindex;\n    }\n  }\n\n  @ContentChildren(ClrTreeNode) private rootNodes: QueryList<ClrTreeNode<T>>;\n\n  ngAfterContentInit() {\n    this.setRootNodes();\n    this.subscriptions.push(\n      this.rootNodes.changes.subscribe(() => {\n        this.setRootNodes();\n      })\n    );\n  }\n\n  private setRootNodes(): void {\n    // if node has no parent, it's a root node\n    // for recursive tree, this.rootNodes registers also nested children\n    // so we have to use filter to extract the ones that are truly root nodes\n    this.focusManagerService.rootNodeModels = this.rootNodes.map(node => node._model).filter(node => !node.parent);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isObservable, Subscription } from 'rxjs';\n\nimport { TreeNodeModel } from './tree-node.model';\nimport { AsyncArray, isPromise } from './async-array';\nimport { TreeFeaturesService } from '../tree-features.service';\n\n/*\n * A recursive model is built received from the app and traversed to create the corresponding components.\n * Recursive = Model dictates the tree node components\n */\nexport class RecursiveTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(\n    model: T,\n    parent: RecursiveTreeNodeModel<T> | null,\n    private getChildren: (node: T) => AsyncArray<T> | undefined,\n    private featuresService: TreeFeaturesService<T> | undefined\n  ) {\n    super();\n    this.model = model;\n    this.parent = parent;\n  }\n\n  parent: RecursiveTreeNodeModel<T> | null;\n\n  private childrenFetched = false;\n\n  clearChildren() {\n    this._children.forEach(child => child.destroy());\n    delete this._children;\n    this.childrenFetched = false;\n  }\n\n  fetchChildren() {\n    if (this.childrenFetched) {\n      return;\n    }\n\n    const asyncChildren = this.getChildren(this.model);\n    if (isPromise(asyncChildren)) {\n      this.loading = true;\n      asyncChildren.then(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (isObservable(asyncChildren)) {\n      this.loading = true;\n      this.subscription = asyncChildren.subscribe(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (asyncChildren) {\n      // Synchronous case\n      this._children = this.wrapChildren(asyncChildren);\n    } else {\n      this._children = [];\n    }\n    this.childrenFetched = true;\n    if (this.featuresService) {\n      this.featuresService.childrenFetched.next();\n    }\n  }\n\n  private wrapChildren(rawModels: T[]) {\n    return rawModels.map(m => new RecursiveTreeNodeModel(m, this, this.getChildren, this.featuresService));\n  }\n\n  private _children: RecursiveTreeNodeModel<T>[] = [];\n  get children(): RecursiveTreeNodeModel<T>[] {\n    this.fetchChildren();\n    return this._children;\n  }\n  set children(value: RecursiveTreeNodeModel<T>[]) {\n    this._children = value;\n  }\n\n  private subscription: Subscription;\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// We need to make sure people can give us null or undefined children even if they run strict type checking.\nimport { Observable } from 'rxjs';\n\nexport type AsyncArray<T> =\n  | T[]\n  | null\n  | undefined\n  | Promise<T[] | null | undefined>\n  | Observable<T[] | null | undefined>;\n\nexport function isPromise<T>(o: AsyncArray<T>): o is Promise<T[]> {\n  // Shamelessly copied from every open-source project out there.\n  return o && typeof (o as any).then === 'function';\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Input, OnChanges, OnDestroy, TemplateRef } from '@angular/core';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { AsyncArray } from './models/async-array';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nexport interface ClrRecursiveForOfContext<T> {\n  $implicit: T;\n  clrModel: TreeNodeModel<T>;\n}\n\n@Directive({ selector: '[clrRecursiveFor][clrRecursiveForOf]' })\nexport class ClrRecursiveForOf<T> implements OnChanges, OnDestroy {\n  constructor(\n    private template: TemplateRef<ClrRecursiveForOfContext<T>>,\n    private featuresService: TreeFeaturesService<T>,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // TODO: accept NgIterable<T>\n  @Input('clrRecursiveForOf') nodes: T | T[];\n\n  // TODO: accept NgIterable<T> return type\n  @Input('clrRecursiveForGetChildren') getChildren: (node: T) => AsyncArray<T>;\n\n  private childrenFetchSubscription: Subscription;\n\n  // I'm using OnChanges instead of OnInit to easily keep up to date with dynamic trees. Maybe optimizable later.\n  ngOnChanges() {\n    let wrapped: RecursiveTreeNodeModel<T>[];\n    if (Array.isArray(this.nodes)) {\n      wrapped = this.nodes.map(node => new RecursiveTreeNodeModel(node, null, this.getChildren, this.featuresService));\n    } else {\n      wrapped = [new RecursiveTreeNodeModel(this.nodes, null, this.getChildren, this.featuresService)];\n    }\n    if (!this.childrenFetchSubscription) {\n      this.childrenFetchSubscription = this.featuresService.childrenFetched.pipe(debounceTime(0)).subscribe(() => {\n        this.cdr.detectChanges();\n      });\n    }\n\n    this.featuresService.recursion = {\n      template: this.template,\n      root: wrapped,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.childrenFetchSubscription) {\n      this.childrenFetchSubscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\n\n@Component({\n  selector: 'clr-recursive-children',\n  template: `\n    <ng-container *ngIf=\"shouldRender()\">\n      <ng-container *ngFor=\"let child of parent?.children || children\">\n        <ng-container *ngTemplateOutlet=\"featuresService.recursion.template; context: getContext(child)\"></ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n  host: {\n    '[attr.role]': '\"group\"', // Safari + VO needs direct relationship between treeitem and group; no element should exist between them\n  },\n})\n/**\n * Internal component, do not export!\n * This is part of the hack to get around https://github.com/angular/angular/issues/15998\n */\nexport class RecursiveChildren<T> {\n  constructor(public featuresService: TreeFeaturesService<T>, @Optional() private expandService: IfExpandService) {\n    if (expandService) {\n      this.subscription = this.expandService.expandChange.subscribe(value => {\n        if (!value && this.parent && !this.featuresService.eager && this.featuresService.recursion) {\n          // In the case of lazy-loading recursive trees, we clear the children on collapse.\n          // This is better in case they change between two user interaction, and that way\n          // the app itself can decide whether to cache them or not.\n          (this.parent as RecursiveTreeNodeModel<T>).clearChildren();\n        }\n      });\n    }\n  }\n\n  shouldRender() {\n    return (\n      this.featuresService.recursion &&\n      // In the smart case, we eagerly render all the recursive children\n      // to make sure two-way bindings for selection are available.\n      // They will be hidden with CSS by the parent.\n      (this.featuresService.eager || !this.expandService || this.expandService.expanded)\n    );\n  }\n\n  // Offering the option to either give the parent node to recurse potentially lazily,\n  // or directly the list of children to display.\n  @Input('parent') parent: TreeNodeModel<T>;\n  @Input('children') children: TreeNodeModel<T>[];\n\n  getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T> {\n    return {\n      $implicit: node.model,\n      clrModel: node,\n    };\n  }\n\n  subscription: Subscription;\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrTreeNode } from './tree-node';\nimport { ClrTree } from './tree';\nimport { ClrRecursiveForOf } from './recursive-for-of';\nimport { RecursiveChildren } from './recursive-children';\nimport { ClrTreeNodeLink } from './tree-node-link';\nimport { angleIcon, ClarityIcons } from '@cds/core/icon';\n\nexport const CLR_TREE_VIEW_DIRECTIVES: Type<any>[] = [ClrTree, ClrTreeNode, ClrRecursiveForOf, ClrTreeNodeLink];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrLoadingModule],\n  declarations: [CLR_TREE_VIEW_DIRECTIVES, RecursiveChildren],\n  exports: [CLR_TREE_VIEW_DIRECTIVES],\n})\nexport class ClrTreeViewModule {\n  constructor() {\n    ClarityIcons.addIcons(angleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrDatagridModule } from './datagrid/datagrid.module';\nimport { ClrStackViewModule } from './stack-view/stack-view.module';\nimport { ClrTreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({ exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule] })\nexport class ClrDataModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\nimport { ArrowKeyDirection } from '../arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item';\n\nexport class Linkers {\n  /**\n   * Links a set of focusable items to a parent along one direction\n   */\n  static linkParent(\n    items: FocusableItem[],\n    parent: FocusableItem | Observable<FocusableItem>,\n    direction: ArrowKeyDirection\n  ) {\n    items.forEach(item => (item[direction] = parent));\n  }\n\n  /**\n   * Double-links a set of focusable items vertically, possibly looping\n   */\n  static linkVertical(items: FocusableItem[], loop = true) {\n    items.forEach((item, index) => {\n      if (index > 0) {\n        item.up = items[index - 1];\n      }\n      if (index < items.length - 1) {\n        item.down = items[index + 1];\n      }\n    });\n    if (loop && items.length > 1) {\n      items[0].up = items[items.length - 1];\n      items[items.length - 1].down = items[0];\n    }\n  }\n}\n\n// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:\n// export function linkHorizontal(items: FocusableItem[], loop = true);\n// export function linkTable(items: FocusableItem[][]);\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable, Observer } from 'rxjs';\n\nexport function wrapObservable<T>(\n  observable: Observable<T>,\n  onSubscribe?: (observer: Observer<T>) => void,\n  onUnsubscribe?: (observer: Observer<T>) => void\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    onSubscribe(observer);\n    const subscription = observable.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      if (onUnsubscribe) {\n        onUnsubscribe(observer);\n      }\n    };\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, SkipSelf } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nimport { Linkers } from '../../../utils/focus/focusable-item/linkers';\nimport { wrapObservable } from '../../../utils/focus/wrap-observable';\n\n@Injectable()\nexport class DropdownFocusHandler implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private renderer: Renderer2,\n    @SkipSelf()\n    @Optional()\n    private parent: DropdownFocusHandler,\n    private toggleService: ClrPopoverToggleService,\n    private focusService: FocusService,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.resetChildren();\n    this.moveToFirstItemWhenOpen();\n    if (!this.parent) {\n      this.handleRootFocus();\n    }\n  }\n\n  private _unlistenFuncs: Function[] = [];\n\n  /**\n   * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n   */\n  moveToFirstItemWhenOpen() {\n    this.toggleService.openChange.subscribe(open => {\n      if (open && this.toggleService.originalEvent) {\n        // Even if we properly waited for ngAfterViewInit, the container still wouldn't be attached to the DOM.\n        // So setTimeout is the only way to wait for the container to be ready to move focus to first item.\n        setTimeout(() => {\n          this.focusService.moveTo(this);\n          if (this.parent) {\n            this.focusService.move(ArrowKeyDirection.RIGHT);\n          } else {\n            this.focusService.move(ArrowKeyDirection.DOWN);\n          }\n        });\n      }\n    });\n  }\n\n  private focusBackOnTrigger = false;\n\n  /**\n   * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n   */\n  handleRootFocus() {\n    this.toggleService.openChange.subscribe(open => {\n      if (!open) {\n        // We reset the state of the focus service both on initialization and when closing.\n        this.focusService.reset(this);\n        // But we only actively focus the trigger when closing, not on initialization.\n        if (this.focusBackOnTrigger) {\n          this.focus();\n        }\n      }\n      this.focusBackOnTrigger = open;\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n\n    if (this.parent) {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowright', event => this.toggleService.toggleWithEvent(event))\n      );\n    } else {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowup', event => this.toggleService.toggleWithEvent(event))\n      );\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowdown', event => this.toggleService.toggleWithEvent(event))\n      );\n      this.focusService.listenToArrowKeys(el);\n    }\n  }\n\n  private _container: HTMLElement;\n  get container() {\n    return this._container;\n  }\n  set container(el: HTMLElement) {\n    this._container = el;\n\n    // whether root container or not, tab key should always toggle (i.e. close) the container\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.tab', event => this.toggleService.toggleWithEvent(event))\n    );\n\n    if (this.parent) {\n      // if it's a nested container, pressing esc has the same effect as pressing left key, which closes the current\n      // popup and moves up to its parent. Here, we stop propagation so that the parent container\n      // doesn't receive the esc keydown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => {\n          this.focusService.move(ArrowKeyDirection.LEFT);\n          event.stopPropagation();\n        })\n      );\n    } else {\n      // The root container is the only one we register to the focus service, others do not need focus\n      this.focusService.registerContainer(el);\n\n      // The root container will simply close the container when esc key is pressed\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => this.toggleService.toggleWithEvent(event))\n      );\n\n      // When the user moves focus outside of the menu, we close the dropdown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'blur', event => {\n          // we clear out any existing focus on the items\n          this.children.pipe(take(1)).subscribe(items => items.forEach(item => item.blur()));\n\n          // event.relatedTarget is null in IE11. In that case we use document.activeElement which correctly points\n          // to the element we want to check. Note that other browsers might point document.activeElement to the\n          // wrong element. This is ok, because all the other browsers we support relies on event.relatedTarget.\n          const target = event.relatedTarget || document.activeElement;\n\n          // If the user clicks on an item which triggers the blur, we don't want to close it since it may open a submenu.\n          // In the case of needing to close it (i.e. user selected an item and the dropdown menu is set to close on\n          // selection), dropdown-item.ts handles it.\n          if (target && isPlatformBrowser(this.platformId)) {\n            if (el.contains(target) || target === this.trigger) {\n              return;\n            }\n          }\n          // We let the user move focus to where the want, we don't force the focus back on the trigger\n          this.focusBackOnTrigger = false;\n          this.toggleService.open = false;\n        })\n      );\n    }\n  }\n\n  focus() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.focus();\n    }\n  }\n  blur() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.trigger.click();\n    }\n  }\n\n  private children: ReplaySubject<FocusableItem[]>;\n  right?: Observable<FocusableItem>;\n  down?: Observable<FocusableItem>;\n  up?: Observable<FocusableItem>;\n\n  private openAndGetChildren() {\n    return wrapObservable(this.children, () => (this.toggleService.open = true));\n  }\n  private closeAndGetThis() {\n    return wrapObservable(of(this), () => (this.toggleService.open = false));\n  }\n\n  resetChildren() {\n    this.children = new ReplaySubject<FocusableItem[]>(1);\n    if (this.parent) {\n      this.right = this.openAndGetChildren().pipe(map(all => all[0]));\n    } else {\n      this.down = this.openAndGetChildren().pipe(map(all => all[0]));\n      this.up = this.openAndGetChildren().pipe(map(all => all[all.length - 1]));\n    }\n  }\n\n  addChildren(children: FocusableItem[]) {\n    Linkers.linkVertical(children);\n    if (this.parent) {\n      Linkers.linkParent(children, this.closeAndGetThis(), ArrowKeyDirection.LEFT);\n    }\n    this.children.next(children);\n  }\n\n  ngOnDestroy() {\n    this._unlistenFuncs.forEach((unlisten: Function) => unlisten());\n    this.focusService.detachListeners();\n  }\n}\n\nexport const DROPDOWN_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(DropdownFocusHandler);\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RootDropdownService {\n  private _changes: Subject<boolean> = new Subject<boolean>();\n\n  get changes(): Observable<boolean> {\n    return this._changes.asObservable();\n  }\n\n  closeMenus(): void {\n    this._changes.next(false);\n  }\n}\n\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n  return existing || new RootDropdownService();\n}\n\nexport const ROOT_DROPDOWN_PROVIDER = {\n  provide: RootDropdownService,\n  useFactory: clrRootDropdownFactory,\n  deps: [[new Optional(), new SkipSelf(), RootDropdownService]],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DROPDOWN_FOCUS_HANDLER_PROVIDER } from './providers/dropdown-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\n\nimport { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from './providers/dropdown.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dropdown',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.dropdown]': 'true',\n    '[class.open]': 'toggleService.open',\n  },\n  providers: [\n    ROOT_DROPDOWN_PROVIDER,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    FOCUS_SERVICE_PROVIDER,\n    ClrPopoverToggleService,\n    DROPDOWN_FOCUS_HANDLER_PROVIDER,\n  ],\n})\nexport class ClrDropdown implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public parent: ClrDropdown,\n    public toggleService: ClrPopoverToggleService,\n    private cdr: ChangeDetectorRef,\n    dropdownService: RootDropdownService\n  ) {\n    this.subscriptions.push(dropdownService.changes.subscribe(value => (this.toggleService.open = value)));\n    this.subscriptions.push(toggleService.openChange.subscribe(() => this.cdr.markForCheck()));\n  }\n\n  @Input('clrCloseMenuOnItemClick') isMenuClosable = true;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\n@Injectable()\nexport class BasicFocusableItem implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    renderer.setAttribute(el.nativeElement, 'id', id);\n    renderer.setAttribute(el.nativeElement, 'tabindex', '-1');\n  }\n\n  disabled = false;\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n      this.el.nativeElement.focus();\n      this.el.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n    }\n  }\n  blur() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n\nexport const BASIC_FOCUSABLE_ITEM_PROVIDER = [\n  UNIQUE_ID_PROVIDER,\n  {\n    provide: FocusableItem,\n    useClass: BasicFocusableItem,\n  },\n];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of @clr/ui as a vanilla Javascript helper.\n */\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { PopoverOptions } from './popover-options.interface';\nexport enum Point {\n  RIGHT_CENTER,\n  RIGHT_TOP,\n  RIGHT_BOTTOM,\n  TOP_CENTER,\n  TOP_RIGHT,\n  TOP_LEFT,\n  BOTTOM_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n}\n\nconst POSITION_RELATIVE = 'relative';\nconst POSITION_ABSOLUTE = 'absolute';\nconst POSITION_FIXED = 'fixed';\n\nconst OVERFLOW_SCROLL = 'scroll';\nconst OVERFLOW_AUTO = 'auto';\n\nexport class Popover {\n  private _scroll: Subject<void>;\n\n  constructor(private element: any) {\n    // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n    element.style.position = POSITION_ABSOLUTE;\n    element.style.top = 0;\n    element.style.bottom = 'auto';\n    element.style.left = 0;\n    element.style.right = 'auto';\n  }\n\n  // TODO: need a way to account for parameters that change dynamically (positioning).\n  public anchor(\n    anchor: any,\n    anchorAlign: Point,\n    popoverAlign: Point,\n    { offsetX = 0, offsetY = 0, useAnchorParent = false }: PopoverOptions = {}\n  ): Observable<any> {\n    // TODO: we are assuming here that the popover is inside or next to the anchor.\n    // We'd need to go up the popover tree too otherwise\n\n    this.addScrollEventListeners(anchor);\n    if (useAnchorParent) {\n      anchor = anchor.parentNode;\n    }\n    // explicitly override anchor's style to static\n    anchor.style.position = 'static';\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const popoverRect = this.element.getBoundingClientRect();\n\n    // position of left top corner of anchor + the offset\n    let leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n    let topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n    // first, adjust positioning based on anchor's align point\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += anchorRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += anchorRect.height / 2;\n        leftDiff += anchorRect.width;\n        break;\n      default:\n    }\n\n    // second, adjust positioning based on popover's align point\n    switch (popoverAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        leftDiff -= popoverRect.width;\n        break;\n      default:\n    }\n\n    // Third, adjust with popover's margins based on the two align points.\n    // Here, we make an assumption that popover is primarily positioned outside the\n    // anchor with minor offset. Without this assumption, it's impossible to apply\n    // the popover's margins in a predictable way. For example, assume that a popover\n    // and its anchor are exactly the same size. if a popover is positioned inside the\n    // anchor (which is technically possible), then it becomes impossible to know what to do\n    // if the popover has a non-zero margin value all around (because applying the margin in\n    // all four directions will result in no margin visually, which isn't what we want).\n    // Therefore, our logic makes assumptions about margins of interest given the points,\n    // and only covers the cases where popover is outside the anchor.\n\n    const popoverComputedStyle = getComputedStyle(this.element);\n    const marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n    const marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n    const marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n    const marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n      case Point.TOP_RIGHT:\n      case Point.RIGHT_TOP:\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.LEFT_BOTTOM:\n      case Point.BOTTOM_LEFT:\n      case Point.BOTTOM_RIGHT:\n      case Point.RIGHT_BOTTOM:\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.TOP_CENTER:\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += marginTop;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff -= marginRight;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        break;\n      default:\n    }\n\n    this.element.style.transform = `translateX(${Math.round(leftDiff)}px) translateY(${Math.round(topDiff)}px)`;\n    return this._scroll.asObservable();\n  }\n\n  public release() {\n    this.element.style.transform = '';\n    this.removeScrollEventListeners();\n  }\n\n  private isPositioned(container: any) {\n    const position = getComputedStyle(container).position;\n    return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n  }\n\n  /*\n   * Containers up to the first positioned one will have an event on scroll\n   */\n\n  private scrollableElements: HTMLElement[] = [];\n\n  private emitScrollEvent() {\n    this._scroll.next();\n  }\n\n  private boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n\n  private addScrollEventListeners(e: any) {\n    this._scroll = new Subject<void>();\n    const anchor: any = e;\n    let current: any = e;\n    while (current && current !== document) {\n      if (this.scrolls(current)) {\n        current.addEventListener('scroll', this.boundOnScrollListener);\n        this.scrollableElements.push(current);\n      }\n      if (current !== anchor && this.isPositioned(current)) {\n        break;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  private removeScrollEventListeners() {\n    for (const elem of this.scrollableElements) {\n      elem.removeEventListener('scroll', this.boundOnScrollListener);\n    }\n    this.scrollableElements.length = 0;\n    if (this._scroll) {\n      this._scroll.complete();\n      delete this._scroll;\n    }\n  }\n\n  private scrolls(container: any): boolean {\n    const computedStyles = getComputedStyle(container);\n    return (\n      computedStyles.overflowX === OVERFLOW_SCROLL ||\n      computedStyles.overflowX === OVERFLOW_AUTO ||\n      computedStyles.overflowY === OVERFLOW_SCROLL ||\n      computedStyles.overflowY === OVERFLOW_AUTO\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\nimport { ClrDropdown } from './dropdown';\nimport { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\nimport { RootDropdownService } from './providers/dropdown.service';\n\n@Directive({\n  selector: '[clrDropdownItem]',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.dropdown-item]': 'true',\n    '[attr.role]': '\"menuitem\"',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': \"(disabled && setByDeprecatedDisabled)? '' : null\",\n    '[attr.id]': 'dropdownItemId',\n  },\n  providers: [BASIC_FOCUSABLE_ITEM_PROVIDER],\n})\nexport class ClrDropdownItem implements AfterViewInit {\n  constructor(\n    private dropdown: ClrDropdown,\n    private el: ElementRef<HTMLElement>,\n    private _dropdownService: RootDropdownService,\n    private renderer: Renderer2,\n    private focusableItem: FocusableItem\n  ) {}\n\n  private unlisten: () => void;\n  public setByDeprecatedDisabled = false;\n\n  @Input('clrDisabled')\n  set disabled(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n  }\n\n  get disabled() {\n    return this.focusableItem.disabled;\n  }\n\n  /*\n   * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.\n   */\n  @Input('disabled')\n  set disabledDeprecated(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n    this.setByDeprecatedDisabled = true;\n  }\n\n  get disabledDeprecated() {\n    return this.focusableItem.disabled;\n  }\n\n  /**\n   * Let you overwrite the focusable auto increment id.\n   */\n  @Input('id')\n  set dropdownItemId(value: string) {\n    this.focusableItem.id = value;\n  }\n  get dropdownItemId() {\n    return this.focusableItem.id;\n  }\n\n  ngAfterViewInit() {\n    this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', () => this.onDropdownItemClick());\n  }\n\n  onDropdownItemClick(): void {\n    if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {\n      this._dropdownService.closeMenus();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.unlisten) {\n      this.unlisten();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterViewChecked,\n  ElementRef,\n  HostBinding,\n  Injector,\n  OnDestroy,\n  Renderer2,\n  SkipSelf,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\n// Literally any annotation would work here, but writing our own @HoneyBadger annotation feels overkill.\n@Directive()\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n  constructor(injector: Injector, @SkipSelf() protected parentHost: ElementRef) {\n    this.el = injector.get(ElementRef);\n    this.toggleService = injector.get(ClrPopoverToggleService);\n    this.renderer = injector.get(Renderer2);\n    // Default anchor is the parent host\n    this.anchorElem = parentHost.nativeElement;\n\n    this.popoverInstance = new Popover(this.el.nativeElement);\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      if (change) {\n        this.anchor();\n        this.attachESCListener();\n      } else {\n        this.release();\n        this.detachESCListener();\n      }\n    });\n    if (this.toggleService.open) {\n      this.anchor();\n      this.attachESCListener();\n    }\n  }\n\n  protected el: ElementRef;\n  protected toggleService: ClrPopoverToggleService;\n  protected renderer: Renderer2;\n\n  private popoverInstance: Popover;\n  private subscription: Subscription;\n\n  private updateAnchor = false;\n\n  protected anchorElem: any;\n  protected anchorPoint: Point;\n  protected popoverPoint: Point;\n  protected popoverOptions: PopoverOptions = {};\n\n  protected ignoredElement: any;\n\n  protected anchor() {\n    this.updateAnchor = true;\n    // Ugh\n    this.ignore = this.toggleService.originalEvent;\n  }\n\n  protected release() {\n    this.detachOutsideClickListener();\n    this.popoverInstance.release();\n  }\n\n  ngAfterViewChecked() {\n    if (this.updateAnchor) {\n      this.updateAnchor = false;\n      this.popoverInstance\n        .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n        .subscribe(() => {\n          // if a scroll event is detected, close the popover\n          this.toggleService.open = false;\n        });\n      this.attachOutsideClickListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this.release();\n    this.detachESCListener();\n    this.subscription.unsubscribe();\n  }\n\n  /*\n   * Fallback to hide when *clrIfOpen is not being used\n   */\n\n  @HostBinding('class.is-off-screen')\n  get isOffScreen() {\n    return this.toggleService.open ? false : true;\n  }\n\n  /*\n   * Until https://github.com/angular/angular/issues/8785 is supported, we don't have any way to instantiate\n   * a separate directive on the host. So let's do dirty but performant for now.\n   */\n  public closeOnOutsideClick = false;\n  private hostClickListener: () => void;\n  private documentClickListener: () => void;\n  private documentESCListener: () => void;\n  private ignoredElementClickListener: () => void;\n  private ignore: any;\n\n  private attachESCListener(): void {\n    if (!this.popoverOptions.ignoreGlobalESCListener) {\n      this.documentESCListener = this.renderer.listen('document', 'keydown', event => {\n        if (event && event.key) {\n          if (event.key === 'Escape' || event.key === 'Esc') {\n            this.toggleService.open = false;\n          }\n        }\n      });\n    }\n  }\n\n  private detachESCListener(): void {\n    if (this.documentESCListener) {\n      this.documentESCListener();\n      delete this.documentESCListener;\n    }\n  }\n\n  private attachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      this.hostClickListener = this.renderer.listen(this.el.nativeElement, 'click', event => (this.ignore = event));\n      if (this.ignoredElement) {\n        this.ignoredElementClickListener = this.renderer.listen(\n          this.ignoredElement,\n          'click',\n          event => (this.ignore = event)\n        );\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', event => {\n        if (event === this.ignore) {\n          delete this.ignore;\n        } else {\n          this.toggleService.open = false;\n        }\n      });\n    }\n  }\n\n  private detachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      if (this.hostClickListener) {\n        this.hostClickListener();\n        delete this.hostClickListener;\n      }\n      if (this.ignoredElementClickListener) {\n        this.ignoredElementClickListener();\n        delete this.ignoredElementClickListener;\n      }\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  SkipSelf,\n} from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\n\n@Component({\n  selector: 'clr-dropdown-menu',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[attr.role]': '\"menu\"',\n  },\n})\nexport class ClrDropdownMenu extends AbstractPopover implements AfterContentInit, OnDestroy {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef<HTMLElement>,\n    @Optional()\n    @SkipSelf()\n    nested: ClrDropdownMenu,\n    focusHandler: DropdownFocusHandler\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-dropdown-menu should only be used inside of a clr-dropdown');\n    }\n    super(injector, parentHost);\n    if (!nested) {\n      // Default positioning for normal dropdown is bottom-left\n      this.anchorPoint = Point.BOTTOM_LEFT;\n      this.popoverPoint = Point.LEFT_TOP;\n    } else {\n      // Default positioning for nested dropdown is right-top\n      this.anchorPoint = Point.RIGHT_TOP;\n      this.popoverPoint = Point.LEFT_TOP;\n    }\n    this.popoverOptions.allowMultipleOpen = true;\n    this.popoverOptions.ignoreGlobalESCListener = true;\n    this.closeOnOutsideClick = true;\n    this.focusHandler = focusHandler;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // set the popover values based on menu position\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private focusHandler: DropdownFocusHandler;\n  @ContentChildren(FocusableItem) items: QueryList<FocusableItem>;\n\n  ngAfterContentInit() {\n    this.focusHandler.container = this.el.nativeElement;\n    this.items.changes.subscribe(() => this.focusHandler.addChildren(this.items.toArray()));\n    // I saw this on GitHub as a solution to avoid code duplication because of missed QueryList changes\n    this.items.notifyOnChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusHandler.resetChildren();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { ClrDropdown } from './dropdown';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\n\n@Directive({\n  // We support both selectors for legacy reasons\n  selector: '[clrDropdownTrigger],[clrDropdownToggle]',\n  host: {\n    '[class.dropdown-toggle]': 'isRootLevelToggle',\n    '[class.dropdown-item]': '!isRootLevelToggle',\n    '[class.expandable]': '!isRootLevelToggle',\n    '[class.active]': 'active',\n    '[attr.aria-haspopup]': '\"menu\"',\n    '[attr.aria-expanded]': 'active',\n  },\n})\nexport class ClrDropdownTrigger {\n  public isRootLevelToggle = true;\n\n  constructor(\n    dropdown: ClrDropdown,\n    private toggleService: ClrPopoverToggleService,\n    el: ElementRef<HTMLElement>,\n    focusHandler: DropdownFocusHandler\n  ) {\n    // if the containing dropdown has a parent, then this is not the root level one\n    if (dropdown.parent) {\n      this.isRootLevelToggle = false;\n    }\n    focusHandler.trigger = el.nativeElement;\n  }\n\n  get active(): boolean {\n    return this.toggleService.open;\n  }\n\n  @HostListener('click', ['$event'])\n  onDropdownTriggerClick(event: any): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrDropdown } from './dropdown';\nimport { ClrDropdownItem } from './dropdown-item';\nimport { ClrDropdownMenu } from './dropdown-menu';\nimport { ClrDropdownTrigger } from './dropdown-trigger';\n\nexport const CLR_DROPDOWN_DIRECTIVES: Type<any>[] = [ClrDropdown, ClrDropdownMenu, ClrDropdownTrigger, ClrDropdownItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DROPDOWN_DIRECTIVES],\n  exports: [CLR_DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrDropdownModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO Make this an enum\nexport const ALERT_TYPES: string[] = ['info', 'warning', 'danger', 'success'];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { AlertInfoObject } from '../utils/alert-info-object';\nimport { ALERT_TYPES } from '../utils/alert-types';\nimport { ClrCommonStringsService } from '../../../utils/i18n/common-strings.service';\n\n@Injectable()\nexport class AlertIconAndTypesService {\n  constructor(private commonStrings: ClrCommonStringsService) {}\n\n  private defaultIconShape = 'info-circle';\n  private _alertIconShape = '';\n  private _alertType = 'info';\n\n  get alertType(): string {\n    return this._alertType;\n  }\n  set alertType(val: string) {\n    if (ALERT_TYPES.indexOf(val) > -1) {\n      this._alertType = val;\n    }\n  }\n\n  get alertIconShape(): string {\n    if ('' === this._alertIconShape) {\n      return this.iconInfoFromType(this._alertType).shape;\n    }\n    return this._alertIconShape;\n  }\n  set alertIconShape(val: string) {\n    if (!val) {\n      this._alertIconShape = '';\n    } else if (val !== this._alertIconShape) {\n      this._alertIconShape = val;\n    }\n  }\n\n  get alertIconTitle(): string {\n    return this.iconInfoFromType(this._alertType).title;\n  }\n\n  public iconInfoFromType(type: string): AlertInfoObject {\n    const returnObj = { shape: '', cssClass: '', title: '' };\n\n    switch (type) {\n      case 'warning':\n        returnObj.shape = 'exclamation-triangle';\n        returnObj.cssClass = 'alert-warning';\n        returnObj.title = this.commonStrings.keys.warning;\n        break;\n      case 'danger':\n        returnObj.shape = 'exclamation-circle';\n        returnObj.cssClass = 'alert-danger';\n        returnObj.title = this.commonStrings.keys.danger;\n        break;\n      case 'success':\n        returnObj.shape = 'check-circle';\n        returnObj.cssClass = 'alert-success';\n        returnObj.title = this.commonStrings.keys.success;\n        break;\n      default:\n        returnObj.shape = this.defaultIconShape;\n        returnObj.cssClass = 'alert-info';\n        returnObj.title = this.commonStrings.keys.info;\n        break;\n    }\n\n    return returnObj;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { ClrAlert } from '../alert';\n\n@Injectable()\nexport class MultiAlertService {\n  private subscription: Subscription;\n\n  private allAlerts: QueryList<ClrAlert>;\n\n  /**\n   * The Observable that lets other classes subscribe to changes\n   */\n  private _change = new Subject<number>();\n  public get changes(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _current: number;\n\n  get current() {\n    return this._current;\n  }\n  set current(index: number) {\n    if (index !== this._current) {\n      this._current = index;\n      this._change.next(index);\n    }\n  }\n\n  get activeAlerts() {\n    return this.allAlerts && this.allAlerts.filter(alert => !alert._closed);\n  }\n\n  get currentAlert() {\n    return this.activeAlerts && this.activeAlerts[this.current];\n  }\n\n  set currentAlert(alert: ClrAlert) {\n    this.current = this.activeAlerts.indexOf(alert);\n  }\n\n  get count() {\n    return (this.activeAlerts && this.activeAlerts.length) || 0;\n  }\n\n  manage(alerts: QueryList<ClrAlert>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.allAlerts = alerts;\n    // After receiving alerts' QueryList,\n    // we are picking index 0 as current by default if a user hasn't any index\n    this.current = typeof this._current === 'number' ? this._current : 0;\n    // we have to also broadcast that initial index\n    this._change.next(this.current);\n\n    this.subscription = this.allAlerts.changes.subscribe(() => {\n      if (this.current >= this.allAlerts.length) {\n        this.current = Math.max(0, this.allAlerts.length - 1);\n      }\n    });\n  }\n\n  next() {\n    this.current = this.current === this.activeAlerts.length - 1 ? 0 : this.current + 1;\n  }\n\n  previous() {\n    if (this.activeAlerts.length === 0) {\n      return;\n    }\n    this.current = this.current === 0 ? this.activeAlerts.length - 1 : this.current - 1;\n  }\n\n  close() {\n    this.previous();\n  }\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, EventEmitter, Input, Optional, Output, OnInit, OnDestroy } from '@angular/core';\n\n// providers\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alert',\n  providers: [AlertIconAndTypesService],\n  templateUrl: './alert.html',\n  styles: [':host { display: block; }'],\n})\nexport class ClrAlert implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private iconService: AlertIconAndTypesService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private multiAlertService: MultiAlertService,\n    private commonStrings: ClrCommonStringsService\n  ) {}\n\n  ngOnInit() {\n    if (this.multiAlertService) {\n      this.subscriptions.push(\n        this.multiAlertService.changes.subscribe(() => {\n          this.hidden = this.multiAlertService.currentAlert !== this;\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  @Input('clrAlertSizeSmall') isSmall = false;\n  @Input('clrAlertClosable') closable = true;\n  @Input('clrAlertAppLevel') isAppLevel = false;\n\n  // Aria\n  @Input() clrCloseButtonAriaLabel: string = this.commonStrings.keys.alertCloseButtonAriaLabel;\n\n  @Input('clrAlertClosed') _closed = false;\n  @Output('clrAlertClosedChange') _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrAlertType')\n  set alertType(val: string) {\n    this.iconService.alertType = val;\n  }\n\n  get alertType(): string {\n    return this.iconService.alertType;\n  }\n\n  @Input('clrAlertIcon')\n  set alertIconShape(value: string) {\n    this.iconService.alertIconShape = value;\n  }\n\n  get alertClass(): string {\n    return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n  }\n\n  private _hidden: boolean;\n\n  set hidden(value: boolean) {\n    if (value !== this._hidden) {\n      this._hidden = value;\n      this.cdr.detectChanges();\n    }\n  }\n\n  get hidden() {\n    return this._hidden;\n  }\n\n  close(): void {\n    if (!this.closable) {\n      return;\n    }\n    this._closed = true;\n    if (this.multiAlertService) {\n      this.multiAlertService.close();\n    }\n    this._closedChanged.emit(true);\n  }\n\n  open(): void {\n    this._closed = false;\n    this._closedChanged.emit(false);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\n\n@Component({\n  selector: 'clr-alert-item',\n  template: `\n    <div class=\"alert-icon-wrapper\">\n      <cds-icon\n        class=\"alert-icon\"\n        [attr.shape]=\"iconService.alertIconShape\"\n        [attr.title]=\"iconService.alertIconTitle\"\n      ></cds-icon>\n    </div>\n    <ng-content></ng-content>\n  `,\n  host: { class: 'alert-item' },\n})\nexport class ClrAlertItem {\n  constructor(public iconService: AlertIconAndTypesService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alerts',\n  templateUrl: './alerts.html',\n  providers: [MultiAlertService],\n  host: {\n    '[class.alerts]': 'true',\n    '[class.alert-danger]': \"this.currentAlertType == 'danger'\",\n    '[class.alert-info]': \"this.currentAlertType == 'info'\",\n    '[class.alert-success]': \"this.currentAlertType == 'success'\",\n    '[class.alert-warning]': \"this.currentAlertType == 'warning'\",\n  },\n  styles: [':host { display: block }'],\n})\nexport class ClrAlerts implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ClrAlert)\n  set allAlerts(value: QueryList<ClrAlert>) {\n    this.multiAlertService.manage(value); // provide alerts\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  public set _inputCurrentIndex(index: number) {\n    if (Number.isInteger(index) && index >= 0) {\n      this.multiAlertService.current = index;\n    }\n  }\n\n  @Output('clrCurrentAlertIndexChange') public currentAlertIndexChange = new EventEmitter<number>(false);\n\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n  @Output('clrCurrentAlertChange') public currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Ensure we are only dealing with alerts that have not been closed yet\n   */\n  get alerts() {\n    return this.allAlerts.filter(alert => {\n      return alert.hidden === false;\n    });\n  }\n\n  get currentAlertType(): string {\n    if (this.multiAlertService.currentAlert) {\n      return this.multiAlertService.currentAlert.alertType;\n    }\n    return '';\n  }\n\n  constructor(public multiAlertService: MultiAlertService) {}\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.multiAlertService.changes.subscribe(index => {\n        this.currentAlertIndexChange.next(index);\n        this.currentAlertChange.next(this.multiAlertService.currentAlert);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.multiAlertService.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-alerts-pager',\n  templateUrl: './alerts-pager.html',\n  host: { '[class.alerts-pager]': 'true' },\n})\nexport class ClrAlertsPager implements OnInit, OnDestroy {\n  private multiAlertServiceChanges: Subscription;\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n\n  @Output('clrCurrentAlertChange') currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  @Output('clrCurrentAlertIndexChange') currentAlertIndexChange = new EventEmitter<number>();\n\n  constructor(public multiAlertService: MultiAlertService, public commonStrings: ClrCommonStringsService) {}\n\n  ngOnInit() {\n    this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.emit(index);\n      this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n    });\n  }\n\n  pageUp() {\n    this.multiAlertService.next();\n  }\n\n  pageDown() {\n    this.multiAlertService.previous();\n  }\n\n  ngOnDestroy() {\n    this.multiAlertServiceChanges.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * @remark\n * This directive is used only of selectin alert text.\n */\n@Directive({\n  selector: '.alert-text',\n})\nexport class ClrAlertText {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { ClrAlert } from './alert';\nimport { ClrAlertItem } from './alert-item';\nimport { ClrAlerts } from './alerts';\nimport { ClrAlertsPager } from './alerts-pager';\nimport { ClrAlertText } from './alert-text';\nimport {\n  infoCircleIcon,\n  checkCircleIcon,\n  ClarityIcons,\n  exclamationCircleIcon,\n  exclamationTriangleIcon,\n  windowCloseIcon,\n} from '@cds/core/icon';\n\nexport const CLR_ALERT_DIRECTIVES: Type<any>[] = [ClrAlert, ClrAlertItem, ClrAlerts, ClrAlertsPager, ClrAlertText];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_ALERT_DIRECTIVES],\n  exports: [CLR_ALERT_DIRECTIVES],\n})\nexport class ClrAlertModule {\n  constructor() {\n    ClarityIcons.addIcons(\n      checkCircleIcon,\n      infoCircleIcon,\n      exclamationCircleIcon,\n      exclamationTriangleIcon,\n      windowCloseIcon\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { ClrAlertModule } from './alert/alert.module';\n\n@NgModule({ exports: [ClrAlertModule] })\nexport class ClrEmphasisModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavCodes {\n  public static NAV_LEVEL_1 = 1;\n  public static NAV_LEVEL_2 = 2;\n  public static NAV_CLOSE_ALL = 'NAV_CLOSE_ALL';\n  public static NAV_OPEN = 'NAV_OPEN';\n  public static NAV_CLOSE = 'NAV_CLOSE';\n  public static NAV_TOGGLE = 'NAV_TOGGLE';\n  public static NAV_CLASS_HAMBURGER_MENU = 'open-hamburger-menu';\n  public static NAV_CLASS_OVERFLOW_MENU = 'open-overflow-menu';\n  public static NAV_CLASS_TRIGGER_1 = 'header-hamburger-trigger';\n  public static NAV_CLASS_TRIGGER_2 = 'header-overflow-trigger';\n  public static NAV_CLASS_LEVEL_1 = 'clr-nav-level-1';\n  public static NAV_CLASS_LEVEL_2 = 'clr-nav-level-2';\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavControlMessage {\n  constructor(private _controlCode: string, private _navLevel: number) {}\n\n  get controlCode(): string {\n    return this._controlCode;\n  }\n\n  get navLevel(): number {\n    return this._navLevel;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { ResponsiveNavCodes } from '../responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../responsive-nav-control-message';\n\n@Injectable({ providedIn: 'root' })\nexport class ResponsiveNavigationService {\n  public responsiveNavList: number[] = [];\n  private registerNavSubject = new ReplaySubject<number[]>();\n  private controlNavSubject = new Subject<ResponsiveNavControlMessage>();\n\n  get registeredNavs(): Observable<number[]> {\n    return this.registerNavSubject.asObservable();\n  }\n\n  get navControl(): Observable<ResponsiveNavControlMessage> {\n    return this.controlNavSubject.asObservable();\n  }\n\n  constructor() {\n    this.closeAllNavs(); // We start with all navs closed\n  }\n\n  registerNav(navLevel: number): void {\n    if (!navLevel || this.isNavRegistered(navLevel)) {\n      return;\n    }\n    this.responsiveNavList.push(navLevel);\n    this.registerNavSubject.next(this.responsiveNavList);\n  }\n\n  isNavRegistered(navLevel: number): boolean {\n    if (this.responsiveNavList.indexOf(navLevel) > -1) {\n      console.error('Multiple clr-nav-level ' + navLevel + ' attributes found. Please make sure that only one exists');\n      return true;\n    }\n    return false;\n  }\n\n  unregisterNav(navLevel: number) {\n    const index = this.responsiveNavList.indexOf(navLevel);\n    if (index > -1) {\n      this.responsiveNavList.splice(index, 1);\n      this.registerNavSubject.next(this.responsiveNavList);\n    }\n  }\n\n  sendControlMessage(controlCode: string, navLevel: number) {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(controlCode, navLevel);\n    this.controlNavSubject.next(message);\n  }\n\n  closeAllNavs() {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(\n      ResponsiveNavCodes.NAV_CLOSE_ALL,\n      -999\n    );\n    this.controlNavSubject.next(message);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from '../nav/providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from '../nav/responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../nav/responsive-nav-control-message';\n\n@Directive({ selector: 'clr-main-container', host: { '[class.main-container]': 'true' } })\nexport class ClrMainContainer implements OnDestroy, OnInit {\n  private _subscription: Subscription;\n  private _classList: DOMTokenList;\n\n  constructor(private elRef: ElementRef, private responsiveNavService: ResponsiveNavigationService) {}\n\n  ngOnInit() {\n    this._classList = this.elRef.nativeElement.classList;\n    this._subscription = this.responsiveNavService.navControl.subscribe({\n      next: (message: ResponsiveNavControlMessage) => {\n        this.processMessage(message);\n      },\n    });\n  }\n\n  processMessage(message: ResponsiveNavControlMessage): void {\n    let navClass: string = ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n    if (message.controlCode === ResponsiveNavCodes.NAV_CLOSE_ALL) {\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n      this.controlNav(message.controlCode, navClass);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navClass = ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n      this.controlNav(message.controlCode, navClass);\n    }\n  }\n\n  controlNav(controlCode: string, navClass: string): void {\n    if (controlCode === ResponsiveNavCodes.NAV_OPEN) {\n      this._classList.add(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_CLOSE) {\n      this._classList.remove(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_TOGGLE) {\n      this._classList.toggle(navClass);\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrMainContainer } from './main-container';\n\nexport const CLR_LAYOUT_DIRECTIVES: Type<any>[] = [ClrMainContainer];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [CLR_LAYOUT_DIRECTIVES],\n  exports: [CLR_LAYOUT_DIRECTIVES],\n})\nexport class ClrMainContainerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-main-container' })\nexport class MainContainerWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ResponsiveNavigationService } from '../providers/responsive-navigation.service';\nimport { MainContainerWillyWonka } from './main-container-willy-wonka';\n\n@Directive({ selector: 'clr-header' })\nexport class NavDetectionOompaLoompa extends OompaLoompa {\n  private responsiveNavService: ResponsiveNavigationService;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: MainContainerWillyWonka,\n    responsiveNavService: ResponsiveNavigationService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-header should only be used inside of a clr-main-container');\n    }\n    super(cdr, willyWonka);\n    this.responsiveNavService = responsiveNavService;\n  }\n\n  // NavDetectionOompaLoompa is the addition of the nav levels\n  // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)\n  get flavor() {\n    return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-header',\n  template: `\n    <button\n      type=\"button\"\n      *ngIf=\"isNavLevel1OnPage\"\n      class=\"header-hamburger-trigger\"\n      [attr.aria-label]=\"\n        openNavLevel !== responsiveNavCodes.NAV_LEVEL_1 ? commonStrings.keys.open : commonStrings.keys.close\n      \"\n      (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\"\n    >\n      <span></span>\n    </button>\n    <ng-content></ng-content>\n    <button\n      type=\"button\"\n      *ngIf=\"isNavLevel2OnPage\"\n      class=\"header-overflow-trigger\"\n      [attr.aria-label]=\"\n        openNavLevel !== responsiveNavCodes.NAV_LEVEL_2 ? commonStrings.keys.open : commonStrings.keys.close\n      \"\n      (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\"\n    >\n      <span></span>\n    </button>\n    <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n  `,\n  host: { '[class.header]': 'true' },\n})\nexport class ClrHeader implements OnDestroy {\n  isNavLevel1OnPage = false;\n  isNavLevel2OnPage = false;\n  openNavLevel: number = null;\n  responsiveNavCodes = ResponsiveNavCodes;\n  private _subscription: Subscription;\n\n  constructor(\n    private responsiveNavService: ResponsiveNavigationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n      next: (navLevelList: number[]) => {\n        this.initializeNavTriggers(navLevelList);\n      },\n    });\n  }\n\n  // reset triggers. handles cases when an application has different nav levels on different pages.\n  resetNavTriggers() {\n    this.isNavLevel1OnPage = false;\n    this.isNavLevel2OnPage = false;\n  }\n\n  // decides which triggers to show on the header\n  initializeNavTriggers(navList: number[]): void {\n    this.resetNavTriggers();\n    if (navList.length > 2) {\n      console.error('More than 2 Nav Levels detected.');\n      return;\n    }\n    navList.forEach(navLevel => {\n      if (navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n        this.isNavLevel1OnPage = true;\n      } else if (navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n        this.isNavLevel2OnPage = true;\n      }\n    });\n  }\n\n  // closes the nav that is open\n  closeOpenNav() {\n    this.responsiveNavService.closeAllNavs();\n  }\n\n  // toggles the nav that is open\n  toggleNav(navLevel: number) {\n    this.openNavLevel = this.openNavLevel === navLevel ? null : navLevel;\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_TOGGLE, navLevel);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\n\n@Directive({ selector: '[clr-nav-level]' })\nexport class ClrNavLevel implements OnInit {\n  @Input('clr-nav-level') _level: number;\n\n  constructor(private responsiveNavService: ResponsiveNavigationService, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.level !== ResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ResponsiveNavCodes.NAV_LEVEL_2) {\n      console.error('Nav Level can only be 1 or 2');\n      return;\n    }\n    this.responsiveNavService.registerNav(this.level);\n    this.addNavClass(this.level);\n  }\n\n  addNavClass(level: number) {\n    const navHostClassList = this.elementRef.nativeElement.classList;\n    if (level === ResponsiveNavCodes.NAV_LEVEL_1) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n    } else if (level === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n    }\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  // getter to access the responsive navigation codes from the template\n  get responsiveNavCodes(): ResponsiveNavCodes {\n    return ResponsiveNavCodes;\n  }\n\n  open(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_OPEN, this.level);\n  }\n\n  close(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_CLOSE, this.level);\n  }\n\n  // TODO: Figure out whats the best way to do this. Possible methods\n  // 1. HostListener (current solution)\n  // 2. Directives on the .nav-link class. We discussed on moving away from class selectors but I forget the reason\n  // why\n  @HostListener('click', ['$event.target'])\n  onMouseClick(target: any) {\n    let current: any = target; // Get the element in the DOM on which the mouse was clicked\n    const navHost: any = this.elementRef.nativeElement; // Get the current nav native HTML element\n\n    // Start checking if current and navHost are equal.\n    // If not traverse to the parentNode and check again.\n    while (current) {\n      if (current === navHost) {\n        return;\n      } else if (current.classList.contains('nav-link')) {\n        this.close();\n        return;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  ngOnDestroy() {\n    this.responsiveNavService.unregisterNav(this.level);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { MainContainerWillyWonka } from './chocolate/main-container-willy-wonka';\nimport { NavDetectionOompaLoompa } from './chocolate/nav-detection-oompa-loompa';\nimport { ClrHeader } from './header';\nimport { ClrNavLevel } from './nav-level';\n\nexport const CLR_NAVIGATION_DIRECTIVES: Type<any>[] = [\n  ClrHeader,\n  ClrNavLevel,\n  NavDetectionOompaLoompa,\n  MainContainerWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_NAVIGATION_DIRECTIVES],\n  exports: [CLR_NAVIGATION_DIRECTIVES],\n})\nexport class ClrNavigationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  template: `\n    <ng-template>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class TemplateRefContainer {\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { TemplateRefContainer } from './template-ref-container';\n\nexport * from './template-ref-container';\n\nexport const TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TEMPLATE_REF_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TEMPLATE_REF_DIRECTIVES],\n  entryComponents: [TEMPLATE_REF_DIRECTIVES],\n  exports: [TEMPLATE_REF_DIRECTIVES],\n})\nexport class ClrTemplateRefModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-tabs' })\nexport class TabsWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum TabsLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';\n\nimport { TabsWillyWonka } from './tabs-willy-wonka';\n\n@Directive({ selector: '[clrTabLink], clr-tab-content' })\nexport class ActiveOompaLoompa extends OompaLoompa {\n  private ifActive: IfActiveService;\n  private id: number;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: TabsWillyWonka,\n    @Inject(IF_ACTIVE_ID) id: number,\n    ifActive: IfActiveService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');\n    }\n    super(cdr, willyWonka);\n    this.ifActive = ifActive;\n    this.id = id;\n  }\n\n  get flavor() {\n    return this.ifActive.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, ViewContainerRef } from '@angular/core';\nimport { ClrTab } from '../tab';\nimport { TabsLayout } from '../enums/tabs-layout.enum';\n\n@Injectable()\nexport class TabsService {\n  private _children: ClrTab[] = [];\n\n  layout: TabsLayout = TabsLayout.HORIZONTAL;\n\n  register(tab: ClrTab) {\n    this._children.push(tab);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get activeTab() {\n    return this.children.find((tab: ClrTab) => {\n      return tab.active;\n    });\n  }\n\n  get overflowTabs() {\n    if (this.layout === TabsLayout.VERTICAL) {\n      return [];\n    } else {\n      return this.children.filter((tab: ClrTab) => tab.tabLink.inOverflow === true);\n    }\n  }\n\n  unregister(tab: ClrTab) {\n    const index = this.children.indexOf(tab);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  tabContentViewContainer: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EmbeddedViewRef, Inject, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { AriaService } from '../../utils/aria/aria.service';\nimport { TabsService } from './providers/tabs.service';\n\nlet nbTabContentComponents = 0;\n\n@Component({\n  selector: 'clr-tab-content',\n  template: `\n    <ng-template #tabContentProjectedRef>\n      <section\n        [id]=\"tabContentId\"\n        role=\"tabpanel\"\n        class=\"tab-content\"\n        [class.active]=\"active\"\n        [hidden]=\"!active\"\n        [attr.aria-labelledby]=\"ariaLabelledBy\"\n        [attr.aria-expanded]=\"active\"\n        [attr.aria-hidden]=\"!active\"\n      >\n        <ng-content></ng-content>\n      </section>\n    </ng-template>\n  `,\n})\nexport class ClrTabContent implements OnDestroy {\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private tabsService: TabsService\n  ) {\n    if (!this.tabContentId) {\n      this.tabContentId = 'clr-tab-content-' + nbTabContentComponents++;\n    }\n  }\n\n  private viewRef: EmbeddedViewRef<ClrTabContent>;\n\n  // The template must be applied on the top-down phase of view-child initialization to prevent\n  // components in the content from initializing before a content container exists.\n  // Some child components need their container for sizing calculations.\n  @ViewChild('tabContentProjectedRef', { static: true })\n  // @ts-ignore\n  private set templateRef(value: TemplateRef<ClrTabContent>) {\n    this.viewRef = this.tabsService.tabContentViewContainer.createEmbeddedView(value);\n  }\n\n  get ariaLabelledBy(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  get tabContentId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  @Input('id')\n  set tabContentId(id: string) {\n    this.ariaService.ariaControls = id;\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  ngOnDestroy(): void {\n    const index = this.tabsService.tabContentViewContainer.indexOf(this.viewRef);\n    if (index > -1) {\n      this.tabsService.tabContentViewContainer.remove(index);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\n\nlet nbTabsComponent = 0;\n\nexport const TABS_ID = new InjectionToken<number>('TABS_ID');\n\nexport function tokenFactory() {\n  return 'clr-tabs-' + nbTabsComponent++;\n}\n\nexport const TABS_ID_PROVIDER = {\n  provide: TABS_ID,\n  useFactory: tokenFactory,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';\nimport { TabsService } from './providers/tabs.service';\n\nimport { AriaService } from '../../utils/aria/aria.service';\nimport { TABS_ID } from './tabs-id.provider';\nimport { TabsLayout } from './enums/tabs-layout.enum';\n\nlet nbTabLinkComponents = 0;\n\n@Directive({\n  selector: '[clrTabLink]',\n  host: {\n    '[attr.aria-hidden]': 'false',\n    '[class.btn]': 'true',\n    role: 'tab',\n    type: 'button',\n  },\n})\nexport class ClrTabLink {\n  private _inOverflow: boolean;\n\n  @Input('clrTabLinkInOverflow')\n  set inOverflow(inOverflow) {\n    this._inOverflow = inOverflow;\n  }\n\n  get inOverflow(): boolean {\n    return this._inOverflow && this.tabsService.layout !== TabsLayout.VERTICAL;\n  }\n\n  @HostBinding('class.btn-link')\n  @HostBinding('class.nav-link')\n  get addLinkClasses() {\n    return !this.inOverflow;\n  }\n\n  templateRefContainer: TemplateRefContainer;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private ariaService: AriaService,\n    public el: ElementRef,\n    private cfr: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number\n  ) {\n    if (!this.tabLinkId) {\n      this.tabLinkId = 'clr-tab-link-' + nbTabLinkComponents++;\n    }\n\n    // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n    // Here, we create a container so that its template can be used to create embeddedView on the fly.\n    // See TabsService's renderView() method and how it's used in Tabs class for an example.\n    const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n    this.templateRefContainer = this.viewContainerRef.createComponent(factory, undefined, undefined, [\n      [this.el.nativeElement],\n    ]).instance;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get tabLinkId(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  @HostBinding('id')\n  @Input('id')\n  set tabLinkId(id: string) {\n    this.ariaService.ariaLabelledBy = id;\n  }\n\n  @HostListener('click')\n  activate() {\n    this.ifActiveService.current = this.id;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-selected')\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  @HostBinding('attr.tabindex')\n  get tabindex() {\n    return this.active ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, Inject } from '@angular/core';\n\nimport { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';\n\nimport { AriaService } from '../../utils/aria/aria.service';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\n\n@Component({\n  selector: 'clr-tab',\n  template: ` <ng-content></ng-content> `,\n  providers: [IF_ACTIVE_ID_PROVIDER, AriaService],\n})\nexport class ClrTab {\n  @ContentChild(ClrTabLink, { static: true })\n  tabLink: ClrTabLink;\n  @ContentChild(ClrTabContent, { static: true })\n  tabContent: ClrTabContent;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private tabsService: TabsService\n  ) {\n    tabsService.register(this);\n  }\n\n  ngOnDestroy() {\n    this.tabsService.unregister(this);\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tab-overflow-content',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n  },\n})\nexport class ClrTabOverflowContent {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChild,\n  ViewContainerRef,\n  HostBinding,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { IfActiveService } from '../../utils/conditional/if-active.service';\nimport { ClrKeyFocus } from '../../utils/focus/key-focus/key-focus';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TabsLayout } from './enums/tabs-layout.enum';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTab } from './tab';\nimport { ClrTabLink } from './tab-link.directive';\nimport { TABS_ID, TABS_ID_PROVIDER } from './tabs-id.provider';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\n\n@Component({\n  selector: 'clr-tabs',\n  template: `\n    <ul\n      class=\"nav\"\n      role=\"tablist\"\n      [attr.aria-owns]=\"tabIds\"\n      [clrKeyFocus]=\"tabLinkElements\"\n      clrDirection=\"both\"\n      (clrFocusChange)=\"toggleOverflowOnPosition($event)\"\n      (focusout)=\"resetKeyFocusCurrentToActive($event)\"\n    >\n      <!--tab links-->\n      <ng-container *ngFor=\"let link of tabLinkDirectives\">\n        <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\">\n          <li role=\"presentation\" class=\"nav-item\">\n            <ng-container [ngTemplateOutlet]=\"link.templateRefContainer.template\"></ng-container>\n          </li>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n        <div class=\"tabs-overflow bottom-right\" role=\"presentation\" [class.open]=\"toggleService.open\">\n          <li role=\"application\" class=\"nav-item\">\n            <button\n              #tabOverflowTrigger\n              class=\"btn btn-link nav-link dropdown-toggle\"\n              type=\"button\"\n              aria-hidden=\"true\"\n              [attr.tabindex]=\"activeTabInOverflow && !toggleService.open ? 0 : -1\"\n              [class.active]=\"activeTabInOverflow\"\n              [class.open]=\"toggleService.open\"\n              (mousedown)=\"_mousedown = true\"\n              (focus)=\"openOverflowOnFocus()\"\n              (click)=\"toggleOverflowOnClick()\"\n              [attr.title]=\"commonStrings.keys.more\"\n            >\n              <cds-icon\n                shape=\"ellipsis-horizontal\"\n                status=\"toggleService.open ? 'info' : null\"\n                [attr.title]=\"commonStrings.keys.more\"\n              ></cds-icon>\n            </button>\n          </li>\n          <!--tab links in overflow menu-->\n          <clr-tab-overflow-content\n            *ngIf=\"toggleService.open\"\n            (document:keydown.esc)=\"closeOnEscapeKey()\"\n            (document:click)=\"closeOnOutsideClick($event, tabOverflowTrigger)\"\n            (focusout)=\"closeOnFocusOut($event)\"\n          >\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n              <ng-container\n                *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                [ngTemplateOutlet]=\"link.templateRefContainer.template\"\n              >\n              </ng-container>\n            </ng-container>\n          </clr-tab-overflow-content>\n        </div>\n      </ng-container>\n    </ul>\n    <ng-container #tabContentViewContainer></ng-container>\n  `,\n  providers: [IfActiveService, ClrPopoverToggleService, TabsService, TABS_ID_PROVIDER],\n})\nexport class ClrTabs implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  private get overflowPosition() {\n    return this._tabLinkDirectives.filter(link => !link.inOverflow).length;\n  }\n\n  @ViewChild('tabContentViewContainer', { static: true, read: ViewContainerRef })\n  // @ts-ignore\n  private set tabContentViewContainer(value: ViewContainerRef) {\n    this.tabsService.tabContentViewContainer = value;\n  }\n\n  @Input('clrLayout')\n  set layout(layout: TabsLayout) {\n    if (\n      Object.keys(TabsLayout)\n        .map(key => {\n          return (TabsLayout as Record<string, any>)[key];\n        })\n        .indexOf(layout) >= 0\n    ) {\n      this.tabsService.layout = layout;\n    }\n  }\n  get layout(): TabsLayout {\n    return this.tabsService.layout;\n  }\n\n  @ContentChildren(ClrTab) private tabs: QueryList<ClrTab>;\n\n  private _tabLinkDirectives: ClrTabLink[] = [];\n  get tabLinkDirectives(): ClrTabLink[] {\n    return this._tabLinkDirectives;\n  }\n\n  tabLinkElements: HTMLElement[] = [];\n\n  @ViewChild(ClrKeyFocus, { static: true })\n  keyFocus: ClrKeyFocus;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    public toggleService: ClrPopoverToggleService,\n    public tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  get activeTabInOverflow() {\n    return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n  }\n\n  get activeTabPosition() {\n    return this._tabLinkDirectives.findIndex(link => link.active);\n  }\n\n  get tabIds() {\n    return this.tabsService.children.map(tab => tab.tabLink.tabLinkId).join(' ');\n  }\n\n  get isCurrentInOverflow() {\n    return this.keyFocus.current >= this.overflowPosition;\n  }\n\n  @HostBinding('class.tabs-vertical')\n  get isVertical() {\n    return this.layout === TabsLayout.VERTICAL;\n  }\n\n  toggleOverflowOnPosition(position: number) {\n    // we need to check current position to determine\n    // whether we need to open the tab overflow or not\n    this.toggleService.open = position >= this.overflowPosition;\n  }\n\n  private _tabOverflowEl: HTMLElement;\n\n  @ViewChild(ClrTabOverflowContent, { read: ElementRef })\n  set tabOverflowEl(value: ElementRef) {\n    this._tabOverflowEl = value && value.nativeElement;\n    if (this.toggleService.open && value) {\n      // only when tab overflow view element is registered,\n      // we need to move the focus to the first item\n      this.keyFocus.focusCurrent();\n    }\n  }\n\n  resetKeyFocusCurrentToActive(event: FocusEvent) {\n    const keyFocusContainsFocus = this.keyFocus.nativeElement.contains(event.relatedTarget as HTMLElement);\n    if (!keyFocusContainsFocus && this.keyFocus.current !== this.activeTabPosition) {\n      this.keyFocus.current = this.activeTabPosition;\n    }\n  }\n\n  toggleOverflowOnClick() {\n    if (this.isCurrentInOverflow && this.toggleService.open) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    } else {\n      this.keyFocus.moveTo(this.overflowPosition);\n    }\n\n    // once click handler completes running,\n    // reset the _mousedown flag\n    this._mousedown = false;\n  }\n\n  // in order to check focus is triggered by click\n  // we are using this _mousedown flag\n  _mousedown = false;\n\n  openOverflowOnFocus() {\n    // This method should be called only on keyboard generated focus\n    // when the active tab is in the overflow\n    if (!this._mousedown && !this.toggleService.open) {\n      this.keyFocus.moveTo(this.activeTabPosition);\n    }\n  }\n\n  closeOnFocusOut(event: FocusEvent) {\n    if (\n      !this._tabOverflowEl.contains(event.relatedTarget as HTMLElement) &&\n      this.toggleService.open &&\n      !this._mousedown\n    ) {\n      this.toggleService.open = false;\n\n      // if the focus is out of overflow and lands on the active tab link\n      // which is currently visible, set the key focus current to activeTabPosition\n      if (this.tabLinkElements[this.activeTabPosition] === event.relatedTarget) {\n        this.keyFocus.current = this.activeTabPosition;\n      }\n    }\n  }\n\n  closeOnEscapeKey() {\n    // Move current to the last visible focusable item\n    this.keyFocus.moveTo(this.overflowPosition - 1);\n  }\n\n  closeOnOutsideClick(event: Event, tabOverflowTrigger: HTMLElement) {\n    // Exit early if the event target is the trigger element itself or element that's inside the trigger element.\n    // This is because we have another handler on the tabOverflowTrigger element itself.\n    // As this handler method is on the document level so the event bubbles up to it and conflicts\n    // with the tabOverflowTrigger handler resulting in opening the tab overflow and closing it right away consecutively.\n    if (event.target === tabOverflowTrigger || tabOverflowTrigger.contains(event.target as HTMLElement)) {\n      return;\n    }\n\n    // Move current to the last visible focusable item\n    if (!this._tabOverflowEl.contains(event.target as HTMLElement) && this.isCurrentInOverflow) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    }\n  }\n\n  private listenForTabLinkChanges() {\n    return this.tabs.changes.pipe(startWith(this.tabs.map(tab => tab.tabLink))).subscribe(() => {\n      this._tabLinkDirectives = this.tabs.map(tab => tab.tabLink);\n      this.tabLinkElements = this._tabLinkDirectives.map(tab => tab.el.nativeElement);\n    });\n  }\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForTabLinkChanges());\n\n    if (typeof this.ifActiveService.current === 'undefined' && this.tabLinkDirectives[0]) {\n      this.tabLinkDirectives[0].activate();\n    }\n\n    // set initial current position\n    this.keyFocus.current = this.activeTabPosition;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrTemplateRefModule } from '../../utils/template-ref/template-ref.module';\n\nimport { ActiveOompaLoompa } from './chocolate/active-oompa-loompa';\nimport { TabsWillyWonka } from './chocolate/tabs-willy-wonka';\nimport { ClrTab } from './tab';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\nimport { ClrTabs } from './tabs';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\nimport { ClarityIcons, ellipsisHorizontalIcon } from '@cds/core/icon';\n\nexport const CLR_TABS_DIRECTIVES: Type<any>[] = [\n  ClrTabContent,\n  ClrTab,\n  ClrTabs,\n  ClrTabOverflowContent,\n  ClrTabLink,\n  TabsWillyWonka,\n  ActiveOompaLoompa,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrConditionalModule, ClrIconModule, ClrTemplateRefModule, ClrKeyFocusModule],\n  declarations: [CLR_TABS_DIRECTIVES],\n  exports: [CLR_TABS_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrTabsModule {\n  constructor() {\n    ClarityIcons.addIcons(ellipsisHorizontalIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavGroupRegistrationService {\n  public navGroupCount = 0;\n\n  registerNavGroup() {\n    this.navGroupCount++;\n  }\n\n  unregisterNavGroup(): void {\n    this.navGroupCount--;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavIconService {\n  private _icons = 0;\n\n  get hasIcons(): boolean {\n    return this._icons > 0;\n  }\n\n  registerIcon(): void {\n    this._icons++;\n  }\n\n  unregisterIcon(): void {\n    this._icons--;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavService {\n  private _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n\n  get animateOnCollapsed(): Observable<boolean> {\n    return this._animateOnCollapsed.asObservable();\n  }\n\n  private _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n\n  get collapsedChanged(): Observable<boolean> {\n    return this._collapsedChanged.asObservable();\n  }\n\n  private _collapsed = false;\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    value = !!value;\n    if (this.collapsible && this._collapsed !== value) {\n      this.updateCollapseBehavior(value);\n    }\n  }\n\n  private _collapsible = false;\n\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n\n  set collapsible(value: boolean) {\n    value = !!value;\n    if (this._collapsible !== value) {\n      if (!value && this.collapsed) {\n        this.updateCollapseBehavior(false);\n      }\n      this._collapsible = value;\n    }\n  }\n\n  private updateCollapseBehavior(value: boolean): void {\n    this._animateOnCollapsed.next(value);\n    this._collapsed = value;\n    this._collapsedChanged.next(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-vertical-nav',\n  templateUrl: './vertical-nav.html',\n  providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n  host: {\n    class: 'clr-vertical-nav',\n    '[class.is-collapsed]': 'collapsed',\n    '[class.has-nav-groups]': 'hasNavGroups',\n    '[class.has-icons]': 'hasIcons',\n  },\n})\nexport class ClrVerticalNav implements OnDestroy {\n  get collapsible(): boolean {\n    return this._navService.collapsible;\n  }\n\n  @Input('clrVerticalNavCollapsible')\n  set collapsible(value: boolean) {\n    this._navService.collapsible = value;\n  }\n\n  get collapsed(): boolean {\n    return this._navService.collapsed;\n  }\n\n  @Input('clrVerticalNavCollapsed')\n  set collapsed(value: boolean) {\n    this._navService.collapsed = value;\n  }\n\n  @Output('clrVerticalNavCollapsedChange')\n  private _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  get hasNavGroups(): boolean {\n    return this._navGroupRegistrationService.navGroupCount > 0;\n  }\n\n  get hasIcons(): boolean {\n    return this._navIconService.hasIcons;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.collapsible) {\n      return null;\n    }\n    return !this.collapsed ? 'true' : 'false';\n  }\n\n  private _sub: Subscription;\n\n  constructor(\n    private _navService: VerticalNavService,\n    private _navIconService: VerticalNavIconService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._sub = this._navService.collapsedChanged.subscribe(value => {\n      this._collapsedChanged.emit(value);\n    });\n  }\n\n  toggleByButton() {\n    this.collapsed = !this.collapsed;\n  }\n\n  ngOnDestroy() {\n    this._sub.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavGroupService {\n  private _expandChange: Subject<boolean> = new Subject<boolean>();\n\n  get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  expand(): void {\n    this._expandChange.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nconst EXPANDED_STATE = 'expanded';\nconst COLLAPSED_STATE = 'collapsed';\n\n@Component({\n  selector: 'clr-vertical-nav-group',\n  templateUrl: './vertical-nav-group.html',\n  providers: [IfExpandService, VerticalNavGroupService],\n  animations: [\n    trigger('clrExpand', [\n      state(EXPANDED_STATE, style({ height: '*' })),\n      state(COLLAPSED_STATE, style({ height: 0, 'overflow-y': 'hidden', visibility: 'hidden' })),\n      transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { class: 'nav-group' },\n})\nexport class ClrVerticalNavGroup implements AfterContentInit, OnDestroy {\n  constructor(\n    private _itemExpand: IfExpandService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    private _navGroupService: VerticalNavGroupService,\n    private _navService: VerticalNavService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._navGroupRegistrationService.registerNavGroup();\n\n    // FIXME: This subscription handles a corner case\n    // Vertical Nav collapse requires the animation to run first and then\n    // remove the nodes from the DOM. If the user directly sets the input\n    // on the clrIfExpanded directive, we have no chance to run the animation\n    // and wait for it to complete. This subscription makes sure that the\n    // animation states are correct for that edge case.\n    this._subscriptions.push(\n      this._itemExpand.expandChange.subscribe(value => {\n        if (value && this.expandAnimationState === COLLAPSED_STATE) {\n          if (this._navService.collapsed) {\n            this._navService.collapsed = false;\n          }\n          this.expandAnimationState = EXPANDED_STATE;\n        } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n          this.expandAnimationState = COLLAPSED_STATE;\n        }\n      })\n    );\n\n    // 1. If the nav is collapsing, close the open nav group + save its state\n    // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n    this._subscriptions.push(\n      this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n        if (goingToCollapse && this.expanded) {\n          this.wasExpanded = true;\n          this.expandAnimationState = COLLAPSED_STATE;\n        } else if (!goingToCollapse && this.wasExpanded) {\n          this.expandGroup();\n          this.wasExpanded = false;\n        }\n      })\n    );\n\n    // If a link is clicked, expand the nav group\n    this._subscriptions.push(\n      this._navGroupService.expandChange.subscribe((expand: boolean) => {\n        if (expand && !this.expanded) {\n          this.expandGroup();\n        }\n      })\n    );\n  }\n\n  private wasExpanded = false;\n\n  @HostBinding('class.is-expanded')\n  get expanded(): boolean {\n    return this._itemExpand.expanded;\n  }\n\n  set expanded(value: boolean) {\n    if (this._itemExpand.expanded !== value) {\n      this._itemExpand.expanded = value;\n      this.expandedChange.emit(value);\n    }\n  }\n\n  @Input('clrVerticalNavGroupExpanded')\n  set userExpandedInput(value: boolean) {\n    value = !!value;\n    if (this.expanded !== value) {\n      // We have to call toggleExpand because some cases require animations to occur first\n      // Directly setting the Expand service value skips the animation and can result in\n      // nodes in the DOM but the nav group still being collapsed\n      this.toggleExpand();\n    }\n  }\n\n  @Output('clrVerticalNavGroupExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  private _subscriptions: Subscription[] = [];\n\n  private _expandAnimationState: string = COLLAPSED_STATE;\n\n  expandGroup(): void {\n    this.expanded = true;\n    // Expanded animation occurs after Expand.expand is set to true\n    this.expandAnimationState = EXPANDED_STATE;\n  }\n\n  collapseGroup(): void {\n    // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n    // the Vertical Nav should be expanded first.\n    this.expandAnimationState = COLLAPSED_STATE;\n  }\n\n  // closes a group after the collapse animation\n  expandAnimationDone($event: AnimationEvent) {\n    if ($event.toState === COLLAPSED_STATE) {\n      this.expanded = false;\n    }\n  }\n\n  get expandAnimationState(): string {\n    return this._expandAnimationState;\n  }\n\n  set expandAnimationState(value: string) {\n    if (value !== this._expandAnimationState) {\n      this._expandAnimationState = value;\n    }\n  }\n\n  toggleExpand(): void {\n    if (this.expanded) {\n      this.collapseGroup();\n    } else {\n      // If nav is collasped, first open the nav\n      if (this._navService.collapsed) {\n        this._navService.collapsed = false;\n      }\n      // then expand the nav group\n      this.expandGroup();\n    }\n  }\n\n  ngAfterContentInit() {\n    // This makes sure that if someone marks a nav group expanded in a collapsed nav\n    // the expanded property is switched back to collapsed state.\n    if (this._navService.collapsed && this.expanded) {\n      this.wasExpanded = true;\n      this.expandAnimationState = COLLAPSED_STATE;\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this._navGroupRegistrationService.unregisterNavGroup();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-group-children',\n  template: ` <ng-content></ng-content> `,\n})\nexport class ClrVerticalNavGroupChildren {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\n\n@Directive({ selector: '[clrVerticalNavIcon]', host: { class: 'nav-icon' } })\nexport class ClrVerticalNavIcon implements OnDestroy {\n  constructor(private _verticalNavIconService: VerticalNavIconService) {\n    this._verticalNavIconService.registerIcon();\n  }\n\n  ngOnDestroy() {\n    this._verticalNavIconService.unregisterIcon();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, HostListener, Optional } from '@angular/core';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\n\n@Component({\n  selector: '[clrVerticalNavLink]',\n  template: `\n    <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n    <span class=\"nav-text\">\n      <ng-content></ng-content>\n    </span>\n  `,\n  host: { class: 'nav-link' },\n})\nexport class ClrVerticalNavLink {\n  constructor(@Optional() private _navGroupService: VerticalNavGroupService) {}\n\n  @HostListener('click')\n  public expandParentNavGroup(): void {\n    if (this._navGroupService) {\n      this._navGroupService.expand();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { angleDoubleIcon, angleIcon, ClarityIcons } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrVerticalNav } from './vertical-nav';\nimport { ClrVerticalNavGroup } from './vertical-nav-group';\nimport { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';\nimport { ClrVerticalNavIcon } from './vertical-nav-icon';\nimport { ClrVerticalNavLink } from './vertical-nav-link';\n\nexport const CLR_VERTICAL_NAV_DIRECTIVES: Type<any>[] = [\n  ClrVerticalNav,\n  ClrVerticalNavLink,\n  ClrVerticalNavGroup,\n  ClrVerticalNavGroupChildren,\n  ClrVerticalNavIcon,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_VERTICAL_NAV_DIRECTIVES],\n  exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrVerticalNavModule {\n  constructor() {\n    ClarityIcons.addIcons(angleIcon, angleDoubleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrMainContainerModule } from './main-container/main-container.module';\nimport { ClrNavigationModule } from './nav/navigation.module';\nimport { ClrTabsModule } from './tabs/tabs.module';\nimport { ClrVerticalNavModule } from './vertical-nav/vertical-nav.module';\n\n@NgModule({ exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule] })\nexport class ClrLayoutModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScrollingService {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  stopScrolling(): void {\n    this._document.body.classList.add('no-scrolling');\n  }\n\n  resumeScrolling(): void {\n    if (this._document.body.classList.contains('no-scrolling')) {\n      this._document.body.classList.remove('no-scrolling');\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n} from '@angular/core';\nimport { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../utils/id-generator/id-generator.service';\nimport { ScrollingService } from '../utils/scrolling/scrolling-service';\n\n@Component({\n  selector: 'clr-modal',\n  viewProviders: [ScrollingService],\n  templateUrl: './modal.html',\n  styles: [\n    `\n      :host {\n        display: none;\n      }\n      :host.open {\n        display: inline;\n      }\n    `,\n  ],\n  animations: [\n    trigger('fadeDown', [\n      transition('* => false', [style({ opacity: 0, transform: 'translate(0, -25%)' }), animate('0.2s ease-in-out')]),\n      transition('false => *', [animate('0.2s ease-in-out', style({ opacity: 0, transform: 'translate(0, -25%)' }))]),\n    ]),\n    trigger('fade', [\n      transition('void => *', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 0.85 }))]),\n      transition('* => void', [animate('0.2s ease-in-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrModal implements OnChanges, OnDestroy {\n  @ViewChild(FocusTrapDirective) focusTrap: FocusTrapDirective;\n\n  @HostBinding('class.open')\n  @Input('clrModalOpen')\n  _open = false;\n  @Output('clrModalOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrModalClosable') closable = true;\n  @Input('clrModalSize') size: string;\n  @Input('clrModalStaticBackdrop') staticBackdrop = true;\n  @Input('clrModalSkipAnimation') skipAnimation = 'false';\n\n  // presently this is only used by wizards\n  @Input('clrModalOverrideScrollService') bypassScrollService = false;\n  @Input('clrModalPreventClose') stopClose = false;\n  @Output('clrModalAlternateClose') altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private _scrollingService: ScrollingService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public modalId: string\n  ) {}\n\n  // Detect when _open is set to true and set no-scrolling to true\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!this.bypassScrollService && changes && changes.hasOwnProperty('_open')) {\n      if (changes._open.currentValue) {\n        this._scrollingService.stopScrolling();\n      } else {\n        this._scrollingService.resumeScrolling();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._scrollingService.resumeScrolling();\n  }\n\n  open(): void {\n    if (this._open) {\n      return;\n    }\n    this._open = true;\n    this._openChanged.emit(true);\n  }\n\n  @HostListener('body:keyup.escape')\n  close(): void {\n    if (this.stopClose) {\n      this.altClose.emit(false);\n      return;\n    }\n    if (!this.closable || !this._open) {\n      return;\n    }\n    this._open = false;\n    // SPECME\n    this.focusTrap.setPreviousFocus(); // Handles moving focus back to the element that had it before.\n  }\n\n  fadeDone(e: AnimationEvent) {\n    if (e.toState === 'void') {\n      // TODO: Investigate if we can decouple from animation events\n      this._openChanged.emit(false);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n/**\n * Allows modal overflow area to be scrollable via keyboard.\n * The modal body will focus with keyboard navigation only.\n * This allows inner focusable items to be focused without\n * the overflow scroll being focused.\n */\n@Directive({\n  selector: '.modal-body',\n  host: {\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class ClrModalBody {\n  tabindex = 0;\n\n  @HostListener('mousedown')\n  mouseDown() {\n    // tabindex = 0 binding should be removed\n    // so it won't be focused when click starts with mousedown\n    delete this.tabindex;\n  }\n\n  @HostListener('mouseup')\n  mouseUp() {\n    // set the tabindex binding back when click is completed with mouseup\n    this.tabindex = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrFocusTrapModule } from '../utils/focus-trap/focus-trap.module';\nimport { ClrModal } from './modal';\nimport { ClrModalBody } from './modal-body';\nimport { ClrFocusOnViewInitModule } from '../utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClarityIcons, windowCloseIcon } from '@cds/core/icon';\n\nexport const CLR_MODAL_DIRECTIVES: Type<any>[] = [ClrModal, ClrModalBody];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusTrapModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_MODAL_DIRECTIVES],\n  exports: [CLR_MODAL_DIRECTIVES, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrModalModule {\n  constructor() {\n    ClarityIcons.addIcons(windowCloseIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Point } from '../common/popover';\n\nexport interface Position {\n  anchorPoint: Point;\n  popoverPoint: Point;\n  offsetY: number;\n  offsetX: number;\n}\n\nexport const SIGNPOST_POSITIONS: { [input: string]: Position } = {\n  'top-left': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0 },\n  'top-middle': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0 },\n  'top-right': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0 },\n  'right-top': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14 },\n  'right-middle': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n  'right-bottom': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14 },\n  'bottom-right': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1 },\n  'bottom-middle': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12 },\n  'bottom-left': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0 },\n  'left-bottom': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14 },\n  'left-middle': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14 },\n  'left-top': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14 },\n  default: { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional, OnDestroy, PLATFORM_ID } from '@angular/core';\n\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { SIGNPOST_POSITIONS } from './signpost-positions';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst POSITIONS: string[] = [\n  'top-left',\n  'top-middle',\n  'top-right',\n  'right-top',\n  'right-middle', // default\n  'right-bottom',\n  'bottom-right',\n  'bottom-middle',\n  'bottom-left',\n  'left-bottom',\n  'left-middle',\n  'left-top',\n];\n\n@Component({\n  selector: 'clr-signpost-content',\n  template: `\n    <div class=\"signpost-wrap\">\n      <div class=\"popover-pointer\"></div>\n      <div class=\"signpost-content-header\">\n        <button\n          type=\"button\"\n          [attr.aria-label]=\"commonStrings.keys.signpostClose\"\n          class=\"signpost-action close\"\n          (click)=\"close()\"\n          [attr.aria-controls]=\"signpostContentId\"\n        >\n          <cds-icon shape=\"window-close\" [attr.title]=\"commonStrings.keys.close\"></cds-icon>\n        </button>\n      </div>\n      <div class=\"signpost-content-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  host: { '[class.signpost-content]': 'true', '[id]': 'signpostContentId' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrSignpostContent extends AbstractPopover implements OnDestroy {\n  private document: Document;\n\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public signpostContentId: string,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(PLATFORM_ID) private platformId: any,\n    @Inject(DOCUMENT) document: any\n  ) {\n    super(injector, parentHost);\n    if (!parentHost) {\n      throw new Error('clr-signpost-content should only be used inside of a clr-signpost');\n    }\n    // Defaults\n    this.position = 'right-middle';\n    this.closeOnOutsideClick = true;\n    this.signpostIdService.setId(signpostContentId);\n\n    this.document = document;\n  }\n\n  /**********\n   *\n   * @description\n   * Close function that uses the signpost instance to toggle the state of the content popover.\n   *\n   */\n  close() {\n    this.toggleService.open = false;\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  /*********\n   *\n   * @description\n   * A setter for the position of the ClrSignpostContent popover. This is a combination of the following:\n   * - anchorPoint - where on the trigger to anchor the ClrSignpostContent\n   * - popoverPoint - where on the ClrSignpostContent container to align with the anchorPoint\n   * - offsetY - where on the Y axis to align the ClrSignpostContent so it meets specs\n   * - offsetX - where on the X axis to align the ClrSignpostContent so it meets specs\n   * There are 12 possible positions to place a ClrSignpostContent container:\n   * - top-left\n   * - top-middle\n   * - top-right\n   * - right-top\n   * - right-middle\n   * - right-bottom\n   * - bottom-right\n   * - bottom-middle\n   * - bottom-left\n   * - left-bottom\n   * - left-middle\n   * - left-top\n   *\n   * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n   * meaning the top of the trigger icon (above the icon that hides/shows) the ClrSignpostContent. And, SIDE_POSITION\n   * is 'left' meaning two things: 1) the ClrSignpostContent container extends to the left and 2) the 'arrow/pointer'\n   * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n   *\n   * @param newPosition\n   */\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right-middle';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, this.position);\n\n    const setPosition = SIGNPOST_POSITIONS[this.position];\n    this.anchorPoint = setPosition.anchorPoint;\n    this.popoverPoint = setPosition.popoverPoint;\n    this.popoverOptions.offsetY = setPosition.offsetY;\n    this.popoverOptions.offsetX = setPosition.offsetX;\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId) && this.el.nativeElement.contains(this.document.activeElement)) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClarityIcons, infoCircleIcon, windowCloseIcon } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrSignpost } from './signpost';\nimport { ClrSignpostContent } from './signpost-content';\nimport { ClrSignpostTrigger } from './signpost-trigger';\n\nexport const CLR_SIGNPOST_DIRECTIVES: Type<any>[] = [ClrSignpost, ClrSignpostContent, ClrSignpostTrigger];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_SIGNPOST_DIRECTIVES],\n  exports: [CLR_SIGNPOST_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrSignpostModule {\n  constructor() {\n    ClarityIcons.addIcons(windowCloseIcon, infoCircleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class TooltipIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  updateId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\n@Component({\n  selector: 'clr-tooltip',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.tooltip]': 'true',\n  },\n  providers: [\n    ClrPopoverToggleService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    // TODO: consider centralizing the unique id string on a service that provides ariaAttributes that need it\n    // AriaService in layout/tabs/providers might be a good starting point.\n    UNIQUE_ID_PROVIDER,\n    TooltipIdService,\n  ],\n})\nexport class ClrTooltip {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\nconst POSITIONS: string[] = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'right', 'left'];\n\nconst SIZES: string[] = ['xs', 'sm', 'md', 'lg'];\n\n@Component({\n  selector: 'clr-tooltip-content',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    '[class.tooltip-content]': 'true',\n    '[style.opacity]': '1',\n    '[attr.role]': '\"tooltip\"',\n    '[id]': 'id',\n  },\n})\nexport class ClrTooltipContent extends AbstractPopover {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    private tooltipIdService: TooltipIdService\n  ) {\n    super(injector, parentHost);\n\n    if (!parentHost) {\n      throw new Error('clr-tooltip-content should only be used inside of a clr-tooltip');\n    }\n\n    // Defaults\n    this.position = 'right';\n    this.size = 'sm';\n\n    // Set the default id in case consumer does not supply a custom id.\n    this.updateId(uniqueId);\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input()\n  set id(value: string) {\n    this.updateId(value || '');\n  }\n  private _id: string;\n\n  private updateId(id: string) {\n    this._id = id;\n    this.tooltipIdService.updateId(id);\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.position);\n\n    // set the popover values based on direction\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'right':\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'left':\n        this.anchorPoint = Point.LEFT_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      default:\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _size: string;\n\n  get size() {\n    return this._size;\n  }\n\n  @Input('clrSize')\n  set size(size: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.size);\n    if (size && SIZES.indexOf(size) > -1) {\n      this._size = size;\n    } else {\n      this._size = 'sm';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.size);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrTooltipTrigger]',\n  host: {\n    tabindex: '0',\n    '[class.tooltip-trigger]': 'true',\n    '[attr.aria-describedby]': 'ariaDescribedBy',\n    '[attr.role]': '\"button\"',\n  },\n})\nexport class ClrTooltipTrigger {\n  public ariaDescribedBy: string;\n  private subs: Subscription[] = [];\n  constructor(private toggleService: ClrPopoverToggleService, private tooltipIdService: TooltipIdService) {\n    // The aria-described by comes from the id of content. It\n    this.subs.push(this.tooltipIdService.id.subscribe(tooltipId => (this.ariaDescribedBy = tooltipId)));\n  }\n\n  @HostListener('mouseenter')\n  @HostListener('focus')\n  showTooltip(): void {\n    this.toggleService.open = true;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  hideTooltip(): void {\n    this.toggleService.open = false;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrTooltip } from './tooltip';\nimport { ClrTooltipContent } from './tooltip-content';\nimport { ClrTooltipTrigger } from './tooltip-trigger';\n\nexport const CLR_TOOLTIP_DIRECTIVES: Type<any>[] = [ClrTooltip, ClrTooltipTrigger, ClrTooltipContent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_TOOLTIP_DIRECTIVES],\n  exports: [CLR_TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrTooltipModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrDropdownModule } from './dropdown/dropdown.module';\nimport { ClrSignpostModule } from './signpost/signpost.module';\nimport { ClrTooltipModule } from './tooltip/tooltip.module';\n\n@NgModule({ exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule] })\nexport class ClrPopoverModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ButtonHubService {\n  public buttonsReady = false;\n\n  private _previousBtnClicked = new Subject<any>();\n  public get previousBtnClicked(): Observable<any> {\n    return this._previousBtnClicked.asObservable();\n  }\n\n  private _nextBtnClicked = new Subject<any>();\n  public get nextBtnClicked(): Observable<any> {\n    return this._nextBtnClicked.asObservable();\n  }\n\n  private _dangerBtnClicked = new Subject<any>();\n  public get dangerBtnClicked(): Observable<any> {\n    return this._dangerBtnClicked.asObservable();\n  }\n\n  private _cancelBtnClicked = new Subject<any>();\n  public get cancelBtnClicked(): Observable<any> {\n    return this._cancelBtnClicked.asObservable();\n  }\n\n  private _finishBtnClicked = new Subject<any>();\n  public get finishBtnClicked(): Observable<any> {\n    return this._finishBtnClicked.asObservable();\n  }\n\n  private _customBtnClicked = new Subject<any>();\n  public get customBtnClicked(): Observable<any> {\n    return this._customBtnClicked.asObservable();\n  }\n\n  public buttonClicked(buttonType: string): void {\n    if ('previous' === buttonType) {\n      this._previousBtnClicked.next();\n    } else if ('next' === buttonType) {\n      this._nextBtnClicked.next();\n    } else if ('finish' === buttonType) {\n      this._finishBtnClicked.next();\n    } else if ('danger' === buttonType) {\n      this._dangerBtnClicked.next();\n    } else if ('cancel' === buttonType) {\n      this._cancelBtnClicked.next();\n    } else {\n      this._customBtnClicked.next(buttonType);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n *\n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n *\n */\n@Injectable()\nexport class PageCollectionService {\n  /**\n   * A reference to the Wizard.pages QueryList.\n   *\n   * Populated when the wizard is created.\n   *\n   * @memberof PageCollectionService\n   */\n  public pages: QueryList<ClrWizardPage>;\n\n  /**\n   * Converts the PageCollectionService.pages QueryList to an array and returns it.\n   *\n   * Useful for many instances when you would prefer a QueryList to act like an array.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesAsArray(): ClrWizardPage[] {\n    return this.pages ? this.pages.toArray() : [];\n  }\n\n  /**\n   * Returns the length of the pages query list.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesCount(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /**\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get penultimatePage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 2) {\n      return null;\n    }\n\n    return this.pagesAsArray[pageCount - 2];\n  }\n\n  /**\n   * Returns the last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get lastPage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 1) {\n      return null;\n    }\n\n    return this.pagesAsArray[pageCount - 1];\n  }\n\n  /**\n   * Returns the first page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get firstPage(): ClrWizardPage {\n    if (!this.pagesCount) {\n      return null;\n    }\n\n    return this.pagesAsArray[0];\n  }\n\n  /**\n   * Used mostly internally, but accepts a string ID and returns a ClrWizardPage\n   * object that matches the ID passed. Note that IDs here should include the prefix\n   * \"clr-wizard-page-\".\n   *\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageById(id: string): ClrWizardPage {\n    const foundPages: ClrWizardPage[] = this.pages.filter((page: ClrWizardPage) => id === page.id);\n    return this.checkResults(foundPages, id);\n  }\n\n  /**\n   * Accepts s number as a parameter and treats that number as the index of the page\n   * you're looking for in the collection of pages. Returns a  wizard page object.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageByIndex(index: number): ClrWizardPage {\n    const pageCount = this.pagesCount;\n    const pagesLastIndex: number = pageCount > 1 ? pageCount - 1 : 0;\n\n    if (index < 0) {\n      throw new Error('Cannot retrieve page with index of ' + index);\n    }\n\n    if (index > pagesLastIndex) {\n      throw new Error('Page index is greater than length of pages array.');\n    }\n\n    return this.pagesAsArray[index];\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns its index in the\n   * collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageIndex(page: ClrWizardPage): number {\n    const index = this.pagesAsArray.indexOf(page);\n\n    if (index < 0) {\n      throw new Error('Requested page cannot be found in collection of pages.');\n    }\n\n    return index;\n  }\n\n  /**\n   * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n   * look ups on the collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  private checkResults(results: ClrWizardPage[], requestedPageId: string) {\n    const foundPagesCount: number = results.length || 0;\n\n    if (foundPagesCount > 1) {\n      throw new Error('More than one page has the requested id ' + requestedPageId + '.');\n    } else if (foundPagesCount < 1) {\n      throw new Error('No page can be found with the id ' + requestedPageId + '.');\n    } else {\n      return results[0];\n    }\n  }\n\n  /**\n   * Accepts two numeric indexes and returns an array of wizard page objects that include\n   * all wizard pages in the page collection from the first index to the second.\n   *\n   * @memberof PageCollectionService\n   */\n  public pageRange(start: number, end: number): ClrWizardPage[] {\n    let pages: ClrWizardPage[] = [];\n\n    if (start < 0 || end < 0) {\n      return [];\n    }\n\n    if (start === null || typeof start === 'undefined' || isNaN(start)) {\n      return [];\n    }\n\n    if (end === null || typeof end === 'undefined' || isNaN(end)) {\n      return [];\n    }\n\n    if (end > this.pagesCount) {\n      end = this.pagesCount;\n    }\n\n    pages = this.pagesAsArray;\n\n    if (end - start === 0) {\n      // just return the one page they want\n      return [this.getPageByIndex(start)];\n    }\n\n    // slice end does not include item referenced by end index, which is weird for users\n    // incrementing end index here to correct that so users and other methods\n    // don't have to think about it\n    end = end + 1;\n\n    // slice does not return the last one in the range but it does include the first one\n    // does not modify original array\n    return pages.slice(start, end);\n  }\n\n  /**\n   * Accepts two wizard page objects and returns those page objects with all other page\n   * objects between them in the page collection. It doesn't care which page is ahead of the\n   * other in the parameters. It will be smart enough to figure that out  on its own.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageRangeFromPages(page: ClrWizardPage, otherPage: ClrWizardPage): ClrWizardPage[] {\n    const pageIndex = this.getPageIndex(page);\n    const otherPageIndex = this.getPageIndex(otherPage);\n    let startIndex: number;\n    let endIndex: number;\n\n    if (pageIndex <= otherPageIndex) {\n      startIndex = pageIndex;\n      endIndex = otherPageIndex;\n    } else {\n      startIndex = otherPageIndex;\n      endIndex = pageIndex;\n    }\n    return this.pageRange(startIndex, endIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately before it in the page collection. Returns null if there is\n   * no page before the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPreviousPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const previousPageIndex = myPageIndex - 1;\n    if (previousPageIndex < 0) {\n      return null;\n    }\n    return this.getPageByIndex(previousPageIndex);\n  }\n\n  /**\n   * Accepts a wizard page object as a parameter and returns a Boolean that says if\n   * the page you sent it is complete.\n   *\n   * @memberof PageCollectionService\n   */\n  public previousPageIsCompleted(page: ClrWizardPage) {\n    if (!page) {\n      return false;\n    }\n\n    const previousPage = this.getPreviousPage(page);\n\n    if (null === previousPage) {\n      // page is the first page. no previous page.\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately after it in the page collection. Returns null if there is\n   * no page after the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getNextPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const nextPageIndex = myPageIndex + 1;\n\n    if (nextPageIndex >= this.pagesAsArray.length) {\n      return null;\n    }\n    return this.getPageByIndex(nextPageIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and generates a step item id from the\n   * page ID. Returns the generated step item ID as a string.\n   *\n   * @memberof PageCollectionService\n   */\n  public getStepItemIdForPage(page: ClrWizardPage) {\n    const pageId = page.id;\n    const pageIdParts = pageId.split('-').reverse();\n\n    pageIdParts[1] = 'step';\n    return pageIdParts.reverse().join('-');\n  }\n\n  /**\n   * Generally only used internally to mark that a specific page has been \"committed\".\n   * This involves marking the page complete and firing the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n   * mark completed as a parameter.\n   *\n   * @memberof PageCollectionService\n   */\n  public commitPage(page: ClrWizardPage) {\n    const pageHasOverrides = page.stopNext || page.preventDefault;\n    page.completed = true;\n\n    if (!pageHasOverrides) {\n      // prevent loop of event emission; alternate flows work off\n      // of event emitters this is how they break that cycle.\n      page.onCommit.emit(page.id);\n    }\n  }\n\n  // used by the navService to navigate back to first possible step after\n  // pages are reset\n\n  /**\n   *\n   * @memberof PageCollectionService\n   */\n  private _pagesReset = new Subject<boolean>();\n\n  /**\n   * An observable that the navigation service listens to in order to know when\n   * the page collection completed states have been reset to false so that way it\n   * can also reset the navigation to make the first page in the page collection\n   * current/active.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesReset(): Observable<boolean> {\n    return this._pagesReset.asObservable();\n  }\n\n  /**\n   * Sets all completed states of the pages in the page collection to false and\n   * notifies the navigation service to likewise reset the navigation.\n   *\n   * @memberof PageCollectionService\n   */\n  public reset() {\n    this.pagesAsArray.forEach((page: ClrWizardPage) => {\n      page.completed = false;\n    });\n    this._pagesReset.next(true);\n  }\n\n  /**\n   * Rolls through all the pages in the page collection to make sure there are no\n   * incomplete pages sandwiched between completed pages in the workflow. Identifies\n   * the first incomplete page index and sets all pages behind it to a completed\n   * state of false.\n   *\n   * @memberof PageCollectionService\n   */\n  public updateCompletedStates(): void {\n    const firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n    if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n      // all complete no need to do anything\n      return;\n    }\n\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (index > firstIncompleteIndex) {\n        page.completed = false;\n      }\n    });\n  }\n\n  /**\n   * Retrieves the index of the first incomplete page in the page collection.\n   *\n   * @memberof PageCollectionService\n   */\n  public findFirstIncompletePageIndex(): number {\n    let returnIndex: number = null;\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (null === returnIndex && false === page.completed) {\n        returnIndex = index;\n      }\n    });\n\n    // fallthrough, all completed, return last page\n    if (null === returnIndex) {\n      returnIndex = this.pagesCount - 1;\n    }\n\n    return returnIndex;\n  }\n\n  public findFirstIncompletePage(): ClrWizardPage {\n    const myIncompleteIndex = this.findFirstIncompletePageIndex();\n    return this.pagesAsArray[myIncompleteIndex];\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\nimport { ButtonHubService } from './button-hub.service';\nimport { PageCollectionService } from './page-collection.service';\n\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n *\n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n */\n@Injectable()\nexport class WizardNavigationService implements OnDestroy {\n  /**\n   * Is notified when a previous button is clicked in the wizard. Performs checks\n   * before alerting the current page of the button click. Enacts navigation to\n   * the previous page if not overridden at the page level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previousButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Next button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public nextButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a danger button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public dangerButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a  finish button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public finishButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Custom button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public customButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n   * which handles all cancel functionality, if cancel is not overridden at the page\n   * level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancelButtonSubscription: Subscription;\n\n  /**\n   * Resets navigation to make the first page current when the page collection service\n   * emits an event notifying WizardNavigationService that it has reset all pages\n   * to their pristine, incomplete state.\n   *\n   * @memberof WizardNavigationService\n   */\n  public pagesResetSubscription: Subscription;\n\n  /**\n   * Creates an instance of WizardNavigationService. Also sets up subscriptions\n   * that listen to the button service to determine when a button has been clicked\n   * in the wizard. Is also responsible for taking action when the page collection\n   * requests that navigation be reset to its pristine state.\n   *\n   * @memberof WizardNavigationService\n   */\n  constructor(public pageCollection: PageCollectionService, public buttonService: ButtonHubService) {\n    this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n      const currentPage = this.currentPage;\n      if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n        return;\n      }\n      currentPage.previousButtonClicked.emit(currentPage);\n      if (!currentPage.preventDefault) {\n        this.previous();\n      }\n    });\n\n    this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('next');\n    });\n\n    this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('danger');\n    });\n\n    this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('finish');\n    });\n\n    this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n      if (!this.wizardStopNavigation) {\n        this.currentPage.customButtonClicked.emit(type);\n      }\n    });\n\n    this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n      if (this.wizardStopNavigation) {\n        return;\n      }\n\n      if (this.currentPage.preventDefault) {\n        this.currentPage.pageOnCancel.emit(this.currentPage);\n      } else {\n        this.cancel();\n      }\n    });\n\n    this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n      this.setFirstPageCurrent();\n    });\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  ngOnDestroy(): void {\n    this.previousButtonSubscription.unsubscribe();\n    this.nextButtonSubscription.unsubscribe();\n    this.dangerButtonSubscription.unsubscribe();\n    this.finishButtonSubscription.unsubscribe();\n    this.customButtonSubscription.unsubscribe();\n    this.cancelButtonSubscription.unsubscribe();\n    this.pagesResetSubscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  private _currentChanged = new Subject<ClrWizardPage>();\n\n  /**\n   * An Observable that is predominantly used amongst the subcomponents and services\n   * of the wizard. It is recommended that users listen to the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output instead of this Observable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageChanged(): Observable<ClrWizardPage> {\n    // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n    // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n    return this._currentChanged.asObservable();\n  }\n\n  /**\n   * A Boolean flag used by the ClrWizardPage to avoid a race condition when pages are\n   * loading and there is no current page defined.\n   *\n   * @memberof WizardNavigationService\n   */\n  public navServiceLoaded = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n   * navigating backwards in the stepnav menu will reset any skipped pages' completed\n   * state to false.\n   *\n   * This is useful when a wizard executes validation on a page-by-page basis when\n   * the next button is clicked.\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceForwardNavigation = false;\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  public get currentPageTitle(): TemplateRef<any> {\n    // when the querylist of pages is empty. this is the first place it fails...\n    if (!this.currentPage) {\n      return null;\n    }\n    return this.currentPage.title;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the first\n   * page in the Wizard.\n   *\n   * This is helpful for determining whether a page is navigable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsFirst(): boolean {\n    return this.pageCollection.firstPage === this.currentPage;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the\n   * last page in the Wizard.\n   *\n   * This is used to determine which buttons should display in the wizard footer.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsLast(): boolean {\n    return this.pageCollection.lastPage === this.currentPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _currentPage: ClrWizardPage;\n\n  /**\n   * Returns the ClrWizardPage object of the current page or null.\n   *\n   * @memberof WizardNavigationService\n   */\n  get currentPage(): ClrWizardPage {\n    if (!this._currentPage) {\n      return null;\n    }\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a ClrWizardPage object, since that object to be the current/active\n   * page in the wizard, and emits the ClrWizardPage.onLoad (clrWizardPageOnLoad)\n   * event for that page.\n   *\n   * Note that all of this work is bypassed if the ClrWizardPage object is already\n   * the current page.\n   *\n   * @memberof WizardNavigationService\n   */\n  set currentPage(page: ClrWizardPage) {\n    if (this._currentPage !== page && !this.wizardStopNavigation) {\n      this._currentPage = page;\n      page.onLoad.emit(page.id);\n      this._currentChanged.next(page);\n    }\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToNextPage = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that forward navigation\n   * has occurred. It is recommended that you use the Wizard.onMoveNext\n   * (clrWizardOnNext) output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToNextPage(): Observable<boolean> {\n    return this._movedToNextPage.asObservable();\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _wizardFinished = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that the nav service\n   * has approved completion of the wizard.\n   *\n   * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n   * output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get wizardFinished(): Observable<boolean> {\n    return this._wizardFinished.asObservable();\n  }\n\n  /**\n   * This is a public function that can be used to programmatically advance\n   * the user to the next page.\n   *\n   * When invoked, this method will move the wizard to the next page after\n   * successful validation. Note that this method goes through all checks\n   * and event emissions as if Wizard.next(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.next(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public next(): void {\n    if (this.currentPageIsLast) {\n      this.checkAndCommitCurrentPage('finish');\n    } else {\n      this.checkAndCommitCurrentPage('next');\n    }\n  }\n\n  /**\n   * Bypasses checks and most event emissions to force a page to navigate forward.\n   *\n   * Comparable to calling Wizard.next() or Wizard.forceNext().\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceNext(): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    const nextPage: ClrWizardPage = this.pageCollection.getNextPage(currentPage);\n\n    // catch errant null or undefineds that creep in\n    if (!nextPage) {\n      throw new Error('The wizard has no next page to go to.');\n    }\n\n    if (this.wizardStopNavigation) {\n      return;\n    }\n\n    if (!currentPage.completed) {\n      // this is a state that alt next flows can get themselves in...\n      this.pageCollection.commitPage(currentPage);\n    }\n    this.currentPage = nextPage;\n  }\n\n  /**\n   * Accepts a button/action type as a parameter. Encapsulates all logic for\n   * event emissions, state of the current page, and wizard and page level overrides.\n   *\n   * Avoid calling this function directly unless you really know what you're doing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public checkAndCommitCurrentPage(buttonType: string): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n\n    if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n      return;\n    }\n\n    const iAmTheLastPage = this.currentPageIsLast;\n\n    const isNext = buttonType === 'next';\n    const isDanger = buttonType === 'danger';\n    const isDangerNext = isDanger && !iAmTheLastPage;\n    const isDangerFinish = isDanger && iAmTheLastPage;\n    const isFinish = buttonType === 'finish' || isDangerFinish;\n\n    if (isFinish && !iAmTheLastPage) {\n      return;\n    }\n\n    currentPage.primaryButtonClicked.emit(buttonType);\n\n    if (isFinish) {\n      currentPage.finishButtonClicked.emit(currentPage);\n    } else if (isDanger) {\n      currentPage.dangerButtonClicked.emit();\n    } else if (isNext) {\n      currentPage.nextButtonClicked.emit();\n    }\n\n    if (currentPage.stopNext || currentPage.preventDefault) {\n      currentPage.onCommit.emit(currentPage.id);\n      return;\n    }\n\n    // order is very important with these emitters!\n    if (isFinish) {\n      // mark page as complete\n      if (!this.wizardHasAltNext) {\n        this.pageCollection.commitPage(currentPage);\n      }\n      this._wizardFinished.next();\n    }\n\n    if (this.wizardHasAltNext) {\n      this.pageCollection.commitPage(currentPage);\n\n      if (isNext || isDangerNext) {\n        this._movedToNextPage.next(true);\n      }\n      // jump out here, no matter what type we're looking at\n      return;\n    }\n\n    if (isNext || isDangerNext) {\n      this.forceNext();\n    }\n\n    if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n      this._movedToNextPage.next(true);\n    }\n  }\n\n  /**\n   * This is a public function that can be used to programmatically conclude\n   * the wizard.\n   *\n   * When invoked, this method will  initiate the work involved with finalizing\n   * and finishing the wizard workflow. Note that this method goes through all\n   * checks and event emissions as if Wizard.finish(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.finish(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public finish(): void {\n    this.checkAndCommitCurrentPage('finish');\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToPreviousPage = new Subject<boolean>();\n\n  /**\n   * Notifies the wizard when backwards navigation has occurred via the\n   * previous button.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToPreviousPage(): Observable<boolean> {\n    return this._movedToPreviousPage.asObservable();\n  }\n\n  /**\n   * Programmatically moves the wizard to the page before the current page.\n   *\n   * In most instances, it makes more sense to call Wizard.previous()\n   * which does the same thing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previous(): void {\n    if (this.currentPageIsFirst || this.wizardStopNavigation) {\n      return;\n    }\n\n    const previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n    if (!previousPage) {\n      return;\n    }\n\n    this._movedToPreviousPage.next(true);\n\n    if (this.forceForwardNavigation) {\n      this.currentPage.completed = false;\n    }\n\n    this.currentPage = previousPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _cancelWizard = new Subject<any>();\n\n  /**\n   * Notifies the wizard that a user is trying to cancel it.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get notifyWizardCancel(): Observable<any> {\n    return this._cancelWizard.asObservable();\n  }\n\n  /**\n   * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n   * this route goes through all checks and event emissions as if a cancel button had\n   * been clicked.\n   *\n   * In most cases, users looking for a hook into the cancel routine are actually looking\n   * for a way to close the wizard from their host component because they have prevented\n   * the default cancel action.\n   *\n   * In this instance, it is recommended that you use Wizard.close() to avoid any event\n   * emission loop resulting from an event handler calling back into routine that will\n   * again evoke the events it handles.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancel(): void {\n    this._cancelWizard.next();\n  }\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n   * routine is subverted and must be reinstated in the host component calling Wizard.close()\n   * at some point.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltCancel = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n   * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n   * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltNext = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n   * navigational elements in the wizard are disabled.\n   *\n   * This is intended to freeze the wizard in place. Events are not fired so this is\n   * not a way to implement alternate functionality for navigation.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardStopNavigation = false;\n\n  /**\n   * A boolean flag shared with the stepnav items that prevents user clicks on\n   * stepnav items from navigating the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardDisableStepnav = false;\n\n  /**\n   * Performs all required checks to determine if a user can navigate to a page. Checking at each\n   * point if a page is navigable -- completed where the page immediately after the last completed\n   * page.\n   *\n   * Takes two parameters. The first one must be either the ClrWizardPage object or the ID of the\n   * ClrWizardPage object that you want to make the current page.\n   *\n   * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n   * is the Wizard will mark all pages between the current page and the page you want to navigate\n   * to as completed. This is useful for informational wizards that do not require user action,\n   * allowing an easy means for users to jump ahead.\n   *\n   * To avoid checks on navigation, use ClrWizardPage.makeCurrent() instead.\n   *\n   * @memberof WizardNavigationService\n   */\n  public goTo(pageToGoToOrId: any, lazyComplete = false) {\n    const myPages = this.pageCollection;\n    const pageToGoTo = typeof pageToGoToOrId === 'string' ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n    const currentPage = this.currentPage;\n\n    // no point in going to the current page. you're there already!\n    // also hard block on any navigation when stopNavigation is true\n    if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n      return;\n    }\n\n    const currentPageIndex = myPages.getPageIndex(currentPage);\n    const goToPageIndex = myPages.getPageIndex(pageToGoTo);\n    const goingForward = goToPageIndex > currentPageIndex;\n    const pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n    const okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n    if (!okayToMove) {\n      return;\n    }\n\n    if (goingForward && lazyComplete) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        if (page !== pageToGoTo) {\n          page.completed = true;\n        }\n      });\n    } else if (!goingForward && this.forceForwardNavigation) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        page.completed = false;\n      });\n    }\n\n    this.currentPage = pageToGoTo;\n  }\n\n  /**\n   * Accepts a range of ClrWizardPage objects as a parameter. Performs the work of checking\n   * those objects to determine if navigation can be accomplished.\n   *\n   * @memberof WizardNavigationService\n   */\n  public canGoTo(pagesToCheck: ClrWizardPage[]): boolean {\n    let okayToMove = true;\n    const myPages = this.pageCollection;\n\n    // previous page can be important when moving because if it's completed it\n    // allows us to move to the page even if it's incomplete...\n    let previousPagePasses: boolean;\n\n    if (!pagesToCheck || pagesToCheck.length < 1) {\n      return false;\n    }\n\n    pagesToCheck.forEach((page: ClrWizardPage) => {\n      if (!okayToMove) {\n        return;\n      }\n\n      if (page.completed) {\n        // default is true. just jump out instead of complicating it.\n        return;\n      }\n\n      // so we know our page is not completed...\n      const previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n      previousPagePasses = previousPage === null || previousPage.completed === true;\n\n      // we are false if not the current page AND previous page is not completed\n      // (but must have a previous page)\n      if (!page.current && !previousPagePasses) {\n        okayToMove = false;\n      }\n      // falls through to true as default\n    });\n\n    return okayToMove;\n  }\n\n  /**\n   * Looks through the collection of pages to find the first one that is incomplete\n   * and makes that page the current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setLastEnabledPageCurrent(): void {\n    const allPages: ClrWizardPage[] = this.pageCollection.pagesAsArray;\n    let lastCompletedPageIndex: number = null;\n\n    allPages.forEach((page: ClrWizardPage, index: number) => {\n      if (page.completed) {\n        lastCompletedPageIndex = index;\n      }\n    });\n\n    if (lastCompletedPageIndex === null) {\n      // always is at least the first item...\n      lastCompletedPageIndex = 0;\n    } else if (lastCompletedPageIndex + 1 < allPages.length) {\n      lastCompletedPageIndex = lastCompletedPageIndex + 1;\n    }\n\n    this.currentPage = allPages[lastCompletedPageIndex];\n  }\n\n  /**\n   * Finds the first page in the collection of pages and makes that page the\n   * current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setFirstPageCurrent(): void {\n    this.currentPage = this.pageCollection.pagesAsArray[0];\n  }\n\n  /**\n   * Updates the stepnav on the left side of the wizard when pages are dynamically\n   * added or removed from the collection of pages.\n   *\n   * @memberof WizardNavigationService\n   */\n  public updateNavigation(): void {\n    let toSetCurrent: ClrWizardPage;\n\n    this.pageCollection.updateCompletedStates();\n\n    const currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n    if (currentPageRemoved) {\n      toSetCurrent = this.pageCollection.findFirstIncompletePage();\n      this.currentPage = toSetCurrent;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { ClrWizardHeaderAction } from '../wizard-header-action';\nimport { WizardNavigationService } from './wizard-navigation.service';\n\n@Injectable()\nexport class HeaderActionService {\n  // this service communicates information about the presence/display of header actions\n  // across the wizard\n\n  constructor(public navService: WizardNavigationService) {}\n\n  public wizardHeaderActions: QueryList<ClrWizardHeaderAction>;\n\n  public get wizardHasHeaderActions(): boolean {\n    const wizardHdrActions = this.wizardHeaderActions;\n    if (!wizardHdrActions) {\n      return false;\n    }\n    return wizardHdrActions.toArray().length > 0;\n  }\n\n  public get currentPageHasHeaderActions(): boolean {\n    return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n  }\n\n  public get showWizardHeaderActions(): boolean {\n    return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n  }\n\n  public get displayHeaderActionsWrapper(): boolean {\n    return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nlet wizardHeaderActionIndex = 0;\n\n@Component({\n  selector: 'clr-wizard-header-action',\n  template: `\n    <button\n      type=\"button\"\n      class=\"btn clr-wizard-header-action btn-link\"\n      [id]=\"id\"\n      [class.disabled]=\"disabled\"\n      (click)=\"click()\"\n      [title]=\"title\"\n    >\n      <ng-content></ng-content>\n    </button>\n  `,\n  host: { class: 'clr-wizard-header-action-wrapper' },\n})\nexport class ClrWizardHeaderAction {\n  // title is explanatory text added to the header action\n  @Input('title') title = '';\n\n  // If our host has an ID attribute, we use this instead of our index.\n  @Input('id') _id: string = (wizardHeaderActionIndex++).toString();\n\n  public get id(): string {\n    return `clr-wizard-header-action-${this._id}`;\n  }\n\n  @Input('clrWizardHeaderActionDisabled') public disabled = false;\n\n  @Output('actionClicked') headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n\n  click(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // passing the header action id allows users to have one method that\n    // routes to many different actions based on the type of header action\n    // clicked. this is further aided by users being able to specify ids\n    // for their header actions.\n    this.headerActionClicked.emit(this._id);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageButtons]' })\nexport class ClrWizardPageButtons {\n  constructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageHeaderActions]' })\nexport class ClrWizardPageHeaderActions {\n  constructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageNavTitle]' })\nexport class ClrWizardPageNavTitle {\n  constructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageTitle]' })\nexport class ClrWizardPageTitle {\n  constructor(public pageTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\n\nlet wizardPageIndex = 0;\n\n/**\n * The ClrWizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n *\n * ClrWizardPage component has hooks into the navigation service (ClrWizardPage.navService),\n * page collection (ClrWizardPage.pageCollection), and button service\n * (ClrWizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n *\n */\n@Component({\n  selector: 'clr-wizard-page',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[id]': 'id',\n    '[attr.aria-hidden]': '!current',\n    '[attr.aria-labelledby]': 'stepItemId',\n    '[class.active]': 'current',\n    '[class.clr-wizard-page]': 'true',\n  },\n})\nexport class ClrWizardPage implements OnInit {\n  /**\n   * Creates an instance of ClrWizardPage.\n   *\n   * @memberof WizardPage\n   */\n  constructor(\n    private navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService\n  ) {}\n\n  /**\n   * Contains a reference to the page title which is used for a number\n   * of different tasks for display in the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageTitle, { static: true })\n  public pageTitle: ClrWizardPageTitle;\n\n  /**\n   * Contains a reference to the desired title for the page's step in the\n   * navigation on the left side of the wizard. Can be projected to change the\n   * navigation link's text.\n   *\n   * If not defined, then ClrWizardPage.pageTitle will be displayed in the stepnav.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageNavTitle, { static: true })\n  public pageNavTitle: ClrWizardPageNavTitle;\n\n  /**\n   * Contains a reference to the buttons defined within the page. If not defined,\n   * the wizard defaults to the set of buttons defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageButtons, { static: true })\n  public _buttons: ClrWizardPageButtons;\n\n  /**\n   * Contains a reference to the header actions defined within the page. If not defined,\n   * the wizard defaults to the set of header actions defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageHeaderActions, { static: true })\n  public _headerActions: ClrWizardPageHeaderActions;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _nextStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the next page.\n   *\n   * Useful for in-page validation because it prevents forward navigation\n   * and visibly disables the next button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get nextStepDisabled(): boolean {\n    return this._nextStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow forward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageNextDisabled')\n  public set nextStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._nextStepDisabled) {\n      this._nextStepDisabled = valBool;\n      this.nextStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.nextStepDisabled changes.\n   * Should emit the new value of nextStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNextDisabledChange') nextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _previousStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the previous page.\n   *\n   * Useful for in-page validation because it prevents backward navigation\n   * and visibly disables the previous button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousStepDisabled(): boolean {\n    return this._previousStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow backward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreviousDisabled')\n  public set previousStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._previousStepDisabled) {\n      this._previousStepDisabled = valBool;\n      this.previousStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.previousStepDisabled changes.\n   * Should emit the new value of previousStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreviousDisabledChange')\n  public previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _hasError = false;\n\n  /**\n   * A getter that tells whether or not the page has an error.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasError(): boolean {\n    return this._hasError;\n  }\n\n  /**\n   * Sets whether the page has an error and also resolve the \"falsy\" value. The\n   * current logic treat a \"0\" or an empty string as false and likewise will treat any\n   * \"truthy\" value as true.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageHasError')\n  public set hasError(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasError) {\n      this._hasError = valBool;\n    }\n  }\n\n  /**\n   * Overrides all actions from the page level, so you can use an alternate function for\n   * validation or data-munging with a ClrWizardPage.onCommit (clrWizardPageOnCommit output),\n   * ClrWizardPage.onCancel (clrWizardPageOnCancel output), or one\n   * of the granular page-level button click event emitters.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreventDefault') public preventDefault = false;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopCancel = false;\n\n  /**\n   * A getter that retrieves whether the page is preventing the cancel action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Overrides the cancel action from the page level. Allows you to use an\n   * alternate function for validation or data-munging before cancelling the\n   * wizard when combined with the ClrWizardPage.onCancel\n   * (the clrWizardPageOnCancel output).\n   *\n   * Requires that you manually close the wizard from your host component,\n   * usually with a call to Wizard.forceNext() or wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultCancel')\n  public set stopCancel(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopCancel) {\n      this._stopCancel = valBool;\n      this.stopCancelChange.emit(valBool);\n    }\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreventDefaultCancelChange') stopCancelChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopNext = false;\n\n  /**\n   * A getter that tells you whether the page is preventing the next action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopNext(): boolean {\n    return this._stopNext;\n  }\n\n  /**\n   * Overrides forward navigation from the page level. Allows you to use an\n   * alternate function for validation or data-munging before moving the\n   * wizard to the next pagewhen combined with the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) or ClrWizardPage.nextButtonClicked\n   * (clrWizardPageNext) outputs.\n   *\n   * Requires that you manually tell the wizard to navigate forward from\n   * the hostComponent, usually with a call to Wizard.forceNext() or\n   * wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultNext')\n  public set stopNext(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopNext) {\n      this._stopNext = valBool;\n    }\n  }\n\n  /**\n   * An event emitter carried over from a legacy version of ClrWizardPage.\n   * Fires an event on ClrWizardPage whenever the next or finish buttons\n   * are clicked and the page is the current page of the Wizard.\n   *\n   * Note that this does not automatically emit an event when a custom\n   * button is used in place of a next or finish button.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCommit') onCommit: EventEmitter<string> = new EventEmitter<string>(false);\n\n  /**\n   * Emits an event when ClrWizardPage becomes the current page of the\n   * Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnLoad') onLoad: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Emits an event when the ClrWizardPage invokes the cancel routine for the wizard.\n   *\n   * Can be used in conjunction with the ClrWizardPage.stopCancel\n   * (clrWizardPagePreventDefaultCancel) or ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before cancelling the wizard.\n   *\n   * Note that this requires you to call Wizard.close() from the host component.\n   * This constitues a full replacement of the cancel functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCancel') pageOnCancel: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the finish button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom finish\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to complete\n   * the wizard.\n   *\n   * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n   * from the host component. This combination creates a full replacement of\n   * the finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageFinish') finishButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the previous button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom backwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * backwards in the wizard.\n   *\n   * Note that this requires you to call Wizard.previous()\n   * from the host component. This combination creates a full replacement of\n   * the backwards navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrevious') previousButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the next button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * to the next page in the wizard.\n   *\n   * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n   * from the host component. This combination creates a full replacement of\n   * the forward navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNext') nextButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a danger button is clicked and the ClrWizardPage is\n   * the wizard's current page. By default, a danger button will act as\n   * either a \"next\" or \"finish\" button depending on if the ClrWizardPage is the\n   * last page or not.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level when the danger button is clicked.\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageDanger') dangerButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a next, finish, or danger button is clicked and the\n   * ClrWizardPage is the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level, regardless of the type of\n   * primary button.\n   *\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrimary') primaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  @Output('clrWizardPageCustomButton') customButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * An input value that is used internally to generate the ClrWizardPage ID as\n   * well as the step nav item ID.\n   *\n   * Typed as any because it should be able to accept numbers as well as\n   * strings. Passing an index for wizard whose pages are created with an\n   * ngFor loop is a common use case.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('id') _id: any = (wizardPageIndex++).toString();\n\n  /**\n   * A read-only getter that generates an ID string for the wizard page from\n   * either the value passed to the ClrWizardPage \"id\" input or a wizard page\n   * counter shared across all wizard pages in the application.\n   *\n   * Note that the value passed into the ID input Will be prefixed with\n   * \"clr-wizard-page-\".\n   *\n   * @readonly\n   *\n   * @memberof ClrWizardPage\n   */\n  public get id(): string {\n    // covers things like null, undefined, false, and empty string\n    // while allowing zero to pass\n    const idIsNonZeroFalsy = !this._id && this._id !== 0;\n\n    // in addition to non-zero falsy we also want to make sure _id is not a negative\n    // number.\n    if (idIsNonZeroFalsy || this._id < 0) {\n      // guard here in the event that input becomes undefined or null by accident\n      this._id = (wizardPageIndex++).toString();\n    }\n    return `clr-wizard-page-${this._id}`;\n  }\n\n  /**\n   * A read-only getter that serves as a convenience for those who would rather\n   * not think in the terms of !ClrWizardPage.nextStepDisabled. For some use cases,\n   * ClrWizardPage.readyToComplete is more logical and declarative.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get readyToComplete(): boolean {\n    return !this.nextStepDisabled;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _complete = false;\n\n  /**\n   * A page is marked as completed if it is both readyToComplete and completed,\n   * as in the next or finish action has been executed while this page was current.\n   *\n   * Note there is and open question about how to handle pages that are marked\n   * complete but who are no longer readyToComplete. This might indicate an error\n   * state for the ClrWizardPage. Currently, the wizard does not acknowledge this state\n   * and only returns that the page is incomplete.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get completed(): boolean {\n    return this._complete && this.readyToComplete;\n\n    // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n    // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n    // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n    // FIRST QUESTION: AM I GREY OR COLORED?\n    // SECOND QUESTION: AM I GREEN OR RED?\n  }\n\n  /**\n   * A ClrWizardPage can be manually set to completed using this boolean setter.\n   * It is recommended that users rely on the convenience functions in the wizard\n   * and navigation service instead of manually setting pages’ completion state.\n   *\n   * @memberof ClrWizardPage\n   */\n  public set completed(value: boolean) {\n    this._complete = value;\n  }\n\n  /**\n   * Checks with the navigation service to see if it is the current page.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get current(): boolean {\n    return this.navService.currentPage === this;\n  }\n\n  public get disabled(): boolean {\n    return !this.enabled;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page is navigable\n   * in the wizard. A wizard page can be navigated to if it is completed\n   * or the page before it is completed.\n   *\n   * This getter handles the logic for enabling or disabling the links in\n   * the step nav on the left Side of the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get enabled(): boolean {\n    return this.current || this.completed || this.previousCompleted;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page before this\n   * ClrWizardPage is completed. This is useful for determining whether or not\n   * a page is navigable if it is not current or already completed.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousCompleted(): boolean {\n    const previousPage = this.pageCollection.getPreviousPage(this);\n\n    if (!previousPage) {\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get title(): TemplateRef<any> {\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get navTitle(): TemplateRef<any> {\n    if (this.pageNavTitle) {\n      return this.pageNavTitle.pageNavTitleTemplateRef;\n    }\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get headerActions(): TemplateRef<any> {\n    if (!this._headerActions) {\n      return undefined;\n    }\n    return this._headerActions.pageHeaderActionsTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasHeaderActions(): boolean {\n    return !!this._headerActions;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get buttons(): TemplateRef<any> {\n    if (!this._buttons) {\n      return undefined;\n    }\n    return this._buttons.pageButtonsTemplateRef;\n  }\n\n  /**\n   * A read-only getter that returns a boolean that says whether or\n   * not the ClrWizardPage includes buttons. Used to determine if the\n   * Wizard should override the default button set defined as\n   * its direct children.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasButtons(): boolean {\n    return !!this._buttons;\n  }\n\n  /**\n   * Uses the nav service to make the ClrWizardPage the current page in the\n   * wizard. Bypasses all checks but still emits the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output.\n   *\n   * In most cases, it is better to use the default navigation functions\n   * in Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public makeCurrent(): void {\n    this.navService.currentPage = this;\n  }\n\n  /**\n   * Links the nav service and establishes the current page if one is not defined.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public ngOnInit(): void {\n    const navService = this.navService;\n    if (!navService.currentPage && !navService.navServiceLoaded) {\n      this.makeCurrent();\n      this.navService.navServiceLoaded = true;\n    }\n  }\n\n  /**\n   * A read-only getter that returns the id used by the step nav item associated with the page.\n   *\n   * ClrWizardPage needs this ID string for aria information.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stepItemId(): string {\n    return this.pageCollection.getStepItemIdForPage(this);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { HeaderActionService } from './providers/header-actions.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: 'clr-wizard',\n  providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n  templateUrl: './wizard.html',\n  host: {\n    '[class.clr-wizard]': 'true',\n    '[class.wizard-md]': \"size == 'md'\",\n    '[class.wizard-lg]': \"size == 'lg'\",\n    '[class.wizard-xl]': \"size == 'xl'\",\n    '[class.lastPage]': 'navService.currentPageIsLast',\n  },\n})\nexport class ClrWizard implements OnDestroy, AfterContentInit, DoCheck {\n  /**\n   * Set the modal size of the wizard. Set using `[clrWizardSize]` input.\n   */\n  @Input('clrWizardSize') size = 'xl';\n\n  /**\n   * Tells the modal part of the wizard whether it should have a close \"X\"\n   * in the top right corner. Set using `[clrWizardClosable]` input.\n   */\n  @Input('clrWizardClosable') closable = true;\n\n  /**\n   * Resets page completed states when navigating backwards.\n   * Set using `[clrWizardForceForwardNavigation]` input.\n   */\n  @Input('clrWizardForceForwardNavigation')\n  set forceForward(value: boolean) {\n    this._forceForward = !!value;\n    this.navService.forceForwardNavigation = value;\n  }\n  get forceForward(): boolean {\n    return this._forceForward;\n  }\n  private _forceForward = false;\n\n  _open = false;\n  /**\n   * Toggles open/close of the wizard component.\n   * Set using the `[clrWizardOpen]` input.\n   */\n  @Input('clrWizardOpen')\n  set clrWizardOpen(open: boolean) {\n    if (open) {\n      this.buttonService.buttonsReady = true;\n    }\n    this._open = open;\n  }\n\n  /**\n   * Prevents ClrWizard from moving to the next page or closing itself on finishing.\n   * Set using the `[clrWizardPreventDefaultNext]` input. Note that using stopNext\n   * will require you to create your own calls to .next() and .finish() in your\n   * host component to make the ClrWizard work as expected.\n   */\n  @Input('clrWizardPreventDefaultNext')\n  set stopNext(value: boolean) {\n    this._stopNext = !!value;\n    this.navService.wizardHasAltNext = value;\n  }\n  get stopNext(): boolean {\n    return this._stopNext;\n  }\n  private _stopNext = false;\n\n  /**\n   * Prevents ClrWizard from closing when the cancel button or close \"X\" is clicked.\n   * Set using the `[clrWizardPreventDefaultCancel]` input.\n   *\n   * Note that using stopCancel will require you to create your own calls to `close()` in your host compone`nt\n   * to make the ClrWizard work as expected. Useful for doing checks or prompts\n   * before closing a ClrWizard.\n   */\n  @Input('clrWizardPreventDefaultCancel')\n  set stopCancel(value: boolean) {\n    this._stopCancel = !!value;\n    this.navService.wizardHasAltCancel = value;\n  }\n  get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n  private _stopCancel = false;\n\n  /**\n   * Prevents ClrWizard from performing any form of navigation away from the current\n   * page. Set using the `[clrWizardPreventNavigation]` input.\n   * Note that stopNavigation is meant to freeze the wizard in place, typically\n   * during a long validation or background action where you want the wizard to\n   * display loading content but not allow the user to execute navigation in\n   * the stepnav, close X, or the  back, finish, or next buttons.\n   */\n  @Input('clrWizardPreventNavigation')\n  set stopNavigation(value: boolean) {\n    this._stopNavigation = !!value;\n    this.navService.wizardStopNavigation = value;\n  }\n  get stopNavigation(): boolean {\n    return this._stopNavigation;\n  }\n  private _stopNavigation = false;\n\n  /**\n   * Prevents clicks on the links in the stepnav from working.\n   * Set using `[clrWizardDisableStepnav]` input.\n   * A more granular bypassing of navigation which can be useful when your\n   * ClrWizard is in a state of completion and you don't want users to be\n   * able to jump backwards and change things.\n   */\n  @Input('clrWizardDisableStepnav')\n  set disableStepnav(value: boolean) {\n    this._disableStepnav = !!value;\n    this.navService.wizardDisableStepnav = value;\n  }\n  get disableStepnav(): boolean {\n    return this._disableStepnav;\n  }\n  private _disableStepnav = false;\n\n  /**\n   * Used to communicate to the underlying modal that animations are not\n   * wanted. Primary use is for the display of static/inline wizards.\n   * Set using `[clrWizardPreventModalAnimation]` input.\n   */\n  /** @deprecated since 3.0, input should be removed in 4.0 because is only related to inline wizards */\n  @Input('clrWizardPreventModalAnimation') _stopModalAnimations = false;\n  get stopModalAnimations(): string {\n    return this._stopModalAnimations ? 'true' : 'false';\n  }\n\n  /**\n   * Emits when the wizard is opened or closed.\n   * Listen via `(clrWizardOpenChange)` event.\n   */\n  @Output('clrWizardOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Emits when the wizard is canceled. Listen via `(clrWizardOnCancel)` event.\n   * Can be combined with the `[clrWizardPreventDefaultCancel]` input to create\n   * wizard-level custom cancel routines.\n   */\n  @Output('clrWizardOnCancel') onCancel: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is completed. Listen via `(clrWizardOnFinish)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom completion routines.\n   */\n  @Output('clrWizardOnFinish') wizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is reset. Listen via `(clrWizardOnReset)` event.\n   */\n  @Output('clrWizardOnReset') onReset: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the current page has changed. Listen via `(clrWizardCurrentPageChanged)` event.\n   * output. Useful for non-blocking validation.\n   */\n  @Output('clrWizardCurrentPageChanged') currentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the next page. Listen via `(clrWizardOnNext)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom navigation routines, which are useful for validation.\n   */\n  @Output('clrWizardOnNext') onMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the previous page. Can be useful for validation.\n   * Listen via `(clrWizardOnPrevious)` event.\n   */\n\n  @Output('clrWizardOnPrevious') onMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n\n  @ContentChildren(ClrWizardPage, { descendants: true })\n  pages: QueryList<ClrWizardPage>;\n  @ContentChildren(ClrWizardHeaderAction) headerActions: QueryList<ClrWizardHeaderAction>;\n  @ViewChild('wizardTitle') wizardTitle: ElementRef;\n\n  public get currentPage(): ClrWizardPage {\n    return this.navService.currentPage;\n  }\n\n  public set currentPage(page: ClrWizardPage) {\n    this.navService.goTo(page, true);\n  }\n\n  public get isLast(): boolean {\n    return this.navService.currentPageIsLast;\n  }\n\n  public get isFirst(): boolean {\n    return this.navService.currentPageIsFirst;\n  }\n\n  public get isStatic(): boolean {\n    return (this.elementRef.nativeElement as HTMLElement).classList.contains('clr-wizard--inline');\n  }\n\n  private differ: any; // for marking when the collection of wizard pages has been added to or deleted from\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    public navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService,\n    public headerActionService: HeaderActionService,\n    private elementRef: ElementRef,\n    differs: IterableDiffers\n  ) {\n    this.subscriptions.push(\n      this.listenForNextPageChanges(),\n      this.listenForPreviousPageChanges(),\n      this.listenForCancelChanges(),\n      this.listenForFinishedChanges(),\n      this.listenForPageChanges()\n    );\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  public ngAfterContentInit(): void {\n    this.pageCollection.pages = this.pages;\n    this.headerActionService.wizardHeaderActions = this.headerActions;\n    this.initializeButtons();\n  }\n\n  public ngDoCheck(): void {\n    this.updateNavOnPageChanges();\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /**\n   * Marks Wizard as finished. By default it does not execute event\n   * emissions or checks before completing and closing. This method is commonly\n   * used as part of an alternative navigation with `[clrWizardPreventDefaultNext]`.\n   *\n   * If `skipChecksAndEmits` is true, the wizard will complete and close\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   */\n  public finish(skipChecksAndEmits = true): void {\n    if (skipChecksAndEmits) {\n      this.forceFinish();\n    } else {\n      this.navService.finish();\n    }\n  }\n\n  /**\n   * Marks the wizard as finished but does run checks and emissions.\n   * Good for a last step in an alternate workflow. Does the same thing as\n   * calling `ClrWizard.finish(true)` or `ClrWizard.finish()` without a parameter.\n   */\n  public forceFinish(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * Opens the wizard. If there is no current page defined, sets the first page in the wizard to be current.\n   */\n  public open(): void {\n    this._open = true;\n\n    if (!this.currentPage) {\n      this.navService.setFirstPageCurrent();\n    }\n\n    // Only render buttons when wizard is opened, to avoid chocolate errors\n    this.buttonService.buttonsReady = true;\n\n    this._openChanged.emit(true);\n  }\n\n  /**\n   * Closes the wizard. Call this directly instead of `cancel()` to implement alternative cancel functionality.\n   */\n  public close(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this._open = false;\n    this._openChanged.emit(false);\n  }\n\n  /**\n   * Used to open and close the wizard. By default the wizard will\n   * close if invoked with no parameter. If parameter is true wizard will open\n   * else if false will close.\n   */\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Moves the wizard to the previous page.\n   */\n  public previous(): void {\n    this.navService.previous();\n  }\n\n  /**\n   * By default, `next()` does not execute event emissions.\n   * This method is commonly called as part of an alternative navigation\n   * with `[clrWizardPreventDefaultNext]`. The wizard will move to the next page\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   *\n   * If `skipChecksAndEmits` is false, the wizard will execute default checks\n   * and emit events as normal. This is useful for custom buttons or programmatic\n   * workflows that are not executing the wizards default checks and emissions.\n   * It is another way to navigate without having to rewrite the wizard’s default\n   * functionality from scratch.\n   */\n  public next(skipChecksAndEmits = true): void {\n    if (skipChecksAndEmits) {\n      this.forceNext();\n    } else {\n      this.navService.next();\n    }\n  }\n\n  /**\n   * Moves the wizard to the next page without the checks and emissions.\n   * Good for a last step in an alternate workflow.\n   * Alias for `ClrWizard.next(true)` or `ClrWizard.next()`\n   */\n  public forceNext(): void {\n    this.navService.forceNext();\n  }\n\n  /**\n   * Cancels and closes the wizard. Do not use this for an override of the cancel\n   * the functionality with `[clrWizardPreventDefaultCancel]`, `[clrWizardPreventPageDefaultCancel]`,\n   * or `[clrWizardPagePreventDefault]` because it will initiate the same checks\n   * and event emissions that invoked your event handler. Use `ClrWizard.close()` instead.\n   */\n  public cancel(): void {\n    this.navService.cancel();\n  }\n\n  /**\n   * Overrides behavior of the underlying modal to avoid collisions with\n   * alternative cancel functionality. In most cases, use `ClrWizard.cancel()` instead.\n   */\n  public modalCancel(): void {\n    if (this.closable) {\n      this.checkAndCancel();\n    }\n  }\n\n  /**\n   * Checks for alternative cancel flows defined at the current page or\n   * wizard level. Performs a canceled if not. Emits events that initiate\n   * the alternative cancel outputs `(clrWizardPageOnCancel)` and `(clrWizardOnCancel)`.\n   */\n  public checkAndCancel(): void {\n    const currentPage = this.currentPage;\n    const currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n    if (this.stopNavigation) {\n      return;\n    }\n\n    currentPage.pageOnCancel.emit();\n    if (!currentPageHasOverrides) {\n      this.onCancel.emit();\n    }\n\n    if (!this.stopCancel && !currentPageHasOverrides) {\n      this.close();\n    }\n  }\n\n  /**\n   * Navigates to a given page in the Wizard. Navigation will invoke the wizard’s default\n   * checks and event emissions.\n   *\n   * The format of the expected ID parameter can be found in the return of the\n   * ClrWizardPage.id getter, usually prefixed with `clr-wizard-page-` and then either a\n   * numeric ID or the ID specified for the `ClrWizardPage` component’s `id` input.\n   */\n  public goTo(pageId: string): void {\n    if (!pageId) {\n      return;\n    }\n\n    this.navService.goTo(pageId);\n  }\n\n  /**\n   * Reset sets all WizardPages to incomplete and sets the first page in the `ClrWizard` to\n   * be the current page, resetting the wizard navigation.\n   * Use `(clrWizardOnReset)` event to reset the data or model of your wizard.\n   */\n  public reset(): void {\n    this.pageCollection.reset();\n    this.onReset.next();\n  }\n\n  private listenForNextPageChanges(): Subscription {\n    return this.navService.movedToNextPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMoveNext.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForPreviousPageChanges(): Subscription {\n    return this.navService.movedToPreviousPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMovePrevious.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForCancelChanges(): Subscription {\n    return this.navService.notifyWizardCancel.subscribe(() => this.checkAndCancel());\n  }\n\n  private listenForFinishedChanges(): Subscription {\n    return this.navService.wizardFinished.subscribe(() => this.emitWizardFinished());\n  }\n\n  private listenForPageChanges(): Subscription {\n    return this.navService.currentPageChanged.subscribe(() => this.currentPageChanged.emit());\n  }\n\n  private updateNavOnPageChanges(): void {\n    const changes = this.differ.diff(this.pages);\n    if (changes) {\n      changes.forEachAddedItem(() => this.navService.updateNavigation());\n      changes.forEachRemovedItem(() => this.navService.updateNavigation());\n    }\n  }\n\n  private initializeButtons(): void {\n    // Only trigger buttons ready if default is open (inlined)\n    if (this._open) {\n      this.buttonService.buttonsReady = true;\n    }\n  }\n\n  private emitWizardFinished(): void {\n    if (!this.stopNext) {\n      this.forceFinish();\n    }\n    this.wizardFinished.emit();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\n\nexport const DEFAULT_BUTTON_TYPES: any = {\n  cancel: 'cancel',\n  previous: 'previous',\n  next: 'next',\n  finish: 'finish',\n  danger: 'danger',\n};\n\nexport const CUSTOM_BUTTON_TYPES: any = {\n  cancel: 'custom-cancel',\n  previous: 'custom-previous',\n  next: 'custom-next',\n  finish: 'custom-finish',\n  danger: 'custom-danger',\n};\n\n@Component({\n  selector: 'clr-wizard-button',\n  template: `\n    <button\n      type=\"button\"\n      class=\"btn clr-wizard-btn\"\n      [class.btn-link]=\"isCancel\"\n      [class.clr-wizard-btn--tertiary]=\"isCancel\"\n      [class.btn-outline]=\"isPrevious\"\n      [class.clr-wizard-btn--secondary]=\"isPrevious\"\n      [class.btn-primary]=\"isPrimaryAction\"\n      [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n      [class.btn-success]=\"isFinish\"\n      [class.btn-danger]=\"isDanger\"\n      [class.disabled]=\"isDisabled\"\n      [attr.disabled]=\"_disabledAttribute\"\n      (click)=\"click()\"\n    >\n      <ng-content></ng-content>\n    </button>\n  `,\n  host: { class: 'clr-wizard-btn-wrapper', '[attr.aria-hidden]': 'isHidden' },\n})\nexport class ClrWizardButton {\n  @Input('type') public type = '';\n\n  @Input('clrWizardButtonDisabled') public disabled = false;\n\n  @Input('clrWizardButtonHidden') public hidden = false;\n\n  // EventEmitter which is emitted when a button is clicked.\n  @Output('clrWizardButtonClicked') wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n\n  constructor(public navService: WizardNavigationService, public buttonService: ButtonHubService) {}\n\n  private checkDefaultAndCustomType(valueToCheck = '', typeToLookUp: string) {\n    if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    return false;\n  }\n\n  public get isCancel(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'cancel');\n  }\n\n  public get isNext(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'next');\n  }\n\n  public get isPrevious(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'previous');\n  }\n\n  public get isFinish(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'finish');\n  }\n\n  public get isDanger(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'danger');\n  }\n\n  public get isPrimaryAction(): boolean {\n    return this.isNext || this.isDanger || this.isFinish;\n  }\n\n  public get _disabledAttribute(): string | null {\n    if (this.isDisabled) {\n      return '';\n    }\n    return null;\n  }\n\n  public get isDisabled(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const disabled = true;\n    const nav = this.navService;\n    const page = this.navService.currentPage;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !disabled;\n    }\n\n    if (this.disabled || nav.wizardStopNavigation || !page) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !disabled;\n    }\n\n    if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n      return disabled;\n    }\n\n    if (this.isDanger && !page.readyToComplete) {\n      return disabled;\n    }\n\n    if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    return !disabled;\n  }\n\n  public get isHidden(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const hidden = true;\n    const nav = this.navService;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !hidden;\n    }\n\n    if (this.hidden) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !hidden;\n    }\n\n    if (this.isPrevious && nav.currentPageIsFirst) {\n      return hidden;\n    }\n\n    if (this.isNext && nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    if (this.isFinish && !nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    return !hidden;\n  }\n\n  click(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.wasClicked.emit(this.type);\n    this.buttonService.buttonClicked(this.type);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-wizard-title, clr-wizard-pagetitle' })\nexport class ClrWizardCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { PageCollectionService } from './providers/page-collection.service';\n\n@Component({\n  selector: 'clr-wizard-stepnav',\n  template: `\n    <div class=\"clr-wizard-stepnav-list\">\n      <div\n        *ngFor=\"let page of pageService.pages; let i = index\"\n        clr-wizard-stepnav-item\n        [page]=\"page\"\n        class=\"clr-wizard-stepnav-item\"\n      >\n        {{ i + 1 }}\n      </div>\n    </div>\n  `,\n  host: { class: 'clr-wizard-stepnav' },\n})\nexport class ClrWizardStepnav {\n  constructor(public pageService: PageCollectionService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: '[clr-wizard-stepnav-item]',\n  template: `\n    <button\n      type=\"button\"\n      class=\"btn btn-link clr-wizard-stepnav-link\"\n      (click)=\"click()\"\n      [attr.disabled]=\"isDisabled ? '' : null\"\n    >\n      <span class=\"clr-wizard-stepnav-link-suffix\">\n        <cds-icon\n          shape=\"error-standard\"\n          status=\"danger\"\n          class=\"clr-wizard-stepnav-item-error-icon\"\n          *ngIf=\"hasError\"\n        ></cds-icon>\n        <ng-content *ngIf=\"!hasError\"></ng-content>\n      </span>\n      <span class=\"clr-wizard-stepnav-link-title\">\n        <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template>\n      </span>\n    </button>\n  `,\n  host: {\n    '[id]': 'id',\n    '[attr.aria-current]': 'stepAriaCurrent',\n    '[attr.aria-controls]': 'id',\n    '[class.clr-nav-link]': 'true',\n    '[class.nav-item]': 'true',\n    '[class.active]': 'isCurrent',\n    '[class.disabled]': 'isDisabled',\n    '[class.no-click]': '!canNavigate',\n    '[class.complete]': 'isComplete',\n    '[class.error]': 'hasError',\n  },\n})\nexport class ClrWizardStepnavItem {\n  @Input('page') public page: ClrWizardPage;\n\n  constructor(public navService: WizardNavigationService, public pageCollection: PageCollectionService) {}\n\n  private pageGuard(): void {\n    if (!this.page) {\n      throw new Error('Wizard stepnav item is not associated with a wizard page.');\n    }\n  }\n\n  public get id(): string {\n    this.pageGuard();\n    return this.pageCollection.getStepItemIdForPage(this.page);\n  }\n\n  public get stepAriaCurrent(): string {\n    return this.isCurrent && 'step';\n  }\n\n  public get isDisabled(): boolean {\n    this.pageGuard();\n    return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n  }\n\n  public get isCurrent(): boolean {\n    this.pageGuard();\n    return this.page.current;\n  }\n\n  public get isComplete(): boolean {\n    this.pageGuard();\n    return this.page.completed;\n  }\n\n  public get hasError(): boolean {\n    this.pageGuard();\n    return this.page.hasError && this.isComplete;\n  }\n\n  public get canNavigate(): boolean {\n    this.pageGuard();\n    return this.pageCollection.previousPageIsCompleted(this.page);\n  }\n\n  click(): void {\n    this.pageGuard();\n\n    // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n    if (this.isDisabled || this.isCurrent) {\n      return;\n    }\n\n    this.navService.goTo(this.page);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStrategy {\n  Default = 'default', // only one panel at a time\n  Multi = 'multi', // can have multiple panels open at a time\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStatus {\n  Inactive = 'inactive',\n  Error = 'error',\n  Complete = 'complete',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClarityIcons, errorStandardIcon } from '@cds/core/icon';\n\nimport { ClrAlertModule } from '../emphasis/alert/alert.module';\nimport { ClrModalModule } from '../modal/modal.module';\n\nimport { ClrWizard } from './wizard';\nimport { ClrWizardButton } from './wizard-button';\nimport { ClrWizardCustomTags } from './wizard-custom-tags';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\nimport { ClrWizardStepnav } from './wizard-stepnav';\nimport { ClrWizardStepnavItem } from './wizard-stepnav-item';\n\nexport const CLR_WIZARD_DIRECTIVES: any[] = [\n  ClrWizard,\n  ClrWizardPage,\n  ClrWizardStepnav,\n  ClrWizardStepnavItem,\n  ClrWizardButton,\n  ClrWizardHeaderAction,\n  ClrWizardCustomTags,\n  ClrWizardPageTitle,\n  ClrWizardPageNavTitle,\n  ClrWizardPageButtons,\n  ClrWizardPageHeaderActions,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrModalModule, ClrAlertModule],\n  declarations: [CLR_WIZARD_DIRECTIVES],\n  exports: [CLR_WIZARD_DIRECTIVES],\n})\nexport class ClrWizardModule {\n  constructor() {\n    ClarityIcons.addIcons(errorStandardIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\n\nlet accordionCount = 0;\n\nexport class AccordionPanelModel {\n  status = AccordionStatus.Inactive;\n  index: number = null;\n  disabled = false;\n  open = false;\n  templateId = `${this.id}-${this.accordionId}`;\n  constructor(public id: string, public accordionId: number | string) {}\n}\n\nexport class AccordionModel {\n  protected strategy = AccordionStrategy.Default;\n  protected accordionCount = accordionCount++;\n  protected _panels: { [id: string]: AccordionPanelModel } = {};\n\n  get panels(): AccordionPanelModel[] {\n    return Object.keys(this._panels).map(id => this._panels[id]);\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.strategy = strategy;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    ids.forEach((id, index) => (this._panels[id].index = index));\n    this.removeOldPanels(ids);\n  }\n\n  addPanel(id: string, open = false) {\n    this._panels[id] = new AccordionPanelModel(id, this.accordionCount);\n    this._panels[id].open = open;\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    const panelIsOpen = this._panels[panelId].open;\n    if (this.strategy === AccordionStrategy.Default) {\n      this.closeAllPanels();\n    }\n\n    this._panels[panelId].open = open !== undefined ? open : !panelIsOpen;\n  }\n\n  disablePanel(panelId: string, disabled: boolean) {\n    this._panels[panelId].disabled = disabled;\n  }\n\n  private closeAllPanels() {\n    this.panels.forEach(panel => (this._panels[panel.id].open = false));\n  }\n\n  private removeOldPanels(ids: string[]) {\n    this.panels\n      .filter(panel => ids.find(id => id === panel.id) === undefined)\n      .forEach(panel => delete this._panels[panel.id]);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccordionModel, AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\n\n@Injectable()\nexport class AccordionService {\n  protected accordion = new AccordionModel();\n  protected readonly _panelsChanges = new BehaviorSubject<AccordionPanelModel[]>(this.accordion.panels);\n\n  getPanelChanges(panelId: string): Observable<AccordionPanelModel> {\n    return this._panelsChanges.pipe(map(panels => panels.find(s => s.id === panelId)));\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.accordion.setStrategy(strategy);\n  }\n\n  addPanel(panelId: string, open = false) {\n    this.accordion.addPanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    this.accordion.togglePanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  disablePanel(panelId: string, disabled?: boolean) {\n    this.accordion.disablePanel(panelId, disabled);\n    this.emitUpdatedPanels();\n  }\n\n  updatePanelOrder(ids: string[]) {\n    this.accordion.updatePanelOrder(ids);\n    this.emitUpdatedPanels();\n  }\n\n  protected emitUpdatedPanels() {\n    this._panelsChanges.next(this.accordion.panels);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const defaultAnimationTiming = '0.2s ease-in-out';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { defaultAnimationTiming } from '../../utils/animations/constants';\n\nexport const panelAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n  ]),\n];\n\nexport const stepAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n    transition('* => void', [\n      style({ display: 'block' }),\n      animate(defaultAnimationTiming, style({ height: 0, display: 'none' })),\n    ]),\n  ]),\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-description, clr-step-description',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-description]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionDescription {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  SimpleChanges,\n  Inject,\n  OnInit,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { panelAnimation } from './utils/animation';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\n\n@Component({\n  selector: 'clr-accordion-panel',\n  templateUrl: './accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: panelAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrAccordionPanel implements OnInit, OnChanges {\n  @Input('clrAccordionPanelDisabled') disabled = false;\n  @Input('clrAccordionPanelOpen') panelOpen = false;\n  @Output('clrAccordionPanelOpenChange') panelOpenChange = new EventEmitter<boolean>();\n  @ContentChildren(ClrAccordionDescription) accordionDescription: QueryList<ClrAccordionDescription>;\n\n  panel: Observable<AccordionPanelModel>;\n  readonly AccordionStatus = AccordionStatus;\n  isAccordion = true;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private accordionService: AccordionService,\n    private ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) private _id: string\n  ) {}\n\n  ngOnInit() {\n    this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(panel => this.emitPanelChange(panel)));\n    this.accordionService.addPanel(this.id, this.panelOpen);\n    this.accordionService.togglePanel(this.id, this.panelOpen);\n    this.accordionService.disablePanel(this.id, this.disabled);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {\n      this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);\n    }\n\n    if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {\n      this.accordionService.disablePanel(this.id, changes.disabled.currentValue);\n    }\n  }\n\n  togglePanel() {\n    this.accordionService.togglePanel(this.id);\n  }\n\n  collapsePanelOnAnimationDone(panel: AccordionPanelModel) {\n    if (!panel.open) {\n      this.ifExpandService.expanded = false;\n    }\n  }\n\n  getPanelStateClasses(panel: AccordionPanelModel) {\n    return `clr-accordion-panel-${panel.status} ${panel.open ? 'clr-accordion-panel-open' : ''}`;\n  }\n\n  getAccordionContentId(id: string) {\n    return `clr-accordion-content-${id}'`;\n  }\n\n  getAccordionHeaderId(id: string) {\n    return `clr-accordion-header-${id}`;\n  }\n\n  private emitPanelChange(panel: AccordionPanelModel) {\n    if (panel.open !== this.panelOpen) {\n      this.panelOpenChange.emit(panel.open);\n    }\n\n    if (panel.open) {\n      this.ifExpandService.expanded = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-title, clr-step-title',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-title]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionTitle {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { AccordionService } from './providers/accordion.service';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { AccordionStrategy } from './enums/accordion-strategy.enum';\n\n@Component({\n  selector: 'clr-accordion',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion]': 'true' },\n  providers: [AccordionService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordion implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrAccordionMultiPanel') multiPanel = false;\n  @ContentChildren(ClrAccordionPanel, { descendants: true })\n  panels: QueryList<ClrAccordionPanel>;\n  subscriptions: Subscription[] = [];\n\n  constructor(private accordionService: AccordionService) {}\n\n  ngOnInit() {\n    this.setAccordionStrategy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.multiPanel.currentValue !== changes.multiPanel.previousValue) {\n      this.setAccordionStrategy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private setAccordionStrategy() {\n    const strategy = this.multiPanel ? AccordionStrategy.Multi : AccordionStrategy.Default;\n    this.accordionService.setStrategy(strategy);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes\n      .pipe(startWith(this.panels))\n      .subscribe((panels: QueryList<ClrAccordionPanel>) =>\n        this.accordionService.updatePanelOrder(panels.toArray().map(p => p.id))\n      );\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-content, clr-step-content',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-accordion' })\nexport class AccordionWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../utils/chocolate/oompa-loompa';\nimport { AccordionWillyWonka } from './accordion-willy-wonka';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-accordion-panel' })\nexport class AccordionOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: AccordionWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-accordion-panel should only be used inside of clr-accordion');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { ClrAccordionTitle } from './accordion-title';\nimport { ClrAccordionDescription } from './accordion-description';\nimport { ClrAccordion } from './accordion';\nimport { ClrAccordionContent } from './accordion-content';\nimport { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';\nimport { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';\nimport { angleIcon, checkCircleIcon, ClarityIcons, exclamationCircleIcon } from '@cds/core/icon';\n\nconst declarations = [\n  ClrAccordion,\n  ClrAccordionPanel,\n  ClrAccordionTitle,\n  ClrAccordionDescription,\n  ClrAccordionContent,\n  AccordionOompaLoompa,\n  AccordionWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [...declarations],\n  exports: [...declarations],\n})\nexport class ClrAccordionModule {\n  constructor() {\n    ClarityIcons.addIcons(angleIcon, exclamationCircleIcon, checkCircleIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionModel } from '../../models/accordion.model';\nimport { AccordionStatus } from '../../enums/accordion-status.enum';\n\nexport class StepperModel extends AccordionModel {\n  private stepperModelInitialize = false;\n\n  get allPanelsCompleted(): boolean {\n    return this.panels.length && this.getNumberOfIncompletePanels() === 0 && this.getNumberOfOpenPanels() === 0;\n  }\n\n  addPanel(id: string, open = false) {\n    super.addPanel(id, open);\n    this._panels[id].disabled = true;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    super.updatePanelOrder(ids);\n    if (this.stepperModelInitialize === false) {\n      this.openFirstPanel();\n    }\n  }\n\n  togglePanel(panelId: string) {\n    if (this._panels[panelId].status === AccordionStatus.Complete) {\n      this._panels[panelId].open = !this._panels[panelId].open;\n    }\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    if (currentPanelValid) {\n      this.completePanel(currentPanelId);\n      this.openNextPanel(this._panels[currentPanelId].id);\n    } else {\n      this.setPanelError(currentPanelId);\n    }\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.panels\n      .filter(() => this._panels[panelId] !== undefined)\n      .forEach(panel => {\n        if (panel.index < this._panels[panelId].index) {\n          this.completePanel(panel.id);\n        } else if (panel.id === panelId) {\n          this._panels[panel.id].open = true;\n        } else {\n          this._panels[panel.id].open = false;\n        }\n      });\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    ids.forEach(id => this.setPanelError(id));\n  }\n\n  resetPanels() {\n    /* return stepper to initialize state */\n    this.stepperModelInitialize = false;\n    this.panels.forEach(p => this.resetPanel(p.id));\n    this.openFirstPanel();\n  }\n\n  getNextPanel(currentPanelId: string) {\n    return this.panels.find(s => s.index === this._panels[currentPanelId].index + 1);\n  }\n\n  private resetAllFuturePanels(panelId: string) {\n    this.panels.filter(panel => panel.index >= this._panels[panelId].index).forEach(panel => this.resetPanel(panel.id));\n  }\n\n  private resetPanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Inactive;\n    this._panels[panelId].open = false;\n    this._panels[panelId].disabled = true;\n  }\n\n  private openFirstPanel() {\n    const firstPanel = this.getFirstPanel();\n    /**\n     * You need to call updatePanelOrder first to get the correct order,\n     * else the list of panels will not have `index` set and we won't know\n     * how to find the first panel.\n     */\n    if (!firstPanel) {\n      return;\n    }\n\n    this._panels[firstPanel.id].open = true;\n    this._panels[firstPanel.id].disabled = true;\n    this.stepperModelInitialize = true;\n  }\n\n  private completePanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Complete;\n    this._panels[panelId].disabled = false;\n    this._panels[panelId].open = false;\n  }\n\n  private openNextPanel(currentPanelId: string) {\n    const nextPanel = this.getNextPanel(currentPanelId);\n\n    if (nextPanel) {\n      this.resetAllFuturePanels(nextPanel.id);\n      this._panels[nextPanel.id].open = true;\n      this._panels[nextPanel.id].disabled = true;\n    }\n  }\n\n  private setPanelError(panelId: string) {\n    this.resetAllFuturePanels(panelId);\n    this._panels[panelId].open = true;\n    this._panels[panelId].status = AccordionStatus.Error;\n  }\n\n  private getFirstPanel() {\n    return this.panels.find(panel => panel.index === 0);\n  }\n\n  private getNumberOfIncompletePanels() {\n    return this.panels.reduce((prev, next) => (next.status !== AccordionStatus.Complete ? prev + 1 : prev), 0);\n  }\n\n  private getNumberOfOpenPanels() {\n    return this.panels.reduce((prev, next) => (next.open !== false ? prev + 1 : prev), 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AccordionService } from './../../providers/accordion.service';\nimport { StepperModel } from '../models/stepper.model';\n\n@Injectable()\nexport class StepperService extends AccordionService {\n  readonly panelsCompleted = this.getAllCompletedPanelChanges();\n  protected accordion = new StepperModel();\n\n  private _activeStepChanges = new Subject<string>();\n  readonly activeStep = this._activeStepChanges.asObservable();\n\n  resetPanels() {\n    this.accordion.resetPanels();\n    this.emitUpdatedPanels();\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    this.accordion.setPanelsWithErrors(ids);\n    this.emitUpdatedPanels();\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    this.accordion.navigateToNextPanel(currentPanelId, currentPanelValid);\n    this.updateNextStep(currentPanelId, currentPanelValid);\n    this.emitUpdatedPanels();\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.accordion.overrideInitialPanel(panelId);\n    this.emitUpdatedPanels();\n  }\n\n  private updateNextStep(currentPanelId: string, currentPanelValid: boolean) {\n    const nextPanel = this.accordion.getNextPanel(currentPanelId);\n\n    if (currentPanelValid && nextPanel) {\n      this._activeStepChanges.next(nextPanel.id);\n    } else if (currentPanelValid) {\n      this._activeStepChanges.next(currentPanelId);\n    }\n  }\n\n  private getAllCompletedPanelChanges(): Observable<boolean> {\n    return this._panelsChanges.pipe(\n      map(() => this.accordion.allPanelsCompleted),\n      distinctUntilChanged()\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport function triggerAllFormControlValidation(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    } else if (control instanceof FormGroup) {\n      triggerAllFormControlValidation(control);\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener, HostBinding, Input, OnInit } from '@angular/core';\n\nimport { StepperService } from './providers/stepper.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\nexport enum ClrStepButtonType {\n  Next = 'next',\n  Submit = 'submit',\n}\n\n@Directive({\n  selector: '[clrStepButton]',\n  host: {\n    '[class.clr-step-button]': 'true',\n    '[class.btn]': 'true',\n    '[type]': \"'button'\",\n  },\n})\nexport class ClrStepButton implements OnInit {\n  @Input('clrStepButton') type: ClrStepButtonType | string = ClrStepButtonType.Next;\n  @HostBinding('class.btn-primary') submitButton = false;\n\n  constructor(private clrStep: ClrStepperPanel, private stepperService: StepperService) {}\n\n  ngOnInit() {\n    this.submitButton = this.type === ClrStepButtonType.Submit;\n  }\n\n  @HostListener('click')\n  navigateToNextPanel() {\n    this.stepperService.navigateToNextPanel(this.clrStep.id, this.clrStep.formGroup.valid);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  Inject,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { FormGroupName, NgModelGroup } from '@angular/forms';\nimport { tap, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { StepperService } from './providers/stepper.service';\nimport { stepAnimation } from '../utils/animation';\nimport { triggerAllFormControlValidation } from '../../utils/forms/validation';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\nimport { ClrAccordionPanel } from '../accordion-panel';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-stepper-panel',\n  templateUrl: './../accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: stepAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrStepperPanel extends ClrAccordionPanel implements OnInit {\n  isAccordion = false;\n\n  @ViewChild('headerButton') headerButton: ElementRef;\n  private subscriptions: Subscription[] = [];\n\n  get formGroup() {\n    return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;\n  }\n\n  get id(): string {\n    return this.formGroupName ? this.formGroupName.name.toString() : this.ngModelGroup.name;\n  }\n\n  set id(_value: string) {\n    // overriding parent id required empty setter\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: any,\n    public commonStrings: ClrCommonStringsService,\n    @Optional() private formGroupName: FormGroupName,\n    @Optional() private ngModelGroup: NgModelGroup,\n    private stepperService: StepperService,\n    ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) id: string\n  ) {\n    super(commonStrings, stepperService, ifExpandService, id);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panel = this.panel.pipe(tap(panel => this.triggerAllFormControlValidationIfError(panel)));\n    this.stepperService.disablePanel(this.id, true);\n    this.listenToFocusChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenToFocusChanges() {\n    this.subscriptions.push(\n      this.stepperService.activeStep\n        .pipe(filter(panelId => isPlatformBrowser(this.platformId) && panelId === this.id))\n        .subscribe(() => this.headerButton.nativeElement.focus())\n    );\n  }\n\n  private triggerAllFormControlValidationIfError(panel: AccordionPanelModel) {\n    if (panel.status === AccordionStatus.Error) {\n      triggerAllFormControlValidation(this.formGroup);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  Optional,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroupDirective, NgForm } from '@angular/forms';\nimport { startWith, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { StepperService } from './providers/stepper.service';\nimport { AccordionService } from '../providers/accordion.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\n@Component({\n  selector: 'form[clrStepper]',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class.clr-accordion]': 'true',\n    '[class.clr-stepper-forms]': 'true',\n  },\n  providers: [StepperService, { provide: AccordionService, useExisting: StepperService }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrInitialStep') initialPanel: string;\n  @ContentChildren(ClrStepperPanel, { descendants: true })\n  panels: QueryList<ClrStepperPanel>;\n  subscriptions: Subscription[] = [];\n  form: FormGroupDirective | NgForm;\n\n  constructor(\n    @Optional() private formGroup: FormGroupDirective,\n    @Optional() private ngForm: NgForm,\n    private stepperService: StepperService\n  ) {}\n\n  ngOnInit() {\n    if (!this.formGroup && !this.ngForm) {\n      throw new Error('To use stepper a Reactive or Template Form is required.');\n    }\n\n    this.form = this.formGroup ? this.formGroup : this.ngForm;\n    this.subscriptions.push(this.listenForPanelsCompleted());\n    this.subscriptions.push(this.listenForFormResetChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.initialPanel.currentValue !== changes.initialPanel.previousValue) {\n      this.stepperService.overrideInitialPanel(this.initialPanel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForFormResetChanges() {\n    return this.form.statusChanges\n      .pipe(filter(() => this.form.pristine)) // https://github.com/angular/angular/issues/10887\n      .subscribe(() => this.stepperService.resetPanels());\n  }\n\n  private listenForPanelsCompleted() {\n    return this.stepperService.panelsCompleted.subscribe(panelsCompleted => {\n      if (panelsCompleted && this.form.valid) {\n        this.form.ngSubmit.emit();\n      } else if (!this.form.valid && this.form.touched) {\n        this.setPanelsWithFormErrors();\n      }\n    });\n  }\n\n  private setPanelsWithFormErrors() {\n    const panelsWithErrors = this.panels.reduce((panels, p) => (p.formGroup.invalid ? [...panels, p.id] : panels), []);\n    this.stepperService.setPanelsWithErrors(panelsWithErrors);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes.pipe(startWith(this.panels)).subscribe((panels: QueryList<ClrStepperPanel>) => {\n      this.stepperService.updatePanelOrder(panels.toArray().map(p => p.id));\n\n      if (this.initialPanel) {\n        this.stepperService.overrideInitialPanel(this.initialPanel);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'form[clrStepper]' })\nexport class StepperWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { StepperWillyWonka } from './stepper-willy-wonka';\nimport { IfExpandService } from '../../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-stepper-panel, [clrStepButton]' })\nexport class StepperOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: StepperWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-stepper-panel should only be used inside of clrStepper');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAccordionModule } from '../accordion.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrStepButton } from './../stepper/step-button';\nimport { ClrStepper } from './../stepper/stepper';\nimport { ClrStepperPanel } from './stepper-panel';\nimport { StepperOompaLoompa } from './chocolate/stepper-oompa-loompa';\nimport { StepperWillyWonka } from './chocolate/stepper-willy-wonka';\n\nconst declarations = [ClrStepper, ClrStepButton, ClrStepperPanel, StepperOompaLoompa, StepperWillyWonka];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrAccordionModule],\n  declarations: [...declarations],\n  exports: [...declarations, ClrAccordionModule],\n})\nexport class ClrStepperModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n@Component({\n  selector: 'clr-progress-bar',\n  template: `\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayStringValue()\">{{ displayValue }}</span>\n  `,\n})\nexport class ClrProgressBar {\n  /**\n   * Handle component ID\n   */\n  private _ID: string;\n  @HostBinding('attr.id') externalId = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n\n  // Progress\n  @Input('clrMax') max = 100;\n  @Input('clrDisplayval') displayval: string;\n\n  private _value = 0;\n  @Input('clrValue')\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n  }\n\n  // Styles\n  @HostBinding('class.progress')\n  get progressClass() {\n    return true;\n  }\n\n  private _labeled: boolean;\n  @HostBinding('class.labeled')\n  get labeledClass() {\n    return this._labeled;\n  }\n\n  @Input('clrLabeled')\n  set clrLabeled(value: boolean | string) {\n    this._labeled = isBooleanAttributeSet(value);\n  }\n\n  private _fade: boolean;\n  @HostBinding('class.progress-fade')\n  get fadeClass() {\n    return this._fade;\n  }\n\n  @Input('clrFade')\n  set clrFade(value: boolean | string) {\n    this._fade = isBooleanAttributeSet(value);\n  }\n\n  private _loop: boolean;\n  @HostBinding('class.loop')\n  get loopClass() {\n    return this._loop;\n  }\n\n  @Input('clrLoop')\n  set clrLoop(value: boolean | string) {\n    this._loop = isBooleanAttributeSet(value);\n  }\n\n  private _success: boolean;\n  @HostBinding('class.success')\n  get successClass() {\n    return this._success;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrSuccess')\n  set clrSuccess(value: boolean | string) {\n    this._success = isBooleanAttributeSet(value);\n  }\n\n  private _danger: boolean;\n  @HostBinding('class.danger')\n  get dangerClass() {\n    return this._danger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrDanger')\n  set clrDanger(value: boolean | string) {\n    this._danger = isBooleanAttributeSet(value);\n  }\n\n  private _flash: boolean;\n  @HostBinding('class.flash')\n  get flashClass() {\n    return this._flash;\n  }\n\n  @Input('clrFlash')\n  set clrFlash(value: boolean | string) {\n    this._flash = isBooleanAttributeSet(value);\n  }\n\n  private _flashDanger: boolean;\n  @HostBinding('class.flash-danger')\n  get flashDangerClass() {\n    return this._flashDanger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrFlashDanger')\n  set clrFlashDanger(value: boolean | string) {\n    this._flashDanger = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * Display optional text only when labeled is eneabled\n   */\n  displayStringValue() {\n    return this._labeled;\n  }\n\n  /**\n   * Make sure that we always will have something that is readable\n   * for the screen reader\n   */\n  get displayValue() {\n    if (this.displayval) {\n      return this.displayval;\n    }\n    return `${this.value || 0}%`;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineStepState {\n  NOT_STARTED = 'not-started',\n  CURRENT = 'current',\n  PROCESSING = 'processing',\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrProgressBar } from './progress-bar';\n\nexport const CLR_PROGRESS_BAR_DIRECTIVES: Type<any>[] = [ClrProgressBar];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_PROGRESS_BAR_DIRECTIVES],\n  exports: [CLR_PROGRESS_BAR_DIRECTIVES],\n})\nexport class ClrProgressBarModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrTimelineStepState } from '../enums/timeline-step-state.enum';\nimport { IconAttributes } from '../interface/icon-attribute.interface';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TimelineIconAttributeService {\n  private attributeMap: Map<ClrTimelineStepState, IconAttributes> = new Map<ClrTimelineStepState, IconAttributes>();\n\n  constructor(commonStrings: ClrCommonStringsService) {\n    this.attributeMap.set(ClrTimelineStepState.NOT_STARTED, {\n      iconShape: 'circle',\n      iconStatus: null,\n      ariaLabel: commonStrings.keys.timelineStepNotStarted,\n    });\n    this.attributeMap.set(ClrTimelineStepState.CURRENT, {\n      iconShape: 'dot-circle',\n      iconStatus: 'info',\n      ariaLabel: commonStrings.keys.timelineStepCurrent,\n    });\n    this.attributeMap.set(ClrTimelineStepState.PROCESSING, {\n      iconShape: undefined,\n      iconStatus: null,\n      ariaLabel: commonStrings.keys.timelineStepProcessing,\n    });\n    this.attributeMap.set(ClrTimelineStepState.SUCCESS, {\n      iconShape: 'success-standard',\n      iconStatus: 'success',\n      ariaLabel: commonStrings.keys.timelineStepSuccess,\n    });\n    this.attributeMap.set(ClrTimelineStepState.ERROR, {\n      iconShape: 'error-standard',\n      iconStatus: 'danger',\n      ariaLabel: commonStrings.keys.timelineStepError,\n    });\n  }\n\n  public getAriaLabel(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).ariaLabel;\n  }\n\n  public getIconShape(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).iconShape;\n  }\n\n  public getIconStatus(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).iconStatus;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, HostBinding } from '@angular/core';\n\nimport { ClrTimelineLayout } from './enums/timeline-layout.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\n\n@Component({\n  selector: 'clr-timeline',\n  template: ` <ng-content></ng-content> `,\n  host: { '[class.clr-timeline]': 'true' },\n  providers: [TimelineIconAttributeService],\n})\nexport class ClrTimeline {\n  @Input('clrLayout') layout: ClrTimelineLayout = ClrTimelineLayout.HORIZONTAL;\n\n  @HostBinding('class.clr-timeline-vertical')\n  get isVertical(): boolean {\n    return this.layout === ClrTimelineLayout.VERTICAL;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n/**\n * Note: Why does this component have aria-hidden attribute?\n *\n * tl;dr: we want screen readers to ignore this element when its reading out to blind users.\n *\n * In order to make a timeline step accessible to screen readers we need the title read out before the\n * icon. In order to do this, ClrTimeLine step has a ContentChild that queries for the ClrTimelineStepTitle and\n * then adds the projected text into a .clr-sr-only element that is a sibling element to the icon. See the\n * ClrTimlineStep template for the DOM structure.\n */\n@Component({\n  selector: 'clr-timeline-step-title',\n  template: ` <ng-content></ng-content> `,\n  host: { '[class.clr-timeline-step-title]': 'true', '[attr.aria-hidden]': 'true' },\n})\nexport class ClrTimelineStepTitle {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, ElementRef, Inject, Input, PLATFORM_ID } from '@angular/core';\n\nimport { ClrTimelineStepState } from './enums/timeline-step-state.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-timeline-step',\n  template: `\n    <ng-content select=\"clr-timeline-step-header\"></ng-content>\n    <span class=\"clr-sr-only\">{{ stepTitleText }}</span>\n    <ng-container *ngIf=\"!isProcessing; else processing\">\n      <cds-icon\n        [attr.status]=\"iconStatus\"\n        [attr.shape]=\"iconShape\"\n        [attr.aria-label]=\"iconAriaLabel\"\n        [attr.aria-current]=\"iconAriaCurrent\"\n      >\n      </cds-icon>\n    </ng-container>\n    <div class=\"clr-timeline-step-body\">\n      <ng-content select=\"clr-timeline-step-title\"></ng-content>\n      <ng-content select=\"clr-timeline-step-description\"></ng-content>\n    </div>\n\n    <ng-template #processing>\n      <clr-spinner clrMedium [attr.aria-label]=\"iconAriaLabel\"></clr-spinner>\n    </ng-template>\n  `,\n  host: { '[class.clr-timeline-step]': 'true' },\n})\nexport class ClrTimelineStep {\n  @Input('clrState') state: ClrTimelineStepState = ClrTimelineStepState.NOT_STARTED;\n\n  public stepTitleText: string;\n  @ContentChild(ClrTimelineStepTitle, { read: ElementRef })\n  stepTitle: ElementRef;\n\n  constructor(\n    private iconAttributeService: TimelineIconAttributeService,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.stepTitle && isPlatformBrowser(this.platformId)) {\n      this.stepTitleText = this.stepTitle.nativeElement.innerText;\n    }\n  }\n\n  get iconAriaCurrent(): boolean {\n    return this.state === ClrTimelineStepState.CURRENT;\n  }\n\n  get iconAriaLabel(): string {\n    return this.iconAttributeService.getAriaLabel(this.state);\n  }\n\n  get iconShape(): string {\n    return this.iconAttributeService.getIconShape(this.state);\n  }\n\n  get iconStatus(): string {\n    return this.iconAttributeService.getIconStatus(this.state);\n  }\n\n  get isProcessing(): boolean {\n    return this.state === ClrTimelineStepState.PROCESSING;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-description',\n  template: ` <ng-content></ng-content> `,\n  host: { '[class.clr-timeline-step-description]': 'true' },\n})\nexport class ClrTimelineStepDescription {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-header',\n  template: ` <ng-content></ng-content> `,\n  host: { '[class.clr-timeline-step-header]': 'true' },\n})\nexport class ClrTimelineStepHeader {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { circleIcon, ClarityIcons, dotCircleIcon, errorStandardIcon, successStandardIcon } from '@cds/core/icon';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrSpinnerModule } from '../progress/spinner/spinner.module';\n\nimport { ClrTimeline } from './timeline';\nimport { ClrTimelineStep } from './timeline-step';\nimport { ClrTimelineStepDescription } from './timeline-step-description';\nimport { ClrTimelineStepHeader } from './timeline-step-header';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\n\nconst CLR_TIMELINE_DIRECTIVES: Type<any>[] = [\n  ClrTimeline,\n  ClrTimelineStep,\n  ClrTimelineStepDescription,\n  ClrTimelineStepHeader,\n  ClrTimelineStepTitle,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrSpinnerModule],\n  exports: [...CLR_TIMELINE_DIRECTIVES, ClrIconModule, ClrSpinnerModule],\n  declarations: [CLR_TIMELINE_DIRECTIVES],\n})\nexport class ClrTimelineModule {\n  constructor() {\n    ClarityIcons.addIcons(circleIcon, dotCircleIcon, errorStandardIcon, successStandardIcon);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonModule } from './button/button.module';\nimport { ClrDataModule } from './data/data.module';\nimport { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ClrEmphasisModule } from './emphasis/emphasis.module';\nimport { ClrFormsModule } from './forms/forms.module';\nimport { ClrIconModule } from './icon/icon.module';\nimport { ClrLayoutModule } from './layout/layout.module';\nimport { ClrModalModule } from './modal/modal.module';\nimport { ClrPopoverModule } from './popover/popover.module';\nimport { ClrConditionalModule } from './utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';\nimport { ClrLoadingModule } from './utils/loading/loading.module';\nimport { ClrWizardModule } from './wizard/wizard.module';\nimport { ClrStepperModule } from './accordion/stepper/stepper.module';\nimport { ClrSpinnerModule } from './progress/spinner/spinner.module';\nimport { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';\nimport { ClrPopoverModuleNext } from './utils/popover/popover.module';\nimport { ClrTimelineModule } from './timeline/timeline.module';\n\n// Register the icon library\nimport '@cds/core/icon/register';\n\n@NgModule({\n  exports: [\n    ClrEmphasisModule,\n    ClrDataModule,\n    ClrIconModule,\n    ClrModalModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n    ClrButtonModule,\n    ClrFormsModule,\n    ClrLayoutModule,\n    ClrPopoverModule,\n    ClrWizardModule,\n    ClrDragAndDropModule,\n    ClrStepperModule,\n    ClrSpinnerModule,\n    ClrProgressBarModule,\n    ClrPopoverModuleNext,\n    ClrTimelineModule,\n  ],\n})\nexport class ClarityModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { uniqueIdFactory } from '../id-generator/id-generator.service';\n\nexport enum ClrAriaLivePoliteness {\n  off = 'off',\n  polite = 'polite',\n  assertive = 'assertive',\n}\n\n/**\n * Time in milliseconds before inserting the content into the container\n */\nconst ARIA_LIVE_TICK = 100;\n\n/**\n * @deprecated\n *\n * -- ClrAriaLiveService is deprecated in 5.0 to be removed in 6.0 --\n * Please consider using the LiveAnnouncer in the Angular Material CDK\n * if your project needs this functionality.\n * More info: https://material.angular.io/cdk/a11y/overview#example-1\n *\n * This service handle `aria-live` accessibility attribute. The issue is that you need\n * to have the DOM Element with attribute `aria-live` before you could insert content\n * and SR (Screen Reader) pick the change and announce it.\n *\n * ```typescript\n * import { ClrAriaLiveService } from 'src/clr-angular/utils/a11y/aria-live.service';\n *\n * @Component({\n * selector: 'clr-demo-component',\n * providers: [ClrAriaLiveService],\n * template: `\n *   <ng-content></ng-content>\n * `,\n * })\n * export class DemoComponent {\n *  constructor(ariaLiveService: ClrAriaLiveService) {}\n *\n *  public actionThatWillTriggerChange() {\n *    this.ariaLiveService.announce('message that I want to announce to SR');\n *  }\n * }\n * ```\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrAriaLiveService implements OnDestroy {\n  private ariaLiveElement: HTMLElement;\n  private document: Document;\n  private previousTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(private ngZone: NgZone, @Inject(DOCUMENT) _document: any, @Inject(PLATFORM_ID) private platformId: any) {\n    this.document = _document;\n  }\n\n  private _id = `clr-aria-live-element-${uniqueIdFactory()}`;\n  /**\n   * get access to the internal HTML `id` that gonna be used for the AriaLive container.\n   * @return ID of the DOM Element as string.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Append text content inside the AriaLive Container. This method will check if the\n   * DOM Element is existing if not it will create one for us and the will apply the text.\n   *\n   * ```typescript\n   * this.ariaLiveService.announce(this.el.nativeElement);\n   * // or\n   * this.ariaLiveService.announce('Message to announce to SR');\n   * ```\n   *\n   * @remark\n   * When second argument is `AriaLivePoliteness.off` we won't create aria container or update it.\n   * The reason for that is that we don't want to do additional work if the SR will ignore it.\n   *\n   * @param message - This could be simple string or HTMLElement\n   * @param politeness - 'polite', 'assertive' or 'off'\n   */\n  public announce(\n    message: string | HTMLElement,\n    politeness: ClrAriaLivePoliteness = ClrAriaLivePoliteness.polite\n  ): void {\n    if (politeness === ClrAriaLivePoliteness.off) {\n      return;\n    }\n\n    if (!this.ariaLiveElement && isPlatformBrowser(this.platformId)) {\n      this.ariaLiveElement = this.createContainer();\n    }\n\n    message = typeof message !== 'string' && isPlatformBrowser(this.platformId) ? message.textContent : message;\n\n    // when there is no message do NOTHING!\n    if (!message) {\n      return;\n    }\n\n    this.ariaLiveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    this.ngZone.runOutsideAngular(() => {\n      // This clearTimeout will stop all older messages from announcing\n      // in the case where the messages are comming too fast we gonna try to append only\n      // the last one. That's what the SR will try to do anyway.\n      clearTimeout(this.previousTimeout);\n      this.previousTimeout = setTimeout(() => {\n        this.ariaLiveElement.textContent = message as string;\n      }, ARIA_LIVE_TICK);\n    });\n  }\n\n  /**\n   * onDestroy life cycle - must stop all active setTimeouts and remove the AriaLive\n   * container from the document.\n   */\n  public ngOnDestroy() {\n    clearTimeout(this.previousTimeout);\n    if (isPlatformBrowser(this.platformId) && this.ariaLiveElement) {\n      this.document.body.removeChild(this.ariaLiveElement);\n      this.ariaLiveElement = null;\n    }\n  }\n\n  /**\n   * Create AriaLive DOM element as a last child of the document.\n   * After the element is created, we gonna apply Clarity class to hide it from\n   * the screen and set the `aria-live` politness.\n   *\n   * `clr-sr-only` is the CSS class that is used to hide the element from the screen.\n   *\n   * @remark\n   * Calling this method multiple times will create multiple DOM Elements, that\n   * won't be tracked and will be GC after the service is destroyed.\n   *\n   * @return AriaLive container as HTMLElement\n   *\n   */\n  private createContainer(): HTMLElement {\n    const ariaLiveElement = this.document.createElement('div');\n\n    ariaLiveElement.setAttribute('id', this.id);\n    // Use clarity screen reader class to hide the dom element\n    // and fix the scrollbar shake\n    ariaLiveElement.classList.add('clr-sr-only');\n\n    ariaLiveElement.setAttribute('aria-atomic', 'true');\n    ariaLiveElement.setAttribute('aria-live', ClrAriaLivePoliteness.polite);\n\n    this.document.body.appendChild(ariaLiveElement);\n\n    return ariaLiveElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const CLR_MENU_POSITIONS: string[] = [\n  'bottom-left',\n  'bottom-right',\n  'top-left',\n  'top-right',\n  'left-bottom',\n  'left-top',\n  'right-bottom',\n  'right-top',\n];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, state, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function collapse(): AnimationMetadata[] {\n  'use strict';\n  return [\n    state('true', style({ height: 0, 'overflow-y': 'hidden' })),\n    transition('true => false', [animate(defaultAnimationTiming, style({ height: '*', 'overflow-y': 'hidden' }))]),\n    transition('false => true', [style({ height: '*', 'overflow-y': 'hidden' }), animate(defaultAnimationTiming)]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fade(opacity = 1): AnimationMetadata[] {\n  return [\n    transition('void => *', [style({ opacity: 0 }), animate(defaultAnimationTiming, style({ opacity: opacity }))]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0 }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ opacity: 0, transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0, transform: transform }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function slide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ transform: transform }))]),\n  ];\n}\n"]}