{"ast":null,"code":"import _classCallCheck from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { deepClone } from '../utils/identity.js';\nvar keyCodeRegistry = new Map([['arrow-left', 'ArrowLeft'], ['arrow-right', 'ArrowRight'], ['arrow-up', 'ArrowUp'], ['arrow-down', 'ArrowDown'], ['tab', 'Tab'], ['enter', 'Enter'], ['escape', 'Escape'], ['space', ' '], ['home', 'Home'], ['end', 'End']]);\n/**\n * KeyCodes is a static class that gives users the ability to lookup and even store\n * keycodes for their applications.\n *\n * @privateRemarks\n *\n * The key codes dictionary/hashmap is private to this module. There is no way to access it directly\n * outside of the module.\n *\n */\n\nexport var KeyCodeService = /*#__PURE__*/function () {\n  function KeyCodeService() {\n    _classCallCheck(this, KeyCodeService);\n  }\n\n  _createClass(KeyCodeService, null, [{\n    key: \"keycodes\",\n    get:\n    /**\n     * keycodes() returns a clone of the key codes dictionary/hashmap, not the actual registry.\n     * Performing actions on the return value of the keycodes getter will not be reflected in the\n     * actual keycodes dictionary!\n     */\n    function get() {\n      return deepClone(keyCodeRegistry);\n    }\n  }, {\n    key: \"add\",\n    value: function add(keycode, code) {\n      keyCodeRegistry.set(keycode, code);\n    }\n  }, {\n    key: \"has\",\n    value: function has(keycode) {\n      return keyCodeRegistry.has(keycode);\n    }\n  }, {\n    key: \"getCode\",\n    value: function getCode(keycode) {\n      var keyCodeRegistry = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.keycodes;\n      return getKeycodeFromRegistry(keycode, keyCodeRegistry);\n    }\n  }]);\n\n  return KeyCodeService;\n}();\nexport function getKeycodeFromRegistry(codeToLookup, registry) {\n  return registry.get(codeToLookup) || '';\n}","map":null,"metadata":{},"sourceType":"module"}