{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\nvar previousValues = new WeakMap();\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\n\nexport var ifDefined = directive(function (value) {\n  return function (part) {\n    var previousValue = previousValues.get(part);\n\n    if (value === undefined && part instanceof AttributePart) {\n      // If the value is undefined, remove the attribute, but only if the value\n      // was previously defined.\n      if (previousValue !== undefined || !previousValues.has(part)) {\n        var name = part.committer.name;\n        part.committer.element.removeAttribute(name);\n      }\n    } else if (value !== previousValue) {\n      part.setValue(value);\n    }\n\n    previousValues.set(part, value);\n  };\n});","map":null,"metadata":{},"sourceType":"module"}