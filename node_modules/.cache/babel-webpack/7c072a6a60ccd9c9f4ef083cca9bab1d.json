{"ast":null,"code":"/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n// DO NOT USE for conditionally applying behavior based on the host framework.\n// These utilities are only for detecting host frameworks for debugging and logging.\n// Host framework specific code should exist outside of the @cds/core package.\n// Get values once then cache\nvar angularVersion;\nvar angularJSVersion;\nvar reactVersion;\nvar vueVersion;\nexport function getAngularVersion() {\n  var useCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  if (!useCache || !angularVersion) {\n    var appRoot = document && document.querySelector('[ng-version]');\n    angularVersion = appRoot ? \"\".concat(appRoot.getAttribute('ng-version')) : undefined;\n  }\n\n  return angularVersion;\n}\nexport function getAngularJSVersion() {\n  var useCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _a, _b, _c;\n\n  if (!useCache || !angularVersion) {\n    angularJSVersion = (_c = (_b = (_a = window) === null || _a === void 0 ? void 0 : _a.angular) === null || _b === void 0 ? void 0 : _b.version) === null || _c === void 0 ? void 0 : _c.full;\n  }\n\n  return angularJSVersion;\n}\nexport function getReactVersion() {\n  var useCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  var _a, _b, _c;\n\n  if (!useCache || !reactVersion) {\n    if ((_c = (_b = (_a = window) === null || _a === void 0 ? void 0 : _a.CDS) === null || _b === void 0 ? void 0 : _b._react) === null || _c === void 0 ? void 0 : _c.version) {\n      reactVersion = window.CDS._react.version;\n    } else if (document.querySelector('[data-reactroot], [data-reactid]')) {\n      reactVersion = 'unknown version';\n    } else {\n      reactVersion = undefined;\n    }\n  }\n\n  return reactVersion;\n}\nexport function getVueVersion() {\n  var useCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n  if (!useCache || !vueVersion) {\n    var all = document.querySelectorAll('*');\n    var el;\n\n    for (var i = 0; i < all.length; i++) {\n      if (all[i].__vue__) {\n        el = all[i];\n        break;\n      }\n    }\n\n    vueVersion = el ? 'unknown version' : undefined;\n  }\n\n  return vueVersion;\n}\nexport function isStorybook() {\n  return window.location.href.includes('localhost:6006');\n}","map":null,"metadata":{},"sourceType":"module"}