{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _templateObject;\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { __decorate } from \"tslib\";\nimport { html, LitElement } from 'lit-element';\nimport { FocusTrap } from '../utils/focus-trap.js';\nimport { internalProperty, property } from '../decorators/property.js';\nimport { createId } from '../utils/identity.js';\nexport var CdsBaseFocusTrap = /*@__PURE__*/function () {\n  var CdsBaseFocusTrap = /*#__PURE__*/function (_LitElement) {\n    _inherits(CdsBaseFocusTrap, _LitElement);\n\n    var _super = _createSuper(CdsBaseFocusTrap);\n\n    function CdsBaseFocusTrap() {\n      var _this;\n\n      _classCallCheck(this, CdsBaseFocusTrap);\n\n      _this = _super.call(this);\n      /**\n       * Its recommended to remove or add a focus trap element from the DOM\n       * some SSR systems can have technical constraints where the item can\n       * only be removed via CSS/hidden.\n       */\n\n      _this.hidden = false;\n      _this.demoMode = false;\n      _this.focusTrapId = createId(); // if we see issues instantiating here, we should consider moving to\n      // firstUpdated()\n\n      _this.focusTrap = new FocusTrap(_assertThisInitialized(_this));\n      return _this;\n    }\n\n    _createClass(CdsBaseFocusTrap, [{\n      key: \"connectedCallback\",\n      value: function connectedCallback() {\n        _get(_getPrototypeOf(CdsBaseFocusTrap.prototype), \"connectedCallback\", this).call(this);\n\n        this.toggleFocusTrap();\n      }\n    }, {\n      key: \"disconnectedCallback\",\n      value: function disconnectedCallback() {\n        _get(_getPrototypeOf(CdsBaseFocusTrap.prototype), \"disconnectedCallback\", this).call(this);\n\n        this.focusTrap.removeFocusTrap();\n      }\n    }, {\n      key: \"attributeChangedCallback\",\n      value: function attributeChangedCallback(name, old, value) {\n        _get(_getPrototypeOf(CdsBaseFocusTrap.prototype), \"attributeChangedCallback\", this).call(this, name, old, value);\n\n        if (name === 'hidden' && old !== value) {\n          this.toggleFocusTrap();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return html(_templateObject || (_templateObject = _taggedTemplateLiteral([\"<slot></slot>\"])));\n      }\n    }, {\n      key: \"toggleFocusTrap\",\n      value: function toggleFocusTrap() {\n        if (!this.demoMode && !this.hasAttribute('hidden')) {\n          this.focusTrap.enableFocusTrap();\n        } else {\n          this.focusTrap.removeFocusTrap();\n        }\n      }\n    }]);\n\n    return CdsBaseFocusTrap;\n  }(LitElement);\n\n  __decorate([property({\n    type: Boolean\n  })], CdsBaseFocusTrap.prototype, \"hidden\", void 0);\n\n  __decorate([internalProperty({\n    type: Boolean,\n    reflect: true\n  })], CdsBaseFocusTrap.prototype, \"demoMode\", void 0);\n\n  __decorate([property({\n    type: String\n  })], CdsBaseFocusTrap.prototype, \"focusTrapId\", void 0);\n\n  return CdsBaseFocusTrap;\n}();","map":null,"metadata":{},"sourceType":"module"}