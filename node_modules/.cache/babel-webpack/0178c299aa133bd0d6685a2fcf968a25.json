{"ast":null,"code":"import _classCallCheck from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (c) 2016-2021 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport var componentStringsDefault = {\n  alert: {\n    closeButtonAriaLabel: 'Close',\n    loading: 'Loading',\n    info: 'Info',\n    success: 'Success',\n    warning: 'Warning',\n    danger: 'Error'\n  },\n  dropdown: {\n    open: 'Open'\n  },\n  file: {\n    browse: 'browse',\n    files: 'files',\n    removeFile: 'remove file'\n  },\n  modal: {\n    closeButtonAriaLabel: 'Close modal',\n    contentStart: 'Beginning of Modal Content',\n    contentBox: 'Scrollable Modal Body',\n    contentEnd: 'End of Modal Content'\n  },\n  password: {\n    showButtonAriaLabel: 'Show password',\n    hideButtonAriaLabel: 'Hide password'\n  }\n};\n/**\n * I18nService is a static class that gives users the ability to use and override\n * strings within the components for internationalization / globalization. One\n * can override default values globally for their application or override per\n * component instance as needed.\n *\n * Use the localize method to override values globally. For per component instance,\n * use the i18n decorator.\n */\n\nexport var I18nService = /*@__PURE__*/function () {\n  var I18nService = /*#__PURE__*/function () {\n    function I18nService() {\n      _classCallCheck(this, I18nService);\n    }\n\n    _createClass(I18nService, null, [{\n      key: \"keys\",\n      get: function get() {\n        return I18nService.strings;\n      }\n    }, {\n      key: \"localize\",\n      value: function localize(overrides) {\n        for (var _i = 0, _Object$keys = Object.keys(overrides); _i < _Object$keys.length; _i++) {\n          var key = _Object$keys[_i];\n          I18nService.strings[key] = Object.assign(Object.assign({}, I18nService.strings[key]), overrides[key]);\n        }\n      }\n    }]);\n\n    return I18nService;\n  }();\n\n  I18nService.strings = Object.assign({}, componentStringsDefault);\n  return I18nService;\n}();","map":null,"metadata":{},"sourceType":"module"}