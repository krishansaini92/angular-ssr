{"ast":null,"code":"import _classCallCheck from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/krishan/Documents/vmware/angular-ssr/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport var EventEmitter = /*#__PURE__*/function () {\n  function EventEmitter(target, eventName) {\n    _classCallCheck(this, EventEmitter);\n\n    this.target = target;\n    this.eventName = eventName;\n  }\n\n  _createClass(EventEmitter, [{\n    key: \"emit\",\n    value: function emit(value, options) {\n      this.target.dispatchEvent(new CustomEvent(this.eventName, Object.assign({\n        detail: value\n      }, options)));\n    }\n  }]);\n\n  return EventEmitter;\n}(); // Legacy TS Decorator\n\nfunction legacyEvent(descriptor, protoOrDescriptor, name) {\n  Object.defineProperty(protoOrDescriptor, name, descriptor);\n} // TC39 Decorators proposal\n\n\nfunction standardEvent(descriptor, element) {\n  return {\n    kind: 'method',\n    placement: 'prototype',\n    key: element.key,\n    descriptor: descriptor\n  };\n}\n\nexport function event() {\n  return function (protoOrDescriptor, name) {\n    var descriptor = {\n      get: function get() {\n        return new EventEmitter(this, name !== undefined ? name : protoOrDescriptor.key);\n      },\n      enumerable: true,\n      configurable: true\n    };\n    return name !== undefined ? legacyEvent(descriptor, protoOrDescriptor, name) : standardEvent(descriptor, protoOrDescriptor);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}