{"version":3,"file":"engine.js","sources":["../../../../../../modules/common/engine/src/utils.ts","../../../../../../modules/common/engine/src/file-loader.ts","../../../../../../modules/common/engine/src/inline-css-processor.ts","../../../../../../modules/common/engine/src/engine.ts","../../../../../../modules/common/engine/private_api.ts","../../../../../../modules/common/engine/public_api.ts","../../../../../../modules/common/engine/index.ts","../../../../../../modules/common/engine/engine.ts"],"names":["fs.readFile","fs.access","fs.constants"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as fs from 'fs';\nimport { promisify } from 'util';\n\nexport const readFile = promisify(fs.readFile);\nexport const access = promisify(fs.access);\n\nexport async function exists(path: fs.PathLike): Promise<boolean> {\n  try {\n    await access(path, fs.constants.F_OK);\n\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { readFile } from './utils';\n\n/** ResourceLoader implementation for loading files */\nexport class FileLoader implements ResourceLoader {\n  get(url: string): Promise<string> {\n    return readFile(url, 'utf-8');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport Critters from 'critters';\nimport { readFile } from './utils';\n\nexport interface InlineCriticalCssProcessOptions {\n  outputPath?: string;\n}\n\nexport interface InlineCriticalCssProcessorOptions {\n  minify?: boolean;\n  deployUrl?: string;\n}\n\nclass CrittersExtended extends Critters {\n  readonly warnings: string[] = [];\n  readonly errors: string[] = [];\n\n  constructor(\n    private readonly optionsExtended: InlineCriticalCssProcessorOptions & InlineCriticalCssProcessOptions,\n    private readonly resourceCache: Map<string, string>,\n  ) {\n    super({\n      logger: {\n        warn: (s: string) => this.warnings.push(s),\n        error: (s: string) => this.errors.push(s),\n        log: () => { },\n        info: () => { },\n      },\n      path: optionsExtended.outputPath,\n      publicPath: optionsExtended.deployUrl,\n      compress: !!optionsExtended.minify,\n      pruneSource: false,\n      reduceInlineStyles: false,\n      mergeStylesheets: false,\n      preload: 'media',\n      noscriptFallback: true,\n      // Cast any is needed because of logger API is not exposed as part of the options\n      // https://github.com/GoogleChromeLabs/critters/issues/66\n      // tslint:disable-next-line: no-any\n    } as any);\n  }\n\n  protected async readFile(path: string): Promise<string> {\n    let resourceContent = this.resourceCache.get(path);\n    if (resourceContent === undefined) {\n      resourceContent = await readFile(path, 'utf-8');\n      this.resourceCache.set(path, resourceContent);\n    }\n\n    return resourceContent;\n  }\n}\n\nexport class InlineCriticalCssProcessor {\n  private readonly resourceCache = new Map<string, string>();\n\n  constructor(protected readonly options: InlineCriticalCssProcessorOptions) { }\n\n  async process(html: string, options: InlineCriticalCssProcessOptions)\n    : Promise<{ content: string, warnings: string[], errors: string[] }> {\n\n    const critters = new CrittersExtended({ ...this.options, ...options }, this.resourceCache);\n    const content = await critters.process(html);\n\n    return {\n      content,\n      errors: critters.errors,\n      warnings: critters.warnings,\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ResourceLoader } from '@angular/compiler';\nimport { Compiler, CompilerFactory, NgModuleFactory, StaticProvider, Type } from '@angular/core';\nimport { INITIAL_CONFIG, platformDynamicServer, renderModuleFactory } from '@angular/platform-server';\nimport { dirname, resolve } from 'path';\n\nimport { FileLoader } from './file-loader';\nimport { InlineCriticalCssProcessor } from './inline-css-processor';\nimport { exists, readFile } from './utils';\n\n/** These are the allowed options for the render */\nexport interface RenderOptions {\n  bootstrap: Type<{}> | NgModuleFactory<{}>;\n  providers?: StaticProvider[];\n  url?: string;\n  document?: string;\n  documentFilePath?: string;\n  /**\n   * Reduce render blocking requests by inlining critical CSS.\n   * Defaults to false.\n   */\n  inlineCriticalCss?: boolean;\n  /**\n   * Base path location of index file.\n   * Defaults to the 'documentFilePath' dirname when not provided.\n   */\n  publicPath?: string;\n}\n\n/**\n * A common rendering engine utility. This abstracts the logic\n * for handling the platformServer compiler, the module cache, and\n * the document loader\n */\nexport class CommonEngine {\n\n  private readonly factoryCacheMap = new Map<Type<{}>, NgModuleFactory<{}>>();\n  private readonly templateCache = new Map<string, string>();\n  private readonly inlineCriticalCssProcessor: InlineCriticalCssProcessor;\n  private readonly pageExists = new Map<string, boolean>();\n\n  constructor(private moduleOrFactory?: Type<{}> | NgModuleFactory<{}>,\n              private providers: StaticProvider[] = []) {\n    this.inlineCriticalCssProcessor = new InlineCriticalCssProcessor({\n      minify: true,\n    });\n  }\n\n  /**\n   * Render an HTML document for a specific URL with specified\n   * render options\n   */\n  async render(opts: RenderOptions): Promise<string> {\n    if (opts.publicPath && opts.documentFilePath && opts.url !== undefined) {\n      const url = new URL(opts.url);\n      // Remove leading forward slash.\n      const pathname  = url.pathname.substring(1);\n      const pagePath = resolve(opts.publicPath, pathname, 'index.html');\n\n      if (pagePath !== resolve(opts.documentFilePath)) {\n        // View path doesn't match with prerender path.\n        let pageExists = this.pageExists.get(pagePath);\n        if (pageExists === undefined) {\n          pageExists = await exists(pagePath);\n          this.pageExists.set(pagePath, pageExists);\n        }\n\n        if (pageExists) {\n          // Serve pre-rendered page.\n          return readFile(pagePath, 'utf-8');\n        }\n      }\n    }\n\n    // if opts.document dosen't exist then opts.documentFilePath must\n    const extraProviders = [\n      ...(opts.providers || []),\n      ...(this.providers || []),\n    ];\n\n    let doc = opts.document;\n    if (!doc && opts.documentFilePath) {\n      doc = await this.getDocument(opts.documentFilePath);\n    }\n\n    if (doc) {\n      extraProviders.push({\n        provide: INITIAL_CONFIG,\n        useValue: {\n          document: opts.inlineCriticalCss\n            // Workaround for https://github.com/GoogleChromeLabs/critters/issues/64\n            ? doc.replace(/ media=\\\"print\\\" onload=\\\"this\\.media='all'\"><noscript><link .+?><\\/noscript>/g, '>')\n            : doc,\n          url: opts.url\n        }\n      });\n    }\n\n    const moduleOrFactory = this.moduleOrFactory || opts.bootstrap;\n    const factory = await this.getFactory(moduleOrFactory);\n\n    const html = await renderModuleFactory(factory, { extraProviders });\n    if (!opts.inlineCriticalCss) {\n      return html;\n    }\n\n    const { content, errors, warnings } = await this.inlineCriticalCssProcessor.process(html, {\n      outputPath: opts.publicPath ?? (opts.documentFilePath ? dirname(opts.documentFilePath) : undefined),\n    });\n\n    // tslint:disable-next-line: no-console\n    warnings.forEach(m => console.warn(m));\n    // tslint:disable-next-line: no-console\n    errors.forEach(m => console.error(m));\n\n    return content;\n  }\n\n  /** Return the factory for a given engine instance */\n  private async getFactory(moduleOrFactory: Type<{}> | NgModuleFactory<{}>): Promise<NgModuleFactory<{}>> {\n    // If module has been compiled AoT\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      return moduleOrFactory;\n    } else {\n      // we're in JIT mode\n      const moduleFactory = this.factoryCacheMap.get(moduleOrFactory);\n\n      // If module factory is cached\n      if (moduleFactory) {\n        return moduleFactory;\n      }\n\n      // Compile the module and cache it\n      const factory = await this.getCompiler().compileModuleAsync(moduleOrFactory);\n      this.factoryCacheMap.set(moduleOrFactory, factory);\n\n      return factory;\n    }\n  }\n\n  /** Retrieve the document from the cache or the filesystem */\n  private async getDocument(filePath: string): Promise<string> {\n    let doc = this.templateCache.get(filePath);\n\n    if (!doc) {\n      doc = await readFile(filePath, 'utf-8');\n      this.templateCache.set(filePath, doc);\n    }\n\n    return doc;\n  }\n\n  /** Return an instance of the platformServer compiler */\n  private getCompiler(): Compiler {\n    const compilerFactory: CompilerFactory = platformDynamicServer().injector.get(CompilerFactory);\n\n    return compilerFactory.createCompiler([\n      { providers: [{ provide: ResourceLoader, useClass: FileLoader, deps: [] }] }\n    ]);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {\n  CommonEngine as ɵCommonEngine,\n  RenderOptions as ɵRenderOptions,\n} from './src/engine';\n\nexport {\n  InlineCriticalCssProcessor as ɵInlineCriticalCssProcessor,\n} from './src/inline-css-processor';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './private_api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}